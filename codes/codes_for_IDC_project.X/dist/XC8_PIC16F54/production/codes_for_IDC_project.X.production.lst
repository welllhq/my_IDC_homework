

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Apr 21 19:18:09 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F88 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  0105                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  0105                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010F                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299                           
   300                           	psect	idataBANK0
   301  094C                     __pidataBANK0:	
   302                           
   303                           ;initializer for button_scan@key_up
   304  094C  3401               	retlw	1
   305  094D  3400               	retlw	0
   306                           
   307                           	psect	strings
   308  0002                     __pstrings:	
   309  0002                     stringtab:	
   310  0002                     __stringtab:	
   311                           
   312                           ;	String table - string pointers are 1 byte each
   313  0002  1BFF               	btfsc	btemp+1,7
   314  0003  280C               	ljmp	stringcode
   315  0004  1383               	bcf	3,7
   316  0005  187F               	btfsc	btemp+1,0
   317  0006  1783               	bsf	3,7
   318  0007  0800               	movf	0,w
   319  0008  0A84               	incf	4,f
   320  0009  1903               	skipnz
   321  000A  0AFF               	incf	btemp+1,f
   322  000B  0008               	return
   323  000C                     stringcode:	
   324  000C                     stringdir:	
   325  000C  3000               	movlw	high stringdir
   326  000D  008A               	movwf	10
   327  000E  0804               	movf	4,w
   328  000F  0A84               	incf	4,f
   329  0010  0782               	addwf	2,f
   330  0011                     __stringbase:	
   331  0011  3400               	retlw	0
   332  0012                     __end_of__stringtab:	
   333  0012                     _dpowers:	
   334  0012  3401               	retlw	1
   335  0013  3400               	retlw	0
   336  0014  3400               	retlw	0
   337  0015  3400               	retlw	0
   338  0016  340A               	retlw	10
   339  0017  3400               	retlw	0
   340  0018  3400               	retlw	0
   341  0019  3400               	retlw	0
   342  001A  3464               	retlw	100
   343  001B  3400               	retlw	0
   344  001C  3400               	retlw	0
   345  001D  3400               	retlw	0
   346  001E  34E8               	retlw	232
   347  001F  3403               	retlw	3
   348  0020  3400               	retlw	0
   349  0021  3400               	retlw	0
   350  0022  3410               	retlw	16
   351  0023  3427               	retlw	39
   352  0024  3400               	retlw	0
   353  0025  3400               	retlw	0
   354  0026  34A0               	retlw	160
   355  0027  3486               	retlw	134
   356  0028  3401               	retlw	1
   357  0029  3400               	retlw	0
   358  002A  3440               	retlw	64
   359  002B  3442               	retlw	66
   360  002C  340F               	retlw	15
   361  002D  3400               	retlw	0
   362  002E  3480               	retlw	128
   363  002F  3496               	retlw	150
   364  0030  3498               	retlw	152
   365  0031  3400               	retlw	0
   366  0032  3400               	retlw	0
   367  0033  34E1               	retlw	225
   368  0034  34F5               	retlw	245
   369  0035  3405               	retlw	5
   370  0036  3400               	retlw	0
   371  0037  34CA               	retlw	202
   372  0038  349A               	retlw	154
   373  0039  343B               	retlw	59
   374  003A                     __end_of_dpowers:	
   375  0006                     _PORTBbits	set	6
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  0032                     _RB2	set	50
   379  0031                     _RB1	set	49
   380  0037                     _RB7	set	55
   381  0036                     _RB6	set	54
   382  0035                     _RB5	set	53
   383  0034                     _RB4	set	52
   384  00FA                     _GO_DONE	set	250
   385  00F8                     _ADON	set	248
   386  00FF                     _ADCS1	set	255
   387  00FE                     _ADCS0	set	254
   388  0030                     _RB0	set	48
   389  002A                     _RA2	set	42
   390  0086                     _TRISBbits	set	134
   391  0086                     _TRISB	set	134
   392  0085                     _TRISAbits	set	133
   393  009B                     _ANSELbits	set	155
   394  009B                     _ANSEL	set	155
   395  009E                     _ADRESL	set	158
   396  04FD                     _VCFG1	set	1277
   397  04FC                     _VCFG0	set	1276
   398  04FE                     _ADCS2	set	1278
   399  04FF                     _ADFM	set	1279
   400  003A                     STR_2:	
   401  003A  3450               	retlw	80	;'P'
   402  003B  3452               	retlw	82	;'R'
   403  003C  3445               	retlw	69	;'E'
   404  003D  3453               	retlw	83	;'S'
   405  003E  3453               	retlw	83	;'S'
   406  003F  3420               	retlw	32	;' '
   407  0040  3454               	retlw	84	;'T'
   408  0041  3448               	retlw	72	;'H'
   409  0042  3445               	retlw	69	;'E'
   410  0043  3420               	retlw	32	;' '
   411  0044  3442               	retlw	66	;'B'
   412  0045  3455               	retlw	85	;'U'
   413  0046  3454               	retlw	84	;'T'
   414  0047  3454               	retlw	84	;'T'
   415  0048  344F               	retlw	79	;'O'
   416  0049  344E               	retlw	78	;'N'
   417  004A  3400               	retlw	0
   418  004B                     STR_4:	
   419  004B  344C               	retlw	76	;'L'
   420  004C  3469               	retlw	105	;'i'
   421  004D  3467               	retlw	103	;'g'
   422  004E  3468               	retlw	104	;'h'
   423  004F  3474               	retlw	116	;'t'
   424  0050  345F               	retlw	95	;'_'
   425  0051  344C               	retlw	76	;'L'
   426  0052  3445               	retlw	69	;'E'
   427  0053  3456               	retlw	86	;'V'
   428  0054  3445               	retlw	69	;'E'
   429  0055  344C               	retlw	76	;'L'
   430  0056  3420               	retlw	32	;' '
   431  0057  3469               	retlw	105	;'i'
   432  0058  3473               	retlw	115	;'s'
   433  0059  343A               	retlw	58	;':'
   434  005A  3400               	retlw	0
   435  005B                     STR_10:	
   436  005B  3444               	retlw	68	;'D'
   437  005C  3448               	retlw	72	;'H'
   438  005D  3454               	retlw	84	;'T'
   439  005E  3431               	retlw	49	;'1'
   440  005F  3431               	retlw	49	;'1'
   441  0060  3420               	retlw	32	;' '
   442  0061  3445               	retlw	69	;'E'
   443  0062  3452               	retlw	82	;'R'
   444  0063  3452               	retlw	82	;'R'
   445  0064  344F               	retlw	79	;'O'
   446  0065  3452               	retlw	82	;'R'
   447  0066  343A               	retlw	58	;':'
   448  0067  342D               	retlw	45	;'-'
   449  0068  3431               	retlw	49	;'1'
   450  0069  3400               	retlw	0
   451  006A                     STR_3:	
   452  006A  3476               	retlw	118	;'v'
   453  006B  346F               	retlw	111	;'o'
   454  006C  346C               	retlw	108	;'l'
   455  006D  3474               	retlw	116	;'t'
   456  006E  3461               	retlw	97	;'a'
   457  006F  3467               	retlw	103	;'g'
   458  0070  3465               	retlw	101	;'e'
   459  0071  3428               	retlw	40	;'('
   460  0072  3456               	retlw	86	;'V'
   461  0073  3429               	retlw	41	;')'
   462  0074  3420               	retlw	32	;' '
   463  0075  3469               	retlw	105	;'i'
   464  0076  3473               	retlw	115	;'s'
   465  0077  343A               	retlw	58	;':'
   466  0078  3400               	retlw	0
   467  0079                     STR_12:	
   468  0079  3444               	retlw	68	;'D'
   469  007A  3448               	retlw	72	;'H'
   470  007B  3454               	retlw	84	;'T'
   471  007C  3431               	retlw	49	;'1'
   472  007D  3431               	retlw	49	;'1'
   473  007E  3420               	retlw	32	;' '
   474  007F  3445               	retlw	69	;'E'
   475  0080  3452               	retlw	82	;'R'
   476  0081  3452               	retlw	82	;'R'
   477  0082  344F               	retlw	79	;'O'
   478  0083  3452               	retlw	82	;'R'
   479  0084  343A               	retlw	58	;':'
   480  0085  3430               	retlw	48	;'0'
   481  0086  3400               	retlw	0
   482  0087                     STR_11:	
   483  0087  3444               	retlw	68	;'D'
   484  0088  3448               	retlw	72	;'H'
   485  0089  3454               	retlw	84	;'T'
   486  008A  3431               	retlw	49	;'1'
   487  008B  3431               	retlw	49	;'1'
   488  008C  3420               	retlw	32	;' '
   489  008D  3445               	retlw	69	;'E'
   490  008E  3452               	retlw	82	;'R'
   491  008F  3452               	retlw	82	;'R'
   492  0090  344F               	retlw	79	;'O'
   493  0091  3452               	retlw	82	;'R'
   494  0092  343A               	retlw	58	;':'
   495  0093  3432               	retlw	50	;'2'
   496  0094  3400               	retlw	0
   497  0095                     STR_13:	
   498  0095  3444               	retlw	68	;'D'
   499  0096  3448               	retlw	72	;'H'
   500  0097  3454               	retlw	84	;'T'
   501  0098  3431               	retlw	49	;'1'
   502  0099  3431               	retlw	49	;'1'
   503  009A  3420               	retlw	32	;' '
   504  009B  3445               	retlw	69	;'E'
   505  009C  3452               	retlw	82	;'R'
   506  009D  3452               	retlw	82	;'R'
   507  009E  344F               	retlw	79	;'O'
   508  009F  3452               	retlw	82	;'R'
   509  00A0  343A               	retlw	58	;':'
   510  00A1  3433               	retlw	51	;'3'
   511  00A2  3400               	retlw	0
   512  00A3                     STR_14:	
   513  00A3  3425               	retlw	37	;'%'
   514  00A4  346C               	retlw	108	;'l'
   515  00A5  3475               	retlw	117	;'u'
   516  00A6  342E               	retlw	46	;'.'
   517  00A7  3425               	retlw	37	;'%'
   518  00A8  3436               	retlw	54	;'6'
   519  00A9  342E               	retlw	46	;'.'
   520  00AA  3436               	retlw	54	;'6'
   521  00AB  346C               	retlw	108	;'l'
   522  00AC  3475               	retlw	117	;'u'
   523  00AD  3400               	retlw	0
   524  00AE                     STR_7:	
   525  00AE  3444               	retlw	68	;'D'
   526  00AF  3461               	retlw	97	;'a'
   527  00B0  347A               	retlw	122	;'z'
   528  00B1  347A               	retlw	122	;'z'
   529  00B2  346C               	retlw	108	;'l'
   530  00B3  3469               	retlw	105	;'i'
   531  00B4  346E               	retlw	110	;'n'
   532  00B5  3467               	retlw	103	;'g'
   533  00B6  3400               	retlw	0
   534  00B7                     STR_1:	
   535  00B7  3457               	retlw	87	;'W'
   536  00B8  3445               	retlw	69	;'E'
   537  00B9  344C               	retlw	76	;'L'
   538  00BA  3443               	retlw	67	;'C'
   539  00BB  344F               	retlw	79	;'O'
   540  00BC  344D               	retlw	77	;'M'
   541  00BD  3445               	retlw	69	;'E'
   542  00BE  3400               	retlw	0
   543  00BF                     STR_6:	
   544  00BF  3442               	retlw	66	;'B'
   545  00C0  3472               	retlw	114	;'r'
   546  00C1  3469               	retlw	105	;'i'
   547  00C2  3467               	retlw	103	;'g'
   548  00C3  3468               	retlw	104	;'h'
   549  00C4  3474               	retlw	116	;'t'
   550  00C5  3400               	retlw	0
   551  00C6                     STR_9:	
   552  00C6  3448               	retlw	72	;'H'
   553  00C7  3455               	retlw	85	;'U'
   554  00C8  344D               	retlw	77	;'M'
   555  00C9  3449               	retlw	73	;'I'
   556  00CA  343A               	retlw	58	;':'
   557  00CB  3400               	retlw	0
   558  00CC                     STR_8:	
   559  00CC  3454               	retlw	84	;'T'
   560  00CD  3445               	retlw	69	;'E'
   561  00CE  344D               	retlw	77	;'M'
   562  00CF  3450               	retlw	80	;'P'
   563  00D0  343A               	retlw	58	;':'
   564  00D1  3400               	retlw	0
   565  00D2                     STR_5:	
   566  00D2  3444               	retlw	68	;'D'
   567  00D3  3452               	retlw	82	;'R'
   568  00D4  3441               	retlw	65	;'A'
   569  00D5  344B               	retlw	75	;'K'
   570  00D6  3400               	retlw	0
   571                           
   572                           ; #config settings
   573  0000                     
   574                           	psect	cinit
   575  07EF                     start_initialization:	
   576  07EF                     __initialization:	
   577                           
   578                           ; Initialize objects allocated to BANK0
   579  07EF  158A  214C  118A   	fcall	__pidataBANK0	;fetch initializer
   580  07F2  00E0               	movwf	__pdataBANK0& (0+127)
   581  07F3  158A  214D  118A   	fcall	__pidataBANK0+1	;fetch initializer
   582  07F6  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   583                           
   584                           ; Clear objects allocated to BANK1
   585  07F7  1383               	bcf	3,7	;select IRP bank0
   586  07F8  30A0               	movlw	low __pbssBANK1
   587  07F9  0084               	movwf	4
   588  07FA  30B1               	movlw	low (__pbssBANK1+17)
   589  07FB  158A  215E         	fcall	clear_ram0
   590  07FD                     end_of_initialization:	
   591                           ;End of C runtime variable initialization code
   592                           
   593  07FD                     __end_of__initialization:	
   594  07FD  0183               	clrf	3
   595  07FE  158A  2F29         	ljmp	_main	;jump to C main() function
   596                           
   597                           	psect	dataBANK0
   598  0060                     __pdataBANK0:	
   599  0060                     button_scan@key_up:	
   600  0060                     	ds	2
   601                           
   602                           	psect	bssBANK1
   603  00A0                     __pbssBANK1:	
   604  00A0                     ftoa@buf:	
   605  00A0                     	ds	17
   606                           
   607                           	psect	clrtext
   608  095E                     clear_ram0:	
   609                           ;	Called with FSR containing the base address, and
   610                           ;	W with the last address+1
   611                           
   612  095E  0064               	clrwdt	;clear the watchdog before getting into this loop
   613  095F                     clrloop0:	
   614  095F  0180               	clrf	0	;clear RAM location pointed to by FSR
   615  0960  0A84               	incf	4,f	;increment pointer
   616  0961  0604               	xorwf	4,w	;XOR with final address
   617  0962  1903               	btfsc	3,2	;have we reached the end yet?
   618  0963  3400               	retlw	0	;all done for this memory range, return
   619  0964  0604               	xorwf	4,w	;XOR again to restore value
   620  0965  295F               	goto	clrloop0	;do the next byte
   621                           
   622                           	psect	cstackCOMMON
   623  0070                     __pcstackCOMMON:	
   624  0070                     ?_isdigit:	
   625  0070                     ?___ftge:	
   626                           ; 1 bit 
   627                           
   628  0070                     ?_InitApp:	
   629                           ; 1 bit 
   630                           
   631  0070                     ??_InitApp:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_Lcd_Init:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_mode_welcome:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_mode_voltage_read:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_mode_light_level_check:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_mode_dht11_read:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_Lcd_Clear:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_DHT11_init:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_DHT11_init:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_isdigit:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_main:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Lcd_Port:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_Lcd_Port:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_Lcd_Cmd:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_Lcd_Write_Char:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_button_scan:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_DHT11_CheckResponse:	
   680                           ; 2 bytes @ 0x0
   681                           
   682  0070                     ?_DHT11_ReadData:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0070                     ?_analog_read:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0070                     ?___wmul:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  0070                     ?___lwdiv:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  0070                     ?___lwmod:	
   695                           ; 2 bytes @ 0x0
   696                           
   697  0070                     ?___ftpack:	
   698                           ; 2 bytes @ 0x0
   699                           
   700  0070                     ?___ftneg:	
   701                           ; 3 bytes @ 0x0
   702                           
   703  0070                     ?___lldiv:	
   704                           ; 3 bytes @ 0x0
   705                           
   706  0070                     Lcd_Port@a:	
   707                           ; 4 bytes @ 0x0
   708                           
   709  0070                     DHT11_ReadData@dhum:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     _isdigit$600:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     analog_read@channel:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ___wmul@multiplier:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0070                     ___lwdiv@divisor:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     ___lwmod@divisor:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0070                     ___ftpack@arg:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0070                     ___ftge@ff1:	
   731                           ; 3 bytes @ 0x0
   732                           
   733  0070                     ___ftneg@f1:	
   734                           ; 3 bytes @ 0x0
   735                           
   736  0070                     ___lldiv@divisor:	
   737                           ; 3 bytes @ 0x0
   738                           
   739                           
   740                           ; 4 bytes @ 0x0
   741  0070                     	ds	1
   742  0071                     ??_Lcd_Cmd:	
   743  0071                     ??_Lcd_Write_Char:	
   744                           ; 1 bytes @ 0x1
   745                           
   746  0071                     DHT11_ReadData@temp:	
   747                           ; 1 bytes @ 0x1
   748                           
   749  0071                     isdigit@c:	
   750                           ; 1 bytes @ 0x1
   751                           
   752                           
   753                           ; 1 bytes @ 0x1
   754  0071                     	ds	1
   755  0072                     ??_button_scan:	
   756  0072                     ??_DHT11_CheckResponse:	
   757                           ; 1 bytes @ 0x2
   758                           
   759  0072                     ??_analog_read:	
   760                           ; 1 bytes @ 0x2
   761                           
   762  0072                     Lcd_Write_Char@temp:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     DHT11_ReadData@dtemp:	
   766                           ; 1 bytes @ 0x2
   767                           
   768  0072                     DHT11_CheckResponse@cont:	
   769                           ; 1 bytes @ 0x2
   770                           
   771  0072                     ___wmul@multiplicand:	
   772                           ; 2 bytes @ 0x2
   773                           
   774  0072                     ___lwdiv@dividend:	
   775                           ; 2 bytes @ 0x2
   776                           
   777  0072                     ___lwmod@dividend:	
   778                           ; 2 bytes @ 0x2
   779                           
   780                           
   781                           ; 2 bytes @ 0x2
   782  0072                     	ds	1
   783  0073                     ??_DHT11_ReadData:	
   784  0073                     ??___ftneg:	
   785                           ; 1 bytes @ 0x3
   786                           
   787  0073                     Lcd_Cmd@a:	
   788                           ; 1 bytes @ 0x3
   789                           
   790  0073                     Lcd_Write_Char@y:	
   791                           ; 1 bytes @ 0x3
   792                           
   793  0073                     ___ftpack@exp:	
   794                           ; 1 bytes @ 0x3
   795                           
   796  0073                     analog_read@ad_value:	
   797                           ; 1 bytes @ 0x3
   798                           
   799  0073                     ___ftge@ff2:	
   800                           ; 2 bytes @ 0x3
   801                           
   802                           
   803                           ; 3 bytes @ 0x3
   804  0073                     	ds	1
   805  0074                     ??_Lcd_Init:	
   806  0074                     ??_Lcd_Clear:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     ?_Lcd_Set_Cursor:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     ??___wmul:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ??___lwdiv:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     ??___lwmod:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0074                     Lcd_Set_Cursor@b:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     Lcd_Write_Char@a:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     ___ftpack@sign:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0074                     ___wmul@product:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0074                     ___lldiv@dividend:	
   834                           ; 2 bytes @ 0x4
   835                           
   836                           
   837                           ; 4 bytes @ 0x4
   838  0074                     	ds	1
   839  0075                     ??_Lcd_Set_Cursor:	
   840  0075                     ?_Lcd_Write_String:	
   841                           ; 1 bytes @ 0x5
   842                           
   843  0075                     ??___ftpack:	
   844                           ; 1 bytes @ 0x5
   845                           
   846  0075                     ___lwmod@counter:	
   847                           ; 1 bytes @ 0x5
   848                           
   849  0075                     Lcd_Write_String@a:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0075                     ___lwdiv@quotient:	
   853                           ; 2 bytes @ 0x5
   854                           
   855                           
   856                           ; 2 bytes @ 0x5
   857  0075                     	ds	1
   858  0076                     ??___ftge:	
   859                           
   860                           ; 1 bytes @ 0x6
   861  0076                     	ds	1
   862  0077                     ??_Lcd_Write_String:	
   863  0077                     Lcd_Set_Cursor@a:	
   864                           ; 1 bytes @ 0x7
   865                           
   866  0077                     ___lwdiv@counter:	
   867                           ; 1 bytes @ 0x7
   868                           
   869                           
   870                           ; 1 bytes @ 0x7
   871  0077                     	ds	1
   872  0078                     ?_utoa:	
   873  0078                     ??___lldiv:	
   874                           ; 1 bytes @ 0x8
   875                           
   876  0078                     ?_voltage_read:	
   877                           ; 1 bytes @ 0x8
   878                           
   879  0078                     ?_light_level_check:	
   880                           ; 2 bytes @ 0x8
   881                           
   882  0078                     ?___ftadd:	
   883                           ; 2 bytes @ 0x8
   884                           
   885  0078                     ?___lltoft:	
   886                           ; 3 bytes @ 0x8
   887                           
   888  0078                     Lcd_Set_Cursor@z:	
   889                           ; 3 bytes @ 0x8
   890                           
   891  0078                     utoa@val:	
   892                           ; 1 bytes @ 0x8
   893                           
   894  0078                     ___ftadd@f1:	
   895                           ; 2 bytes @ 0x8
   896                           
   897  0078                     ___lltoft@c:	
   898                           ; 3 bytes @ 0x8
   899                           
   900                           
   901                           ; 4 bytes @ 0x8
   902  0078                     	ds	1
   903  0079                     Lcd_Set_Cursor@y:	
   904  0079                     ___lldiv@quotient:	
   905                           ; 1 bytes @ 0x9
   906                           
   907                           
   908                           ; 4 bytes @ 0x9
   909  0079                     	ds	1
   910  007A                     ??_voltage_read:	
   911  007A                     ??_light_level_check:	
   912                           ; 1 bytes @ 0xA
   913                           
   914  007A                     Lcd_Set_Cursor@temp:	
   915                           ; 1 bytes @ 0xA
   916                           
   917  007A                     Lcd_Write_String@i:	
   918                           ; 1 bytes @ 0xA
   919                           
   920  007A                     utoa@base:	
   921                           ; 2 bytes @ 0xA
   922                           
   923                           
   924                           ; 2 bytes @ 0xA
   925  007A                     	ds	1
   926  007B                     ?___lwtoft:	
   927  007B                     ___lwtoft@c:	
   928                           ; 3 bytes @ 0xB
   929                           
   930  007B                     ___ftadd@f2:	
   931                           ; 2 bytes @ 0xB
   932                           
   933                           
   934                           ; 3 bytes @ 0xB
   935  007B                     	ds	1
   936  007C                     ??_mode_welcome:	
   937  007C                     ??_mode_light_level_check:	
   938                           ; 1 bytes @ 0xC
   939                           
   940  007C                     ??_utoa:	
   941                           ; 1 bytes @ 0xC
   942                           
   943  007C                     ??___lltoft:	
   944                           ; 1 bytes @ 0xC
   945                           
   946  007C                     mode_light_level_check@t1:	
   947                           ; 1 bytes @ 0xC
   948                           
   949                           
   950                           ; 2 bytes @ 0xC
   951  007C                     	ds	1
   952  007D                     ??_itoa:	
   953  007D                     ___lldiv@counter:	
   954                           ; 1 bytes @ 0xD
   955                           
   956  007D                     ___lltoft@exp:	
   957                           ; 1 bytes @ 0xD
   958                           
   959                           
   960                           ; 1 bytes @ 0xD
   961  007D                     	ds	1
   962  007E                     ??___ftsub:	
   963                           
   964                           	psect	cstackBANK0
   965  0020                     __pcstackBANK0:	
   966                           ; 1 bytes @ 0xE
   967                           
   968  0020                     ??___ftadd:	
   969  0020                     ?___llmod:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0020                     voltage_read@voltage:	
   973                           ; 4 bytes @ 0x0
   974                           
   975  0020                     light_level_check@ldr_value:	
   976                           ; 2 bytes @ 0x0
   977                           
   978  0020                     utoa@v:	
   979                           ; 2 bytes @ 0x0
   980                           
   981  0020                     ___llmod@divisor:	
   982                           ; 2 bytes @ 0x0
   983                           
   984  0020                     DHT11_ReadData@bits:	
   985                           ; 4 bytes @ 0x0
   986                           
   987                           
   988                           ; 10 bytes @ 0x0
   989  0020                     	ds	2
   990  0022                     utoa@c:	
   991  0022                     voltage_read@sum_voltage:	
   992                           ; 1 bytes @ 0x2
   993                           
   994  0022                     light_level_check@ldr_value_178:	
   995                           ; 2 bytes @ 0x2
   996                           
   997                           
   998                           ; 2 bytes @ 0x2
   999  0022                     	ds	1
  1000  0023                     utoa@buf:	
  1001                           
  1002                           ; 1 bytes @ 0x3
  1003  0023                     	ds	1
  1004  0024                     ?_itoa:	
  1005  0024                     ___ftadd@sign:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008  0024                     voltage_read@i:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011  0024                     light_level_check@sum_light_level_value:	
  1012                           ; 2 bytes @ 0x4
  1013                           
  1014  0024                     itoa@val:	
  1015                           ; 2 bytes @ 0x4
  1016                           
  1017  0024                     ___llmod@dividend:	
  1018                           ; 2 bytes @ 0x4
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x4
  1022  0024                     	ds	1
  1023  0025                     ___ftadd@exp2:	
  1024                           
  1025                           ; 1 bytes @ 0x5
  1026  0025                     	ds	1
  1027  0026                     ??___lwtoft:	
  1028  0026                     ___ftadd@exp1:	
  1029                           ; 1 bytes @ 0x6
  1030                           
  1031  0026                     light_level_check@i:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034  0026                     itoa@base:	
  1035                           ; 2 bytes @ 0x6
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0x6
  1039  0026                     	ds	1
  1040  0027                     ?___ftmul:	
  1041  0027                     ?___ftsub:	
  1042                           ; 3 bytes @ 0x7
  1043                           
  1044  0027                     ___ftmul@f1:	
  1045                           ; 3 bytes @ 0x7
  1046                           
  1047  0027                     ___ftsub@f2:	
  1048                           ; 3 bytes @ 0x7
  1049                           
  1050                           
  1051                           ; 3 bytes @ 0x7
  1052  0027                     	ds	1
  1053  0028                     ??___llmod:	
  1054  0028                     itoa@cp:	
  1055                           ; 1 bytes @ 0x8
  1056                           
  1057                           
  1058                           ; 1 bytes @ 0x8
  1059  0028                     	ds	1
  1060  0029                     itoa@buf:	
  1061  0029                     ___llmod@counter:	
  1062                           ; 1 bytes @ 0x9
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x9
  1066  0029                     	ds	1
  1067  002A                     ?_sprintf:	
  1068  002A                     DHT11_ReadData@hum:	
  1069                           ; 2 bytes @ 0xA
  1070                           
  1071  002A                     sprintf@f:	
  1072                           ; 1 bytes @ 0xA
  1073                           
  1074  002A                     ___ftmul@f2:	
  1075                           ; 1 bytes @ 0xA
  1076                           
  1077  002A                     ___ftsub@f1:	
  1078                           ; 3 bytes @ 0xA
  1079                           
  1080                           
  1081                           ; 3 bytes @ 0xA
  1082  002A                     	ds	1
  1083  002B                     DHT11_ReadData@j:	
  1084                           
  1085                           ; 2 bytes @ 0xB
  1086  002B                     	ds	2
  1087  002D                     ??___ftmul:	
  1088  002D                     DHT11_ReadData@cont_read:	
  1089                           ; 1 bytes @ 0xD
  1090                           
  1091                           
  1092                           ; 2 bytes @ 0xD
  1093  002D                     	ds	2
  1094  002F                     DHT11_ReadData@i:	
  1095                           
  1096                           ; 2 bytes @ 0xF
  1097  002F                     	ds	2
  1098  0031                     ___ftmul@exp:	
  1099  0031                     DHT11_ReadData@data:	
  1100                           ; 1 bytes @ 0x11
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x11
  1104  0031                     	ds	1
  1105  0032                     ___ftmul@f3_as_product:	
  1106                           
  1107                           ; 3 bytes @ 0x12
  1108  0032                     	ds	1
  1109  0033                     ??_mode_dht11_read:	
  1110  0033                     ??_sprintf:	
  1111                           ; 1 bytes @ 0x13
  1112                           
  1113                           
  1114                           ; 1 bytes @ 0x13
  1115  0033                     	ds	2
  1116  0035                     ___ftmul@cntr:	
  1117                           
  1118                           ; 1 bytes @ 0x15
  1119  0035                     	ds	1
  1120  0036                     ___ftmul@sign:	
  1121  0036                     mode_dht11_read@v_temp:	
  1122                           ; 1 bytes @ 0x16
  1123                           
  1124                           
  1125                           ; 4 bytes @ 0x16
  1126  0036                     	ds	1
  1127  0037                     ?___fttol:	
  1128  0037                     ___fttol@f1:	
  1129                           ; 4 bytes @ 0x17
  1130                           
  1131                           
  1132                           ; 3 bytes @ 0x17
  1133  0037                     	ds	1
  1134  0038                     sprintf@flag:	
  1135                           
  1136                           ; 1 bytes @ 0x18
  1137  0038                     	ds	1
  1138  0039                     sprintf@ap:	
  1139                           
  1140                           ; 1 bytes @ 0x19
  1141  0039                     	ds	1
  1142  003A                     mode_dht11_read@v_humi:	
  1143  003A                     sprintf@val:	
  1144                           ; 4 bytes @ 0x1A
  1145                           
  1146                           
  1147                           ; 4 bytes @ 0x1A
  1148  003A                     	ds	1
  1149  003B                     ??___fttol:	
  1150                           
  1151                           ; 1 bytes @ 0x1B
  1152  003B                     	ds	3
  1153  003E                     sprintf@sp:	
  1154  003E                     mode_dht11_read@dhumi:	
  1155                           ; 1 bytes @ 0x1E
  1156                           
  1157                           
  1158                           ; 2 bytes @ 0x1E
  1159  003E                     	ds	1
  1160  003F                     ___fttol@sign1:	
  1161  003F                     sprintf@width:	
  1162                           ; 1 bytes @ 0x1F
  1163                           
  1164                           
  1165                           ; 2 bytes @ 0x1F
  1166  003F                     	ds	1
  1167  0040                     mode_dht11_read@dtemp:	
  1168  0040                     ___fttol@lval:	
  1169                           ; 2 bytes @ 0x20
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x20
  1173  0040                     	ds	1
  1174  0041                     sprintf@prec:	
  1175                           
  1176                           ; 2 bytes @ 0x21
  1177  0041                     	ds	1
  1178  0042                     mode_dht11_read@temp:	
  1179                           
  1180                           ; 2 bytes @ 0x22
  1181  0042                     	ds	1
  1182  0043                     sprintf@c:	
  1183                           
  1184                           ; 1 bytes @ 0x23
  1185  0043                     	ds	1
  1186  0044                     ___fttol@exp1:	
  1187  0044                     mode_dht11_read@humi:	
  1188                           ; 1 bytes @ 0x24
  1189                           
  1190                           
  1191                           ; 2 bytes @ 0x24
  1192  0044                     	ds	1
  1193  0045                     ?_ftoa:	
  1194  0045                     ftoa@f:	
  1195                           ; 1 bytes @ 0x25
  1196                           
  1197                           
  1198                           ; 3 bytes @ 0x25
  1199  0045                     	ds	3
  1200  0048                     ftoa@status:	
  1201                           
  1202                           ; 1 bytes @ 0x28
  1203  0048                     	ds	1
  1204  0049                     ??_ftoa:	
  1205                           
  1206                           ; 1 bytes @ 0x29
  1207  0049                     	ds	1
  1208  004A                     ftoa@rem:	
  1209                           
  1210                           ; 4 bytes @ 0x2A
  1211  004A                     	ds	4
  1212  004E                     ftoa@l:	
  1213                           
  1214                           ; 4 bytes @ 0x2E
  1215  004E                     	ds	4
  1216  0052                     ftoa@cp:	
  1217                           
  1218                           ; 1 bytes @ 0x32
  1219  0052                     	ds	1
  1220  0053                     ??_mode_voltage_read:	
  1221                           
  1222                           ; 1 bytes @ 0x33
  1223  0053                     	ds	2
  1224  0055                     mode_voltage_read@status:	
  1225                           
  1226                           ; 2 bytes @ 0x35
  1227  0055                     	ds	2
  1228  0057                     mode_voltage_read@t1:	
  1229                           
  1230                           ; 3 bytes @ 0x37
  1231  0057                     	ds	3
  1232  005A                     mode_voltage_read@value:	
  1233                           
  1234                           ; 1 bytes @ 0x3A
  1235  005A                     	ds	1
  1236  005B                     ??_main:	
  1237                           
  1238                           ; 1 bytes @ 0x3B
  1239  005B                     	ds	3
  1240  005E                     main@mode_choose_flag:	
  1241                           
  1242                           ; 2 bytes @ 0x3E
  1243  005E                     	ds	2
  1244                           
  1245                           	psect	maintext
  1246  0F29                     __pmaintext:	
  1247 ;;
  1248 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1249 ;;
  1250 ;; *************** function _main *****************
  1251 ;; Defined at:
  1252 ;;		line 37 in file "main.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  mode_choose_    2   62[BANK0 ] unsigned int 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : B00/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       2       0       0       0
  1268 ;;      Temps:          0       3       0       0       0
  1269 ;;      Totals:         0       5       0       0       0
  1270 ;;Total ram usage:        5 bytes
  1271 ;; Hardware stack levels required when called:    5
  1272 ;; This function calls:
  1273 ;;		_InitApp
  1274 ;;		_Lcd_Init
  1275 ;;		_button_scan
  1276 ;;		_mode_dht11_read
  1277 ;;		_mode_light_level_check
  1278 ;;		_mode_voltage_read
  1279 ;;		_mode_welcome
  1280 ;; This function is called by:
  1281 ;;		Startup code after reset
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _main
  1287  0F29                     _main:	
  1288                           
  1289                           ;main.c: 39: unsigned int mode_choose_flag = 0 ;
  1290                           
  1291                           ;incstack = 0
  1292                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1293  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0F2B  01DE               	clrf	main@mode_choose_flag
  1296  0F2C  01DF               	clrf	main@mode_choose_flag+1
  1297                           
  1298                           ;main.c: 48: InitApp();
  1299  0F2D  158A  2166  158A   	fcall	_InitApp
  1300                           
  1301                           ;main.c: 49: Lcd_Init();
  1302  0F30  158A  242B  158A   	fcall	_Lcd_Init
  1303                           
  1304                           ;main.c: 50: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1305  0F33  300B               	movlw	11
  1306  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0F36  00DD               	movwf	??_main+2
  1309  0F37  3026               	movlw	38
  1310  0F38  00DC               	movwf	??_main+1
  1311  0F39  305D               	movlw	93
  1312  0F3A  00DB               	movwf	??_main
  1313  0F3B                     u3557:	
  1314  0F3B  0BDB               	decfsz	??_main,f
  1315  0F3C  2F3B               	goto	u3557
  1316  0F3D  0BDC               	decfsz	??_main+1,f
  1317  0F3E  2F3B               	goto	u3557
  1318  0F3F  0BDD               	decfsz	??_main+2,f
  1319  0F40  2F3B               	goto	u3557
  1320                           
  1321                           ;main.c: 51: RA2 = 0;
  1322  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0F43  1105               	bcf	5,2	;volatile
  1325  0F44                     l2662:	
  1326                           ;main.c: 52: while(1)
  1327                           
  1328                           
  1329                           ;main.c: 53: {
  1330                           ;main.c: 54: if(button_scan()) mode_choose_flag++;
  1331  0F44  158A  222D  158A   	fcall	_button_scan
  1332  0F47  0870               	movf	?_button_scan,w
  1333  0F48  0471               	iorwf	?_button_scan+1,w
  1334  0F49  1903               	btfsc	3,2
  1335  0F4A  2F53               	goto	l62
  1336  0F4B  3001               	movlw	1
  1337  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0F4E  07DE               	addwf	main@mode_choose_flag,f
  1340  0F4F  1803               	skipnc
  1341  0F50  0ADF               	incf	main@mode_choose_flag+1,f
  1342  0F51  3000               	movlw	0
  1343  0F52  07DF               	addwf	main@mode_choose_flag+1,f
  1344  0F53                     l62:	
  1345                           
  1346                           ;main.c: 55: if(mode_choose_flag>3) mode_choose_flag = 1;
  1347  0F53  3000               	movlw	0
  1348  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0F56  025F               	subwf	main@mode_choose_flag+1,w
  1351  0F57  3004               	movlw	4
  1352  0F58  1903               	skipnz
  1353  0F59  025E               	subwf	main@mode_choose_flag,w
  1354  0F5A  1C03               	skipc
  1355  0F5B  2F74               	goto	l2678
  1356  0F5C  3001               	movlw	1
  1357  0F5D  00DE               	movwf	main@mode_choose_flag
  1358  0F5E  3000               	movlw	0
  1359  0F5F  00DF               	movwf	main@mode_choose_flag+1
  1360                           
  1361                           ;main.c: 56: switch(mode_choose_flag){
  1362  0F60  2F74               	goto	l2678
  1363  0F61                     l65:	
  1364                           ;main.c: 57: case 0:
  1365                           
  1366                           
  1367                           ;main.c: 58: RA2 = 0;
  1368  0F61  1105               	bcf	5,2	;volatile
  1369                           
  1370                           ;main.c: 59: mode_welcome();
  1371  0F62  158A  21CF  158A   	fcall	_mode_welcome
  1372                           
  1373                           ;main.c: 60: break;
  1374  0F65  2F89               	goto	l2680
  1375  0F66                     l67:	
  1376                           ;main.c: 61: case 1:
  1377                           
  1378                           
  1379                           ;main.c: 62: RA2 = 0;
  1380  0F66  1105               	bcf	5,2	;volatile
  1381                           
  1382                           ;main.c: 63: mode_voltage_read();
  1383  0F67  158A  25B2  158A   	fcall	_mode_voltage_read
  1384                           
  1385                           ;main.c: 64: break;
  1386  0F6A  2F89               	goto	l2680
  1387  0F6B                     l68:	
  1388                           ;main.c: 65: case 2:
  1389                           
  1390                           
  1391                           ;main.c: 66: RA2 = 0;
  1392  0F6B  1105               	bcf	5,2	;volatile
  1393                           
  1394                           ;main.c: 67: mode_light_level_check();
  1395  0F6C  158A  2471  158A   	fcall	_mode_light_level_check
  1396                           
  1397                           ;main.c: 68: break;
  1398  0F6F  2F89               	goto	l2680
  1399  0F70                     l2674:	
  1400                           ;main.c: 69: case 3:
  1401                           
  1402                           
  1403                           ;main.c: 70: mode_dht11_read();
  1404  0F70  118A  24D8  158A   	fcall	_mode_dht11_read
  1405                           
  1406                           ;main.c: 72: }
  1407                           
  1408                           ;main.c: 71: break;
  1409  0F73  2F89               	goto	l2680
  1410  0F74                     l2678:	
  1411                           
  1412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1413                           ; Switch size 1, requested type "space"
  1414                           ; Number of cases is 1, Range of values is 0 to 0
  1415                           ; switch strategies available:
  1416                           ; Name         Instructions Cycles
  1417                           ; simple_byte            4     3 (average)
  1418                           ; direct_byte            9     7 (fixed)
  1419                           ; jumptable            260     6 (fixed)
  1420                           ;	Chosen strategy is simple_byte
  1421  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0F76  085F               	movf	main@mode_choose_flag+1,w
  1424  0F77  3A00               	xorlw	0	; case 0
  1425  0F78  1903               	skipnz
  1426  0F79  2F7B               	goto	l2722
  1427  0F7A  2F89               	goto	l2680
  1428  0F7B                     l2722:	
  1429                           
  1430                           ; Switch size 1, requested type "space"
  1431                           ; Number of cases is 4, Range of values is 0 to 3
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte           13     7 (average)
  1435                           ; direct_byte           15     7 (fixed)
  1436                           ; jumptable            260     6 (fixed)
  1437                           ;	Chosen strategy is simple_byte
  1438  0F7B  085E               	movf	main@mode_choose_flag,w
  1439  0F7C  3A00               	xorlw	0	; case 0
  1440  0F7D  1903               	skipnz
  1441  0F7E  2F61               	goto	l65
  1442  0F7F  3A01               	xorlw	1	; case 1
  1443  0F80  1903               	skipnz
  1444  0F81  2F66               	goto	l67
  1445  0F82  3A03               	xorlw	3	; case 2
  1446  0F83  1903               	skipnz
  1447  0F84  2F6B               	goto	l68
  1448  0F85  3A01               	xorlw	1	; case 3
  1449  0F86  1903               	skipnz
  1450  0F87  2F70               	goto	l2674
  1451  0F88  2F89               	goto	l2680
  1452  0F89                     l2680:	
  1453                           
  1454                           ;main.c: 73: _delay((unsigned long)((100)*(4000000/4000.0)));
  1455  0F89  3082               	movlw	130
  1456  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0F8C  00DC               	movwf	??_main+1
  1459  0F8D  30DD               	movlw	221
  1460  0F8E  00DB               	movwf	??_main
  1461  0F8F                     u3567:	
  1462  0F8F  0BDB               	decfsz	??_main,f
  1463  0F90  2F8F               	goto	u3567
  1464  0F91  0BDC               	decfsz	??_main+1,f
  1465  0F92  2F8F               	goto	u3567
  1466  0F93  2F44               	goto	l2662
  1467  0F94                     __end_of_main:	
  1468                           
  1469                           	psect	text1
  1470  09CF                     __ptext1:	
  1471 ;; *************** function _mode_welcome *****************
  1472 ;; Defined at:
  1473 ;;		line 127 in file "main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0
  1490 ;;      Totals:         0       0       0       0       0
  1491 ;;Total ram usage:        0 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    3
  1494 ;; This function calls:
  1495 ;;		_Lcd_Clear
  1496 ;;		_Lcd_Set_Cursor
  1497 ;;		_Lcd_Write_String
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _mode_welcome
  1505  09CF                     _mode_welcome:	
  1506                           
  1507                           ;main.c: 128: Lcd_Clear();
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _mode_welcome: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1511  09CF  158A  214E  158A   	fcall	_Lcd_Clear
  1512                           
  1513                           ;main.c: 129: Lcd_Set_Cursor(1,1);
  1514  09D2  01F4               	clrf	Lcd_Set_Cursor@b
  1515  09D3  0AF4               	incf	Lcd_Set_Cursor@b,f
  1516  09D4  3001               	movlw	1
  1517  09D5  158A  23E7  158A   	fcall	_Lcd_Set_Cursor
  1518                           
  1519                           ;main.c: 130: Lcd_Write_String("WELCOME");
  1520  09D8  30A6               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1521  09D9  00F5               	movwf	Lcd_Write_String@a
  1522  09DA  3080               	movlw	128
  1523  09DB  00F6               	movwf	Lcd_Write_String@a+1
  1524  09DC  158A  2331  158A   	fcall	_Lcd_Write_String
  1525                           
  1526                           ;main.c: 131: Lcd_Set_Cursor(2,1);
  1527  09DF  01F4               	clrf	Lcd_Set_Cursor@b
  1528  09E0  0AF4               	incf	Lcd_Set_Cursor@b,f
  1529  09E1  3002               	movlw	2
  1530  09E2  158A  23E7  158A   	fcall	_Lcd_Set_Cursor
  1531                           
  1532                           ;main.c: 132: Lcd_Write_String("PRESS THE BUTTON");
  1533  09E5  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1534  09E6  00F5               	movwf	Lcd_Write_String@a
  1535  09E7  3080               	movlw	128
  1536  09E8  00F6               	movwf	Lcd_Write_String@a+1
  1537  09E9  158A  2331         	fcall	_Lcd_Write_String
  1538  09EB  0008               	return
  1539  09EC                     __end_of_mode_welcome:	
  1540                           
  1541                           	psect	text2
  1542  0DB2                     __ptext2:	
  1543 ;; *************** function _mode_voltage_read *****************
  1544 ;; Defined at:
  1545 ;;		line 134 in file "main.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  t1              3   55[BANK0 ] float 
  1550 ;;  status          2   53[BANK0 ] int 
  1551 ;;  value           1   58[BANK0 ] PTR unsigned char 
  1552 ;;		 -> ftoa@buf(17), 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       0       0       0       0
  1563 ;;      Locals:         0       6       0       0       0
  1564 ;;      Temps:          0       2       0       0       0
  1565 ;;      Totals:         0       8       0       0       0
  1566 ;;Total ram usage:        8 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    4
  1569 ;; This function calls:
  1570 ;;		_Lcd_Clear
  1571 ;;		_Lcd_Set_Cursor
  1572 ;;		_Lcd_Write_String
  1573 ;;		___ftmul
  1574 ;;		___lwtoft
  1575 ;;		_ftoa
  1576 ;;		_voltage_read
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _mode_voltage_read
  1584  0DB2                     _mode_voltage_read:	
  1585                           
  1586                           ;main.c: 135: unsigned char* value;
  1587                           ;main.c: 136: float t1 = (((float)voltage_read())*(0.004887));
  1588                           
  1589                           ;incstack = 0
  1590                           ; Regs used in _mode_voltage_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1591  0DB2  3023               	movlw	35
  1592  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0DB5  00A7               	movwf	___ftmul@f1
  1595  0DB6  30A0               	movlw	160
  1596  0DB7  00A8               	movwf	___ftmul@f1+1
  1597  0DB8  303B               	movlw	59
  1598  0DB9  00A9               	movwf	___ftmul@f1+2
  1599  0DBA  158A  250D  158A   	fcall	_voltage_read
  1600  0DBD  0879               	movf	?_voltage_read+1,w
  1601  0DBE  00FC               	movwf	___lwtoft@c+1
  1602  0DBF  0878               	movf	?_voltage_read,w
  1603  0DC0  00FB               	movwf	___lwtoft@c
  1604  0DC1  158A  2171  158A   	fcall	___lwtoft
  1605  0DC4  087B               	movf	?___lwtoft,w
  1606  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0DC7  00AA               	movwf	___ftmul@f2
  1609  0DC8  087C               	movf	?___lwtoft+1,w
  1610  0DC9  00AB               	movwf	___ftmul@f2+1
  1611  0DCA  087D               	movf	?___lwtoft+2,w
  1612  0DCB  00AC               	movwf	___ftmul@f2+2
  1613  0DCC  118A  221E  158A   	fcall	___ftmul
  1614  0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0DD1  0827               	movf	?___ftmul,w
  1617  0DD2  00D7               	movwf	mode_voltage_read@t1
  1618  0DD3  0828               	movf	?___ftmul+1,w
  1619  0DD4  00D8               	movwf	mode_voltage_read@t1+1
  1620  0DD5  0829               	movf	?___ftmul+2,w
  1621  0DD6  00D9               	movwf	mode_voltage_read@t1+2
  1622                           
  1623                           ;main.c: 137: int status;
  1624                           ;main.c: 138: value = ftoa(t1,&status);
  1625  0DD7  0857               	movf	mode_voltage_read@t1,w
  1626  0DD8  00C5               	movwf	ftoa@f
  1627  0DD9  0858               	movf	mode_voltage_read@t1+1,w
  1628  0DDA  00C6               	movwf	ftoa@f+1
  1629  0DDB  0859               	movf	mode_voltage_read@t1+2,w
  1630  0DDC  00C7               	movwf	ftoa@f+2
  1631  0DDD  3055               	movlw	(low (mode_voltage_read@status| 0))& (0+255)
  1632  0DDE  00D3               	movwf	??_mode_voltage_read
  1633  0DDF  0853               	movf	??_mode_voltage_read,w
  1634  0DE0  00C8               	movwf	ftoa@status
  1635  0DE1  118A  2173  158A   	fcall	_ftoa
  1636  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0DE6  00D4               	movwf	??_mode_voltage_read+1
  1639  0DE7  0854               	movf	??_mode_voltage_read+1,w
  1640  0DE8  00DA               	movwf	mode_voltage_read@value
  1641                           
  1642                           ;main.c: 139: Lcd_Clear();
  1643  0DE9  158A  214E  158A   	fcall	_Lcd_Clear
  1644                           
  1645                           ;main.c: 140: Lcd_Set_Cursor(1,1);
  1646  0DEC  01F4               	clrf	Lcd_Set_Cursor@b
  1647  0DED  0AF4               	incf	Lcd_Set_Cursor@b,f
  1648  0DEE  3001               	movlw	1
  1649  0DEF  158A  23E7  158A   	fcall	_Lcd_Set_Cursor
  1650                           
  1651                           ;main.c: 141: Lcd_Write_String("voltage(V) is:");
  1652  0DF2  3059               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1653  0DF3  00F5               	movwf	Lcd_Write_String@a
  1654  0DF4  3080               	movlw	128
  1655  0DF5  00F6               	movwf	Lcd_Write_String@a+1
  1656  0DF6  158A  2331  158A   	fcall	_Lcd_Write_String
  1657                           
  1658                           ;main.c: 142: Lcd_Set_Cursor(2,1);
  1659  0DF9  01F4               	clrf	Lcd_Set_Cursor@b
  1660  0DFA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1661  0DFB  3002               	movlw	2
  1662  0DFC  158A  23E7  158A   	fcall	_Lcd_Set_Cursor
  1663                           
  1664                           ;main.c: 143: Lcd_Write_String(value);
  1665  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0E01  085A               	movf	mode_voltage_read@value,w
  1668  0E02  00F5               	movwf	Lcd_Write_String@a
  1669  0E03  3000               	movlw	0
  1670  0E04  00F6               	movwf	Lcd_Write_String@a+1
  1671  0E05  158A  2331         	fcall	_Lcd_Write_String
  1672  0E07  0008               	return
  1673  0E08                     __end_of_mode_voltage_read:	
  1674                           
  1675                           	psect	text3
  1676  0D0D                     __ptext3:	
  1677 ;; *************** function _voltage_read *****************
  1678 ;; Defined at:
  1679 ;;		line 108 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  i               2    4[BANK0 ] int 
  1684 ;;  sum_voltage     2    2[BANK0 ] unsigned int 
  1685 ;;  voltage         2    0[BANK0 ] unsigned int 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  2    8[COMMON] unsigned int 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         2       0       0       0       0
  1696 ;;      Locals:         0       6       0       0       0
  1697 ;;      Temps:          1       0       0       0       0
  1698 ;;      Totals:         3       6       0       0       0
  1699 ;;Total ram usage:        9 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    1
  1702 ;; This function calls:
  1703 ;;		___lwdiv
  1704 ;;		_analog_read
  1705 ;; This function is called by:
  1706 ;;		_mode_voltage_read
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _voltage_read
  1712  0D0D                     _voltage_read:	
  1713                           
  1714                           ;main.c: 109: unsigned int voltage ;
  1715                           ;main.c: 110: unsigned int sum_voltage=0;
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in _voltage_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1719  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  1721  0D0F  01A2               	clrf	voltage_read@sum_voltage
  1722  0D10  01A3               	clrf	voltage_read@sum_voltage+1
  1723                           
  1724                           ;main.c: 111: for(int i=0;i<5;i++){
  1725  0D11  01A4               	clrf	voltage_read@i
  1726  0D12  01A5               	clrf	voltage_read@i+1
  1727  0D13  0825               	movf	voltage_read@i+1,w
  1728  0D14  3A80               	xorlw	128
  1729  0D15  00FF               	movwf	127
  1730  0D16  3080               	movlw	128
  1731  0D17  027F               	subwf	127,w
  1732  0D18  1D03               	skipz
  1733  0D19  2D1C               	goto	u3085
  1734  0D1A  3005               	movlw	5
  1735  0D1B  0224               	subwf	voltage_read@i,w
  1736  0D1C                     u3085:	
  1737  0D1C  1803               	btfsc	3,0
  1738  0D1D  2D4C               	goto	l2318
  1739  0D1E                     l2308:	
  1740                           
  1741                           ;main.c: 112: voltage = analog_read(0);
  1742  0D1E  3000               	movlw	0
  1743  0D1F  00F0               	movwf	analog_read@channel
  1744  0D20  00F1               	movwf	analog_read@channel+1
  1745  0D21  158A  22A0  158A   	fcall	_analog_read
  1746  0D24  0871               	movf	?_analog_read+1,w
  1747  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0D27  00A1               	movwf	voltage_read@voltage+1
  1750  0D28  0870               	movf	?_analog_read,w
  1751  0D29  00A0               	movwf	voltage_read@voltage
  1752                           
  1753                           ;main.c: 113: _delay((unsigned long)((1)*(4000000/4000.0)));
  1754  0D2A  30C7               	movlw	199
  1755  0D2B  00FA               	movwf	??_voltage_read
  1756  0D2C                     u3577:	
  1757  0D2C  2D2D               	nop2
  1758  0D2D  0BFA               	decfsz	??_voltage_read,f
  1759  0D2E  2D2C               	goto	u3577
  1760  0D2F  2D30               	nop2
  1761  0D30  2D31               	nop2
  1762                           
  1763                           ;main.c: 114: sum_voltage=sum_voltage + voltage;
  1764  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0D33  0820               	movf	voltage_read@voltage,w
  1767  0D34  0722               	addwf	voltage_read@sum_voltage,w
  1768  0D35  00A2               	movwf	voltage_read@sum_voltage
  1769  0D36  0821               	movf	voltage_read@voltage+1,w
  1770  0D37  1803               	skipnc
  1771  0D38  0A21               	incf	voltage_read@voltage+1,w
  1772  0D39  0723               	addwf	voltage_read@sum_voltage+1,w
  1773  0D3A  00A3               	movwf	voltage_read@sum_voltage+1
  1774  0D3B  3001               	movlw	1
  1775  0D3C  07A4               	addwf	voltage_read@i,f
  1776  0D3D  1803               	skipnc
  1777  0D3E  0AA5               	incf	voltage_read@i+1,f
  1778  0D3F  3000               	movlw	0
  1779  0D40  07A5               	addwf	voltage_read@i+1,f
  1780  0D41  0825               	movf	voltage_read@i+1,w
  1781  0D42  3A80               	xorlw	128
  1782  0D43  00FF               	movwf	127
  1783  0D44  3080               	movlw	128
  1784  0D45  027F               	subwf	127,w
  1785  0D46  1D03               	skipz
  1786  0D47  2D4A               	goto	u3095
  1787  0D48  3005               	movlw	5
  1788  0D49  0224               	subwf	voltage_read@i,w
  1789  0D4A                     u3095:	
  1790  0D4A  1C03               	skipc
  1791  0D4B  2D1E               	goto	l2308
  1792  0D4C                     l2318:	
  1793                           
  1794                           ;main.c: 115: }
  1795                           ;main.c: 116: return (sum_voltage/5);
  1796  0D4C  3005               	movlw	5
  1797  0D4D  00F0               	movwf	___lwdiv@divisor
  1798  0D4E  3000               	movlw	0
  1799  0D4F  00F1               	movwf	___lwdiv@divisor+1
  1800  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0D52  0823               	movf	voltage_read@sum_voltage+1,w
  1803  0D53  00F3               	movwf	___lwdiv@dividend+1
  1804  0D54  0822               	movf	voltage_read@sum_voltage,w
  1805  0D55  00F2               	movwf	___lwdiv@dividend
  1806  0D56  158A  2368         	fcall	___lwdiv
  1807  0D58  0871               	movf	?___lwdiv+1,w
  1808  0D59  00F9               	movwf	?_voltage_read+1
  1809  0D5A  0870               	movf	?___lwdiv,w
  1810  0D5B  00F8               	movwf	?_voltage_read
  1811  0D5C  0008               	return
  1812  0D5D                     __end_of_voltage_read:	
  1813                           
  1814                           	psect	text4
  1815  0173                     __ptext4:	
  1816 ;; *************** function _ftoa *****************
  1817 ;; Defined at:
  1818 ;;		line 6 in file "D:\MPLAB\sources\common\ftoa.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  f               3   37[BANK0 ] float 
  1821 ;;  status          1   40[BANK0 ] PTR int 
  1822 ;;		 -> mode_voltage_read@status(2), 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  l               4   46[BANK0 ] unsigned long 
  1825 ;;  rem             4   42[BANK0 ] unsigned long 
  1826 ;;  cp              1   50[BANK0 ] PTR unsigned char 
  1827 ;;		 -> ftoa@buf(17), 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      PTR unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       4       0       0       0
  1838 ;;      Locals:         0       9       0       0       0
  1839 ;;      Temps:          0       1       0       0       0
  1840 ;;      Totals:         0      14       0       0       0
  1841 ;;Total ram usage:       14 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    3
  1844 ;; This function calls:
  1845 ;;		___ftge
  1846 ;;		___ftmul
  1847 ;;		___ftneg
  1848 ;;		___ftsub
  1849 ;;		___fttol
  1850 ;;		___lltoft
  1851 ;;		_sprintf
  1852 ;; This function is called by:
  1853 ;;		_mode_voltage_read
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function _ftoa
  1859  0173                     _ftoa:	
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1863  0173  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  1864  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0176  00C9               	movwf	??_ftoa
  1867  0177  0849               	movf	??_ftoa,w
  1868  0178  00D2               	movwf	ftoa@cp
  1869  0179  0845               	movf	ftoa@f,w
  1870  017A  00F0               	movwf	___ftge@ff1
  1871  017B  0846               	movf	ftoa@f+1,w
  1872  017C  00F1               	movwf	___ftge@ff1+1
  1873  017D  0847               	movf	ftoa@f+2,w
  1874  017E  00F2               	movwf	___ftge@ff1+2
  1875  017F  3000               	movlw	0
  1876  0180  00F3               	movwf	___ftge@ff2
  1877  0181  3000               	movlw	0
  1878  0182  00F4               	movwf	___ftge@ff2+1
  1879  0183  3000               	movlw	0
  1880  0184  00F5               	movwf	___ftge@ff2+2
  1881  0185  158A  2608  118A   	fcall	___ftge
  1882  0188  1803               	btfsc	3,0
  1883  0189  29A8               	goto	l2384
  1884  018A  302D               	movlw	45
  1885  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1886  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1887  018D  00C9               	movwf	??_ftoa
  1888  018E  0852               	movf	ftoa@cp,w
  1889  018F  0084               	movwf	4
  1890  0190  0849               	movf	??_ftoa,w
  1891  0191  1383               	bcf	3,7	;select IRP bank0
  1892  0192  0080               	movwf	0
  1893  0193  3001               	movlw	1
  1894  0194  00C9               	movwf	??_ftoa
  1895  0195  0849               	movf	??_ftoa,w
  1896  0196  07D2               	addwf	ftoa@cp,f
  1897  0197  0845               	movf	ftoa@f,w
  1898  0198  00F0               	movwf	___ftneg@f1
  1899  0199  0846               	movf	ftoa@f+1,w
  1900  019A  00F1               	movwf	___ftneg@f1+1
  1901  019B  0847               	movf	ftoa@f+2,w
  1902  019C  00F2               	movwf	___ftneg@f1+2
  1903  019D  158A  2156  118A   	fcall	___ftneg
  1904  01A0  0870               	movf	?___ftneg,w
  1905  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1906  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1907  01A3  00C5               	movwf	ftoa@f
  1908  01A4  0871               	movf	?___ftneg+1,w
  1909  01A5  00C6               	movwf	ftoa@f+1
  1910  01A6  0872               	movf	?___ftneg+2,w
  1911  01A7  00C7               	movwf	ftoa@f+2
  1912  01A8                     l2384:	
  1913  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1914  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1915  01AA  0845               	movf	ftoa@f,w
  1916  01AB  00B7               	movwf	___fttol@f1
  1917  01AC  0846               	movf	ftoa@f+1,w
  1918  01AD  00B8               	movwf	___fttol@f1+1
  1919  01AE  0847               	movf	ftoa@f+2,w
  1920  01AF  00B9               	movwf	___fttol@f1+2
  1921  01B0  118A  20E5  118A   	fcall	___fttol
  1922  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1923  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1924  01B5  083A               	movf	?___fttol+3,w
  1925  01B6  00D1               	movwf	ftoa@l+3
  1926  01B7  0839               	movf	?___fttol+2,w
  1927  01B8  00D0               	movwf	ftoa@l+2
  1928  01B9  0838               	movf	?___fttol+1,w
  1929  01BA  00CF               	movwf	ftoa@l+1
  1930  01BB  0837               	movf	?___fttol,w
  1931  01BC  00CE               	movwf	ftoa@l
  1932  01BD  0851               	movf	ftoa@l+3,w
  1933  01BE  00FB               	movwf	___lltoft@c+3
  1934  01BF  0850               	movf	ftoa@l+2,w
  1935  01C0  00FA               	movwf	___lltoft@c+2
  1936  01C1  084F               	movf	ftoa@l+1,w
  1937  01C2  00F9               	movwf	___lltoft@c+1
  1938  01C3  084E               	movf	ftoa@l,w
  1939  01C4  00F8               	movwf	___lltoft@c
  1940  01C5  158A  2276  118A   	fcall	___lltoft
  1941  01C8  0878               	movf	?___lltoft,w
  1942  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1943  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1944  01CB  00A7               	movwf	___ftsub@f2
  1945  01CC  0879               	movf	?___lltoft+1,w
  1946  01CD  00A8               	movwf	___ftsub@f2+1
  1947  01CE  087A               	movf	?___lltoft+2,w
  1948  01CF  00A9               	movwf	___ftsub@f2+2
  1949  01D0  0845               	movf	ftoa@f,w
  1950  01D1  00AA               	movwf	___ftsub@f1
  1951  01D2  0846               	movf	ftoa@f+1,w
  1952  01D3  00AB               	movwf	___ftsub@f1+1
  1953  01D4  0847               	movf	ftoa@f+2,w
  1954  01D5  00AC               	movwf	___ftsub@f1+2
  1955  01D6  158A  21EC  118A   	fcall	___ftsub
  1956  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1957  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1958  01DB  0827               	movf	?___ftsub,w
  1959  01DC  00C5               	movwf	ftoa@f
  1960  01DD  0828               	movf	?___ftsub+1,w
  1961  01DE  00C6               	movwf	ftoa@f+1
  1962  01DF  0829               	movf	?___ftsub+2,w
  1963  01E0  00C7               	movwf	ftoa@f+2
  1964  01E1  0845               	movf	ftoa@f,w
  1965  01E2  00AA               	movwf	___ftmul@f2
  1966  01E3  0846               	movf	ftoa@f+1,w
  1967  01E4  00AB               	movwf	___ftmul@f2+1
  1968  01E5  0847               	movf	ftoa@f+2,w
  1969  01E6  00AC               	movwf	___ftmul@f2+2
  1970  01E7  3024               	movlw	36
  1971  01E8  00A7               	movwf	___ftmul@f1
  1972  01E9  3074               	movlw	116
  1973  01EA  00A8               	movwf	___ftmul@f1+1
  1974  01EB  3049               	movlw	73
  1975  01EC  00A9               	movwf	___ftmul@f1+2
  1976  01ED  118A  221E  118A   	fcall	___ftmul
  1977  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1978  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1979  01F2  0827               	movf	?___ftmul,w
  1980  01F3  00B7               	movwf	___fttol@f1
  1981  01F4  0828               	movf	?___ftmul+1,w
  1982  01F5  00B8               	movwf	___fttol@f1+1
  1983  01F6  0829               	movf	?___ftmul+2,w
  1984  01F7  00B9               	movwf	___fttol@f1+2
  1985  01F8  118A  20E5  118A   	fcall	___fttol
  1986  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1987  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1988  01FD  083A               	movf	?___fttol+3,w
  1989  01FE  00CD               	movwf	ftoa@rem+3
  1990  01FF  0839               	movf	?___fttol+2,w
  1991  0200  00CC               	movwf	ftoa@rem+2
  1992  0201  0838               	movf	?___fttol+1,w
  1993  0202  00CB               	movwf	ftoa@rem+1
  1994  0203  0837               	movf	?___fttol,w
  1995  0204  00CA               	movwf	ftoa@rem
  1996  0205  3092               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1997  0206  00C9               	movwf	??_ftoa
  1998  0207  0849               	movf	??_ftoa,w
  1999  0208  00AA               	movwf	sprintf@f
  2000  0209  0851               	movf	ftoa@l+3,w
  2001  020A  00AE               	movwf	?_sprintf+4
  2002  020B  0850               	movf	ftoa@l+2,w
  2003  020C  00AD               	movwf	?_sprintf+3
  2004  020D  084F               	movf	ftoa@l+1,w
  2005  020E  00AC               	movwf	?_sprintf+2
  2006  020F  084E               	movf	ftoa@l,w
  2007  0210  00AB               	movwf	?_sprintf+1
  2008  0211  084D               	movf	ftoa@rem+3,w
  2009  0212  00B2               	movwf	?_sprintf+8
  2010  0213  084C               	movf	ftoa@rem+2,w
  2011  0214  00B1               	movwf	?_sprintf+7
  2012  0215  084B               	movf	ftoa@rem+1,w
  2013  0216  00B0               	movwf	?_sprintf+6
  2014  0217  084A               	movf	ftoa@rem,w
  2015  0218  00AF               	movwf	?_sprintf+5
  2016  0219  0852               	movf	ftoa@cp,w
  2017  021A  118A  25E9         	fcall	_sprintf
  2018  021C  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  2019  021D  0008               	return
  2020  021E                     __end_of_ftoa:	
  2021                           
  2022                           	psect	text5
  2023  05E9                     __ptext5:	
  2024 ;; *************** function _sprintf *****************
  2025 ;; Defined at:
  2026 ;;		line 492 in file "D:\MPLAB\sources\common\doprnt.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  sp              1    wreg     PTR unsigned char 
  2029 ;;		 -> ftoa@buf(17), 
  2030 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  2031 ;;		 -> STR_14(11), 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  2034 ;;		 -> ftoa@buf(17), 
  2035 ;;  val             4   26[BANK0 ] unsigned long 
  2036 ;;  tmpval          4    0        struct .
  2037 ;;  prec            2   33[BANK0 ] int 
  2038 ;;  width           2   31[BANK0 ] int 
  2039 ;;  cp              2    0        PTR const unsigned char 
  2040 ;;  len             2    0        unsigned int 
  2041 ;;  c               1   35[BANK0 ] char 
  2042 ;;  ap              1   25[BANK0 ] PTR void [1]
  2043 ;;		 -> ?_sprintf(2), 
  2044 ;;  flag            1   24[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2   10[BANK0 ] int 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         0       9       0       0       0
  2055 ;;      Locals:         0      12       0       0       0
  2056 ;;      Temps:          0       5       0       0       0
  2057 ;;      Totals:         0      26       0       0       0
  2058 ;;Total ram usage:       26 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    1
  2061 ;; This function calls:
  2062 ;;		___lldiv
  2063 ;;		___llmod
  2064 ;;		___wmul
  2065 ;;		_isdigit
  2066 ;; This function is called by:
  2067 ;;		_ftoa
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _sprintf
  2073  05E9                     _sprintf:	
  2074                           
  2075                           ;incstack = 0
  2076                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2077                           ;sprintf@sp stored from wreg
  2078  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  2079  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  2080  05EB  00BE               	movwf	sprintf@sp
  2081                           
  2082                           ;doprnt.c: 494: va_list ap;
  2083                           ;doprnt.c: 499: signed char c;
  2084                           ;doprnt.c: 501: int width;
  2085                           ;doprnt.c: 504: int prec;
  2086                           ;doprnt.c: 508: unsigned char flag;
  2087                           ;doprnt.c: 523: union {
  2088                           ;doprnt.c: 524: unsigned long vd;
  2089                           ;doprnt.c: 525: double integ;
  2090                           ;doprnt.c: 526: } tmpval;
  2091                           ;doprnt.c: 528: unsigned long val;
  2092                           ;doprnt.c: 529: unsigned len;
  2093                           ;doprnt.c: 530: const char * cp;
  2094                           ;doprnt.c: 533: *ap = __va_start();
  2095  05EC  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2096  05ED  00B3               	movwf	??_sprintf
  2097  05EE  0833               	movf	??_sprintf,w
  2098  05EF  00B9               	movwf	sprintf@ap
  2099  05F0                     l2128:	
  2100                           ;doprnt.c: 536: while(c = *f++) {
  2101                           
  2102  05F0  3001               	movlw	1
  2103  05F1  07AA               	addwf	sprintf@f,f
  2104  05F2  30FF               	movlw	-1
  2105  05F3  072A               	addwf	sprintf@f,w
  2106  05F4  0084               	movwf	4
  2107  05F5  118A  200C  118A   	fcall	stringdir
  2108  05F8  00B3               	movwf	??_sprintf
  2109  05F9  0833               	movf	??_sprintf,w
  2110  05FA  00C3               	movwf	sprintf@c
  2111  05FB  0843               	movf	sprintf@c,w
  2112  05FC  1903               	btfsc	3,2
  2113  05FD  2FEA               	goto	l2130
  2114                           
  2115                           ;doprnt.c: 538: if(c != '%')
  2116  05FE  3025               	movlw	37
  2117  05FF  0643               	xorwf	sprintf@c,w
  2118  0600  1903               	btfsc	3,2
  2119  0601  2E0E               	goto	l2038
  2120                           
  2121                           ;doprnt.c: 540: {
  2122                           ;doprnt.c: 541: ((*sp++ = (c)));
  2123  0602  0843               	movf	sprintf@c,w
  2124  0603  00B3               	movwf	??_sprintf
  2125  0604  083E               	movf	sprintf@sp,w
  2126  0605  0084               	movwf	4
  2127  0606  0833               	movf	??_sprintf,w
  2128  0607  1383               	bcf	3,7	;select IRP bank0
  2129  0608  0080               	movwf	0
  2130  0609  3001               	movlw	1
  2131  060A  00B3               	movwf	??_sprintf
  2132  060B  0833               	movf	??_sprintf,w
  2133  060C  07BE               	addwf	sprintf@sp,f
  2134                           
  2135                           ;doprnt.c: 542: continue;
  2136  060D  2DF0               	goto	l2128
  2137  060E                     l2038:	
  2138                           
  2139                           ;doprnt.c: 543: }
  2140                           ;doprnt.c: 546: width = 0;
  2141  060E  01BF               	clrf	sprintf@width
  2142  060F  01C0               	clrf	sprintf@width+1
  2143                           
  2144                           ;doprnt.c: 548: flag = 0;
  2145  0610  01B8               	clrf	sprintf@flag
  2146                           
  2147                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2148  0611  082A               	movf	sprintf@f,w
  2149  0612  0084               	movwf	4
  2150  0613  118A  200C  118A   	fcall	stringdir
  2151  0616  118A  20D7  118A   	fcall	_isdigit
  2152  0619  1C03               	btfss	3,0
  2153  061A  2E51               	goto	l2052
  2154                           
  2155                           ;doprnt.c: 598: width = 0;
  2156  061B  1283               	bcf	3,5	;RP0=0, select bank0
  2157  061C  1303               	bcf	3,6	;RP1=0, select bank0
  2158  061D  01BF               	clrf	sprintf@width
  2159  061E  01C0               	clrf	sprintf@width+1
  2160  061F                     l2044:	
  2161                           ;doprnt.c: 599: do {
  2162                           
  2163                           
  2164                           ;doprnt.c: 600: width *= 10;
  2165  061F  300A               	movlw	10
  2166  0620  00F0               	movwf	___wmul@multiplier
  2167  0621  3000               	movlw	0
  2168  0622  00F1               	movwf	___wmul@multiplier+1
  2169  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0625  0840               	movf	sprintf@width+1,w
  2172  0626  00F3               	movwf	___wmul@multiplicand+1
  2173  0627  083F               	movf	sprintf@width,w
  2174  0628  00F2               	movwf	___wmul@multiplicand
  2175  0629  158A  220C  118A   	fcall	___wmul
  2176  062C  0871               	movf	?___wmul+1,w
  2177  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2178  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2179  062F  00C0               	movwf	sprintf@width+1
  2180  0630  0870               	movf	?___wmul,w
  2181  0631  00BF               	movwf	sprintf@width
  2182                           
  2183                           ;doprnt.c: 601: width += *f++ - '0';
  2184  0632  082A               	movf	sprintf@f,w
  2185  0633  0084               	movwf	4
  2186  0634  118A  200C  118A   	fcall	stringdir
  2187  0637  3ED0               	addlw	208
  2188  0638  00B3               	movwf	??_sprintf
  2189  0639  30FF               	movlw	255
  2190  063A  1803               	skipnc
  2191  063B  3000               	movlw	0
  2192  063C  00B4               	movwf	??_sprintf+1
  2193  063D  0833               	movf	??_sprintf,w
  2194  063E  07BF               	addwf	sprintf@width,f
  2195  063F  1803               	skipnc
  2196  0640  0AC0               	incf	sprintf@width+1,f
  2197  0641  0834               	movf	??_sprintf+1,w
  2198  0642  07C0               	addwf	sprintf@width+1,f
  2199  0643  3001               	movlw	1
  2200  0644  00B3               	movwf	??_sprintf
  2201  0645  0833               	movf	??_sprintf,w
  2202  0646  07AA               	addwf	sprintf@f,f
  2203                           
  2204                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2205  0647  082A               	movf	sprintf@f,w
  2206  0648  0084               	movwf	4
  2207  0649  118A  200C  118A   	fcall	stringdir
  2208  064C  118A  20D7  118A   	fcall	_isdigit
  2209  064F  1803               	btfsc	3,0
  2210  0650  2E1F               	goto	l2044
  2211  0651                     l2052:	
  2212                           
  2213                           ;doprnt.c: 608: }
  2214                           ;doprnt.c: 611: if(*f == '.') {
  2215  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0653  082A               	movf	sprintf@f,w
  2218  0654  0084               	movwf	4
  2219  0655  118A  200C  118A   	fcall	stringdir
  2220  0658  3A2E               	xorlw	46
  2221  0659  1D03               	skipz
  2222  065A  2E93               	goto	l2064
  2223                           
  2224                           ;doprnt.c: 613: f++;
  2225  065B  3001               	movlw	1
  2226  065C  00B3               	movwf	??_sprintf
  2227  065D  0833               	movf	??_sprintf,w
  2228  065E  07AA               	addwf	sprintf@f,f
  2229                           
  2230                           ;doprnt.c: 620: {
  2231                           ;doprnt.c: 621: prec = 0;
  2232  065F  01C1               	clrf	sprintf@prec
  2233  0660  01C2               	clrf	sprintf@prec+1
  2234  0661                     l2062:	
  2235                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2236                           
  2237  0661  082A               	movf	sprintf@f,w
  2238  0662  0084               	movwf	4
  2239  0663  118A  200C  118A   	fcall	stringdir
  2240  0666  118A  20D7  118A   	fcall	_isdigit
  2241  0669  1C03               	btfss	3,0
  2242  066A  2E9F               	goto	l2070
  2243                           
  2244                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2245  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2246  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2247  066D  0842               	movf	sprintf@prec+1,w
  2248  066E  00F1               	movwf	___wmul@multiplier+1
  2249  066F  0841               	movf	sprintf@prec,w
  2250  0670  00F0               	movwf	___wmul@multiplier
  2251  0671  300A               	movlw	10
  2252  0672  00F2               	movwf	___wmul@multiplicand
  2253  0673  3000               	movlw	0
  2254  0674  00F3               	movwf	___wmul@multiplicand+1
  2255  0675  158A  220C  118A   	fcall	___wmul
  2256  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2258  067A  082A               	movf	sprintf@f,w
  2259  067B  0084               	movwf	4
  2260  067C  118A  200C  118A   	fcall	stringdir
  2261  067F  0770               	addwf	?___wmul,w
  2262  0680  00B3               	movwf	??_sprintf
  2263  0681  3000               	movlw	0
  2264  0682  1803               	skipnc
  2265  0683  3001               	movlw	1
  2266  0684  0771               	addwf	?___wmul+1,w
  2267  0685  00B4               	movwf	??_sprintf+1
  2268  0686  0833               	movf	??_sprintf,w
  2269  0687  3ED0               	addlw	208
  2270  0688  00C1               	movwf	sprintf@prec
  2271  0689  0834               	movf	??_sprintf+1,w
  2272  068A  1803               	skipnc
  2273  068B  3E01               	addlw	1
  2274  068C  3EFF               	addlw	255
  2275  068D  00C2               	movwf	sprintf@prec+1
  2276  068E  3001               	movlw	1
  2277  068F  00B3               	movwf	??_sprintf
  2278  0690  0833               	movf	??_sprintf,w
  2279  0691  07AA               	addwf	sprintf@f,f
  2280  0692  2E61               	goto	l2062
  2281  0693                     l2064:	
  2282                           ;doprnt.c: 624: }
  2283                           ;doprnt.c: 625: } else {
  2284                           
  2285                           
  2286                           ;doprnt.c: 626: prec = 0;
  2287  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0694  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0695  01C1               	clrf	sprintf@prec
  2290  0696  01C2               	clrf	sprintf@prec+1
  2291                           
  2292                           ;doprnt.c: 635: switch(c = *f++) {
  2293                           
  2294                           ;doprnt.c: 630: }
  2295                           ;doprnt.c: 633: loop:
  2296  0697  2E9F               	goto	l2070
  2297  0698                     l261:	
  2298                           ;doprnt.c: 641: case 'l':
  2299                           
  2300                           ;doprnt.c: 638: goto alldone;
  2301                           
  2302                           ;doprnt.c: 637: case 0:
  2303                           
  2304                           
  2305                           ;doprnt.c: 643: flag |= 0x10;
  2306  0698  1638               	bsf	sprintf@flag,4
  2307                           
  2308                           ;doprnt.c: 644: goto loop;
  2309  0699  2E9F               	goto	l2070
  2310  069A                     l2066:	
  2311                           ;doprnt.c: 817: case 'u':
  2312                           
  2313                           ;doprnt.c: 813: continue;
  2314                           
  2315                           ;doprnt.c: 802: default:
  2316                           
  2317                           
  2318                           ;doprnt.c: 818: flag |= 0xC0;
  2319  069A  30C0               	movlw	192
  2320  069B  00B3               	movwf	??_sprintf
  2321  069C  0833               	movf	??_sprintf,w
  2322  069D  04B8               	iorwf	sprintf@flag,f
  2323                           
  2324                           ;doprnt.c: 822: }
  2325                           
  2326                           ;doprnt.c: 819: break;
  2327  069E  2EB4               	goto	l264
  2328  069F                     l2070:	
  2329  069F  3001               	movlw	1
  2330  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2331  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2332  06A2  07AA               	addwf	sprintf@f,f
  2333  06A3  30FF               	movlw	-1
  2334  06A4  072A               	addwf	sprintf@f,w
  2335  06A5  0084               	movwf	4
  2336  06A6  118A  200C  118A   	fcall	stringdir
  2337  06A9  00C3               	movwf	sprintf@c
  2338                           
  2339                           ; Switch size 1, requested type "space"
  2340                           ; Number of cases is 3, Range of values is 0 to 117
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte           10     6 (average)
  2344                           ; direct_byte          243     7 (fixed)
  2345                           ; jumptable            260     6 (fixed)
  2346                           ;	Chosen strategy is simple_byte
  2347  06AA  3A00               	xorlw	0	; case 0
  2348  06AB  1903               	skipnz
  2349  06AC  2FEA               	goto	l2130
  2350  06AD  3A6C               	xorlw	108	; case 108
  2351  06AE  1903               	skipnz
  2352  06AF  2E98               	goto	l261
  2353  06B0  3A19               	xorlw	25	; case 117
  2354  06B1  1903               	skipnz
  2355  06B2  2E9A               	goto	l2066
  2356  06B3  2DF0               	goto	l2128
  2357  06B4                     l264:	
  2358                           
  2359                           ;doprnt.c: 1273: {
  2360                           ;doprnt.c: 1281: if(flag & 0x10)
  2361  06B4  1E38               	btfss	sprintf@flag,4
  2362  06B5  2EC6               	goto	l2076
  2363                           
  2364                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  2365  06B6  0839               	movf	sprintf@ap,w
  2366  06B7  0084               	movwf	4
  2367  06B8  1383               	bcf	3,7	;select IRP bank0
  2368  06B9  0800               	movf	0,w
  2369  06BA  00BA               	movwf	sprintf@val
  2370  06BB  0A84               	incf	4,f
  2371  06BC  0800               	movf	0,w
  2372  06BD  00BB               	movwf	sprintf@val+1
  2373  06BE  0A84               	incf	4,f
  2374  06BF  0800               	movf	0,w
  2375  06C0  00BC               	movwf	sprintf@val+2
  2376  06C1  0A84               	incf	4,f
  2377  06C2  0800               	movf	0,w
  2378  06C3  00BD               	movwf	sprintf@val+3
  2379  06C4  3004               	movlw	4
  2380  06C5  2ED5               	goto	L1
  2381  06C6                     l2076:	
  2382                           
  2383                           ;doprnt.c: 1283: else
  2384                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2385  06C6  0839               	movf	sprintf@ap,w
  2386  06C7  0084               	movwf	4
  2387  06C8  1383               	bcf	3,7	;select IRP bank0
  2388  06C9  0800               	movf	0,w
  2389  06CA  00B3               	movwf	??_sprintf
  2390  06CB  0A84               	incf	4,f
  2391  06CC  0800               	movf	0,w
  2392  06CD  00B4               	movwf	??_sprintf+1
  2393  06CE  0833               	movf	??_sprintf,w
  2394  06CF  00BA               	movwf	sprintf@val
  2395  06D0  0834               	movf	??_sprintf+1,w
  2396  06D1  00BB               	movwf	sprintf@val+1
  2397  06D2  01BC               	clrf	sprintf@val+2
  2398  06D3  01BD               	clrf	sprintf@val+3
  2399  06D4  3002               	movlw	2
  2400  06D5                     L1:	
  2401  06D5  00B3               	movwf	??_sprintf
  2402  06D6  0833               	movf	??_sprintf,w
  2403  06D7  07B9               	addwf	sprintf@ap,f
  2404                           
  2405                           ;doprnt.c: 1287: }
  2406                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2407  06D8  0841               	movf	sprintf@prec,w
  2408  06D9  0442               	iorwf	sprintf@prec+1,w
  2409  06DA  1D03               	btfss	3,2
  2410  06DB  2EE8               	goto	l2086
  2411  06DC  083D               	movf	sprintf@val+3,w
  2412  06DD  043C               	iorwf	sprintf@val+2,w
  2413  06DE  043B               	iorwf	sprintf@val+1,w
  2414  06DF  043A               	iorwf	sprintf@val,w
  2415  06E0  1D03               	skipz
  2416  06E1  2EE8               	goto	l2086
  2417                           
  2418                           ;doprnt.c: 1291: prec++;
  2419  06E2  3001               	movlw	1
  2420  06E3  07C1               	addwf	sprintf@prec,f
  2421  06E4  1803               	skipnc
  2422  06E5  0AC2               	incf	sprintf@prec+1,f
  2423  06E6  3000               	movlw	0
  2424  06E7  07C2               	addwf	sprintf@prec+1,f
  2425  06E8                     l2086:	
  2426                           
  2427                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2428  06E8  01C3               	clrf	sprintf@c
  2429  06E9  0AC3               	incf	sprintf@c,f
  2430  06EA  300A               	movlw	10
  2431  06EB  0643               	xorwf	sprintf@c,w
  2432  06EC  1903               	btfsc	3,2
  2433  06ED  2F22               	goto	l2098
  2434  06EE                     l2092:	
  2435                           
  2436                           ;doprnt.c: 1306: if(val < dpowers[c])
  2437  06EE  0843               	movf	sprintf@c,w
  2438  06EF  00B3               	movwf	??_sprintf
  2439  06F0  3001               	movlw	1
  2440  06F1                     u2615:	
  2441  06F1  1003               	clrc
  2442  06F2  0DB3               	rlf	??_sprintf,f
  2443  06F3  3EFF               	addlw	-1
  2444  06F4  1D03               	skipz
  2445  06F5  2EF1               	goto	u2615
  2446  06F6  1003               	clrc
  2447  06F7  0D33               	rlf	??_sprintf,w
  2448  06F8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2449  06F9  0084               	movwf	4
  2450  06FA  118A  200C  118A   	fcall	stringdir
  2451  06FD  00B4               	movwf	??_sprintf+1
  2452  06FE  118A  200C  118A   	fcall	stringdir
  2453  0701  00B5               	movwf	??_sprintf+2
  2454  0702  118A  200C  118A   	fcall	stringdir
  2455  0705  00B6               	movwf	??_sprintf+3
  2456  0706  118A  200C  118A   	fcall	stringdir
  2457  0709  00B7               	movwf	??_sprintf+4
  2458  070A  0837               	movf	??_sprintf+4,w
  2459  070B  023D               	subwf	sprintf@val+3,w
  2460  070C  1D03               	skipz
  2461  070D  2F18               	goto	u2625
  2462  070E  0836               	movf	??_sprintf+3,w
  2463  070F  023C               	subwf	sprintf@val+2,w
  2464  0710  1D03               	skipz
  2465  0711  2F18               	goto	u2625
  2466  0712  0835               	movf	??_sprintf+2,w
  2467  0713  023B               	subwf	sprintf@val+1,w
  2468  0714  1D03               	skipz
  2469  0715  2F18               	goto	u2625
  2470  0716  0834               	movf	??_sprintf+1,w
  2471  0717  023A               	subwf	sprintf@val,w
  2472  0718                     u2625:	
  2473  0718  1C03               	btfss	3,0
  2474  0719  2F22               	goto	l2098
  2475                           
  2476                           ;doprnt.c: 1307: break;
  2477  071A  3001               	movlw	1
  2478  071B  00B3               	movwf	??_sprintf
  2479  071C  0833               	movf	??_sprintf,w
  2480  071D  07C3               	addwf	sprintf@c,f
  2481  071E  300A               	movlw	10
  2482  071F  0643               	xorwf	sprintf@c,w
  2483  0720  1D03               	btfss	3,2
  2484  0721  2EEE               	goto	l2092
  2485  0722                     l2098:	
  2486                           
  2487                           ;doprnt.c: 1339: if(c < prec)
  2488  0722  0843               	movf	sprintf@c,w
  2489  0723  00B3               	movwf	??_sprintf
  2490  0724  01B4               	clrf	??_sprintf+1
  2491  0725  1BB3               	btfsc	??_sprintf,7
  2492  0726  03B4               	decf	??_sprintf+1,f
  2493  0727  0834               	movf	??_sprintf+1,w
  2494  0728  3A80               	xorlw	128
  2495  0729  00B5               	movwf	??_sprintf+2
  2496  072A  0842               	movf	sprintf@prec+1,w
  2497  072B  3A80               	xorlw	128
  2498  072C  0235               	subwf	??_sprintf+2,w
  2499  072D  1D03               	skipz
  2500  072E  2F31               	goto	u2645
  2501  072F  0841               	movf	sprintf@prec,w
  2502  0730  0233               	subwf	??_sprintf,w
  2503  0731                     u2645:	
  2504  0731  1803               	skipnc
  2505  0732  2F3A               	goto	l2102
  2506                           
  2507                           ;doprnt.c: 1340: c = prec;
  2508  0733  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0734  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0735  0841               	movf	sprintf@prec,w
  2511  0736  00B3               	movwf	??_sprintf
  2512  0737  0833               	movf	??_sprintf,w
  2513  0738  00C3               	movwf	sprintf@c
  2514  0739  2F54               	goto	l2106
  2515  073A                     l2102:	
  2516                           
  2517                           ;doprnt.c: 1341: else if(prec < c)
  2518  073A  1283               	bcf	3,5	;RP0=0, select bank0
  2519  073B  1303               	bcf	3,6	;RP1=0, select bank0
  2520  073C  0843               	movf	sprintf@c,w
  2521  073D  00B3               	movwf	??_sprintf
  2522  073E  01B4               	clrf	??_sprintf+1
  2523  073F  1BB3               	btfsc	??_sprintf,7
  2524  0740  03B4               	decf	??_sprintf+1,f
  2525  0741  0842               	movf	sprintf@prec+1,w
  2526  0742  3A80               	xorlw	128
  2527  0743  00B5               	movwf	??_sprintf+2
  2528  0744  0834               	movf	??_sprintf+1,w
  2529  0745  3A80               	xorlw	128
  2530  0746  0235               	subwf	??_sprintf+2,w
  2531  0747  1D03               	skipz
  2532  0748  2F4B               	goto	u2655
  2533  0749  0833               	movf	??_sprintf,w
  2534  074A  0241               	subwf	sprintf@prec,w
  2535  074B                     u2655:	
  2536  074B  1803               	skipnc
  2537  074C  2F54               	goto	l2106
  2538                           
  2539                           ;doprnt.c: 1342: prec = c;
  2540  074D  1283               	bcf	3,5	;RP0=0, select bank0
  2541  074E  1303               	bcf	3,6	;RP1=0, select bank0
  2542  074F  0843               	movf	sprintf@c,w
  2543  0750  00C1               	movwf	sprintf@prec
  2544  0751  01C2               	clrf	sprintf@prec+1
  2545  0752  1BC1               	btfsc	sprintf@prec,7
  2546  0753  03C2               	decf	sprintf@prec+1,f
  2547  0754                     l2106:	
  2548                           
  2549                           ;doprnt.c: 1381: if(width > c)
  2550  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0756  0843               	movf	sprintf@c,w
  2553  0757  00B3               	movwf	??_sprintf
  2554  0758  01B4               	clrf	??_sprintf+1
  2555  0759  1BB3               	btfsc	??_sprintf,7
  2556  075A  03B4               	decf	??_sprintf+1,f
  2557  075B  0834               	movf	??_sprintf+1,w
  2558  075C  3A80               	xorlw	128
  2559  075D  00B5               	movwf	??_sprintf+2
  2560  075E  0840               	movf	sprintf@width+1,w
  2561  075F  3A80               	xorlw	128
  2562  0760  0235               	subwf	??_sprintf+2,w
  2563  0761  1D03               	skipz
  2564  0762  2F65               	goto	u2665
  2565  0763  083F               	movf	sprintf@width,w
  2566  0764  0233               	subwf	??_sprintf,w
  2567  0765                     u2665:	
  2568  0765  1803               	skipnc
  2569  0766  2F75               	goto	l2110
  2570                           
  2571                           ;doprnt.c: 1382: width -= c;
  2572  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0769  0843               	movf	sprintf@c,w
  2575  076A  00B3               	movwf	??_sprintf
  2576  076B  01B4               	clrf	??_sprintf+1
  2577  076C  1BB3               	btfsc	??_sprintf,7
  2578  076D  03B4               	decf	??_sprintf+1,f
  2579  076E  0833               	movf	??_sprintf,w
  2580  076F  02BF               	subwf	sprintf@width,f
  2581  0770  0834               	movf	??_sprintf+1,w
  2582  0771  1C03               	skipc
  2583  0772  03C0               	decf	sprintf@width+1,f
  2584  0773  02C0               	subwf	sprintf@width+1,f
  2585  0774  2F79               	goto	l2112
  2586  0775                     l2110:	
  2587                           
  2588                           ;doprnt.c: 1383: else
  2589                           ;doprnt.c: 1384: width = 0;
  2590  0775  1283               	bcf	3,5	;RP0=0, select bank0
  2591  0776  1303               	bcf	3,6	;RP1=0, select bank0
  2592  0777  01BF               	clrf	sprintf@width
  2593  0778  01C0               	clrf	sprintf@width+1
  2594  0779                     l2112:	
  2595                           
  2596                           ;doprnt.c: 1422: {
  2597                           ;doprnt.c: 1424: if(width
  2598                           ;doprnt.c: 1428: )
  2599  0779  083F               	movf	sprintf@width,w
  2600  077A  0440               	iorwf	sprintf@width+1,w
  2601  077B  1903               	btfsc	3,2
  2602  077C  2FDD               	goto	l2126
  2603                           
  2604                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2605                           
  2606                           ;doprnt.c: 1429: do
  2607  077D  3020               	movlw	32
  2608  077E  00B3               	movwf	??_sprintf
  2609  077F  083E               	movf	sprintf@sp,w
  2610  0780  0084               	movwf	4
  2611  0781  0833               	movf	??_sprintf,w
  2612  0782  1383               	bcf	3,7	;select IRP bank0
  2613  0783  0080               	movwf	0
  2614  0784  3001               	movlw	1
  2615  0785  00B3               	movwf	??_sprintf
  2616  0786  0833               	movf	??_sprintf,w
  2617  0787  07BE               	addwf	sprintf@sp,f
  2618                           
  2619                           ;doprnt.c: 1431: while(--width);
  2620  0788  30FF               	movlw	255
  2621  0789  07BF               	addwf	sprintf@width,f
  2622  078A  1803               	skipnc
  2623  078B  0AC0               	incf	sprintf@width+1,f
  2624  078C  30FF               	movlw	255
  2625  078D  07C0               	addwf	sprintf@width+1,f
  2626  078E  2F79               	goto	l2112
  2627  078F                     l2120:	
  2628                           ;doprnt.c: 1469: }
  2629                           ;doprnt.c: 1474: while(prec--) {
  2630                           
  2631                           
  2632                           ;doprnt.c: 1478: {
  2633                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2634  078F  3000               	movlw	0
  2635  0790  00A3               	movwf	___llmod@divisor+3
  2636  0791  3000               	movlw	0
  2637  0792  00A2               	movwf	___llmod@divisor+2
  2638  0793  3000               	movlw	0
  2639  0794  00A1               	movwf	___llmod@divisor+1
  2640  0795  300A               	movlw	10
  2641  0796  00A0               	movwf	___llmod@divisor
  2642  0797  0841               	movf	sprintf@prec,w
  2643  0798  00B3               	movwf	??_sprintf
  2644  0799  3001               	movlw	1
  2645  079A                     u2695:	
  2646  079A  1003               	clrc
  2647  079B  0DB3               	rlf	??_sprintf,f
  2648  079C  3EFF               	addlw	-1
  2649  079D  1D03               	skipz
  2650  079E  2F9A               	goto	u2695
  2651  079F  1003               	clrc
  2652  07A0  0D33               	rlf	??_sprintf,w
  2653  07A1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2654  07A2  0084               	movwf	4
  2655  07A3  118A  200C  118A   	fcall	stringdir
  2656  07A6  00F0               	movwf	___lldiv@divisor
  2657  07A7  118A  200C  118A   	fcall	stringdir
  2658  07AA  00F1               	movwf	___lldiv@divisor+1
  2659  07AB  118A  200C  118A   	fcall	stringdir
  2660  07AE  00F2               	movwf	___lldiv@divisor+2
  2661  07AF  118A  200C  118A   	fcall	stringdir
  2662  07B2  00F3               	movwf	___lldiv@divisor+3
  2663  07B3  083D               	movf	sprintf@val+3,w
  2664  07B4  00F7               	movwf	___lldiv@dividend+3
  2665  07B5  083C               	movf	sprintf@val+2,w
  2666  07B6  00F6               	movwf	___lldiv@dividend+2
  2667  07B7  083B               	movf	sprintf@val+1,w
  2668  07B8  00F5               	movwf	___lldiv@dividend+1
  2669  07B9  083A               	movf	sprintf@val,w
  2670  07BA  00F4               	movwf	___lldiv@dividend
  2671  07BB  158A  2665  118A   	fcall	___lldiv
  2672  07BE  0873               	movf	?___lldiv+3,w
  2673  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2674  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2675  07C1  00A7               	movwf	___llmod@dividend+3
  2676  07C2  0872               	movf	?___lldiv+2,w
  2677  07C3  00A6               	movwf	___llmod@dividend+2
  2678  07C4  0871               	movf	?___lldiv+1,w
  2679  07C5  00A5               	movwf	___llmod@dividend+1
  2680  07C6  0870               	movf	?___lldiv,w
  2681  07C7  00A4               	movwf	___llmod@dividend
  2682  07C8  158A  24BF  118A   	fcall	___llmod
  2683  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  2684  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  2685  07CD  0820               	movf	?___llmod,w
  2686  07CE  3E30               	addlw	48
  2687  07CF  00B4               	movwf	??_sprintf+1
  2688  07D0  0834               	movf	??_sprintf+1,w
  2689  07D1  00C3               	movwf	sprintf@c
  2690                           
  2691                           ;doprnt.c: 1523: }
  2692                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2693  07D2  0843               	movf	sprintf@c,w
  2694  07D3  00B3               	movwf	??_sprintf
  2695  07D4  083E               	movf	sprintf@sp,w
  2696  07D5  0084               	movwf	4
  2697  07D6  0833               	movf	??_sprintf,w
  2698  07D7  1383               	bcf	3,7	;select IRP bank0
  2699  07D8  0080               	movwf	0
  2700  07D9  3001               	movlw	1
  2701  07DA  00B3               	movwf	??_sprintf
  2702  07DB  0833               	movf	??_sprintf,w
  2703  07DC  07BE               	addwf	sprintf@sp,f
  2704  07DD                     l2126:	
  2705  07DD  30FF               	movlw	255
  2706  07DE  07C1               	addwf	sprintf@prec,f
  2707  07DF  1803               	skipnc
  2708  07E0  0AC2               	incf	sprintf@prec+1,f
  2709  07E1  30FF               	movlw	255
  2710  07E2  07C2               	addwf	sprintf@prec+1,f
  2711  07E3  0A41               	incf	sprintf@prec,w
  2712  07E4  1D03               	skipz
  2713  07E5  2F8F               	goto	l2120
  2714  07E6  0A42               	incf	sprintf@prec+1,w
  2715  07E7  1903               	btfsc	3,2
  2716  07E8  2DF0               	goto	l2128
  2717  07E9  2F8F               	goto	l2120
  2718  07EA                     l2130:	
  2719                           ;doprnt.c: 1525: }
  2720                           ;doprnt.c: 1533: }
  2721                           ;doprnt.c: 1535: alldone:
  2722                           
  2723                           
  2724                           ;doprnt.c: 1538: *sp = 0;
  2725  07EA  083E               	movf	sprintf@sp,w
  2726  07EB  0084               	movwf	4
  2727  07EC  1383               	bcf	3,7	;select IRP bank0
  2728  07ED  0180               	clrf	0
  2729  07EE  0008               	return
  2730  07EF                     __end_of_sprintf:	
  2731                           ;doprnt.c: 1540: return 0;
  2732                           ;	Return value of _sprintf is never used
  2733                           
  2734                           
  2735                           	psect	text6
  2736  00D7                     __ptext6:	
  2737 ;; *************** function _isdigit *****************
  2738 ;; Defined at:
  2739 ;;		line 8 in file "D:\MPLAB\sources\common\isdigit.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  c               1    wreg     unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  c               1    1[COMMON] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;		None               void
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         0       0       0       0       0
  2754 ;;      Locals:         2       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0
  2756 ;;      Totals:         2       0       0       0       0
  2757 ;;Total ram usage:        2 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_sprintf
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           
  2767                           ;psect for function _isdigit
  2768  00D7                     _isdigit:	
  2769                           
  2770                           ;incstack = 0
  2771                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2772                           ;isdigit@c stored from wreg
  2773  00D7  00F1               	movwf	isdigit@c
  2774  00D8  01F0               	clrf	_isdigit$600
  2775  00D9  303A               	movlw	58
  2776  00DA  0271               	subwf	isdigit@c,w
  2777  00DB  1803               	skipnc
  2778  00DC  28E3               	goto	l1806
  2779  00DD  3030               	movlw	48
  2780  00DE  0271               	subwf	isdigit@c,w
  2781  00DF  1C03               	skipc
  2782  00E0  28E3               	goto	l1806
  2783  00E1  01F0               	clrf	_isdigit$600
  2784  00E2  0AF0               	incf	_isdigit$600,f
  2785  00E3                     l1806:	
  2786  00E3  0C70               	rrf	_isdigit$600,w
  2787  00E4  0008               	return
  2788  00E5                     __end_of_isdigit:	
  2789                           
  2790                           	psect	text7
  2791  0A0C                     __ptext7:	
  2792 ;; *************** function ___wmul *****************
  2793 ;; Defined at:
  2794 ;;		line 15 in file "D:\MPLAB\sources\common\Umul16.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  multiplier      2    0[COMMON] unsigned int 
  2797 ;;  multiplicand    2    2[COMMON] unsigned int 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  product         2    4[COMMON] unsigned int 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  2    0[COMMON] unsigned int 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2809 ;;      Params:         4       0       0       0       0
  2810 ;;      Locals:         2       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0
  2812 ;;      Totals:         6       0       0       0       0
  2813 ;;Total ram usage:        6 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_sprintf
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function ___wmul
  2824  0A0C                     ___wmul:	
  2825                           
  2826                           ;incstack = 0
  2827                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2828  0A0C  01F4               	clrf	___wmul@product
  2829  0A0D  01F5               	clrf	___wmul@product+1
  2830  0A0E                     l1812:	
  2831  0A0E  1C70               	btfss	___wmul@multiplier,0
  2832  0A0F  2A16               	goto	l367
  2833  0A10  0872               	movf	___wmul@multiplicand,w
  2834  0A11  07F4               	addwf	___wmul@product,f
  2835  0A12  1803               	skipnc
  2836  0A13  0AF5               	incf	___wmul@product+1,f
  2837  0A14  0873               	movf	___wmul@multiplicand+1,w
  2838  0A15  07F5               	addwf	___wmul@product+1,f
  2839  0A16                     l367:	
  2840  0A16  3001               	movlw	1
  2841  0A17                     u1975:	
  2842  0A17  1003               	clrc
  2843  0A18  0DF2               	rlf	___wmul@multiplicand,f
  2844  0A19  0DF3               	rlf	___wmul@multiplicand+1,f
  2845  0A1A  3EFF               	addlw	-1
  2846  0A1B  1D03               	skipz
  2847  0A1C  2A17               	goto	u1975
  2848  0A1D  3001               	movlw	1
  2849  0A1E                     u1985:	
  2850  0A1E  1003               	clrc
  2851  0A1F  0CF1               	rrf	___wmul@multiplier+1,f
  2852  0A20  0CF0               	rrf	___wmul@multiplier,f
  2853  0A21  3EFF               	addlw	-1
  2854  0A22  1D03               	skipz
  2855  0A23  2A1E               	goto	u1985
  2856  0A24  0870               	movf	___wmul@multiplier,w
  2857  0A25  0471               	iorwf	___wmul@multiplier+1,w
  2858  0A26  1D03               	btfss	3,2
  2859  0A27  2A0E               	goto	l1812
  2860  0A28  0875               	movf	___wmul@product+1,w
  2861  0A29  00F1               	movwf	?___wmul+1
  2862  0A2A  0874               	movf	___wmul@product,w
  2863  0A2B  00F0               	movwf	?___wmul
  2864  0A2C  0008               	return
  2865  0A2D                     __end_of___wmul:	
  2866                           
  2867                           	psect	text8
  2868  0CBF                     __ptext8:	
  2869 ;; *************** function ___llmod *****************
  2870 ;; Defined at:
  2871 ;;		line 6 in file "D:\MPLAB\sources\common\llmod.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  divisor         4    0[BANK0 ] unsigned long 
  2874 ;;  dividend        4    4[BANK0 ] unsigned long 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  counter         1    9[BANK0 ] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  4    0[BANK0 ] unsigned long 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2886 ;;      Params:         0       8       0       0       0
  2887 ;;      Locals:         0       1       0       0       0
  2888 ;;      Temps:          0       1       0       0       0
  2889 ;;      Totals:         0      10       0       0       0
  2890 ;;Total ram usage:       10 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_sprintf
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function ___llmod
  2901  0CBF                     ___llmod:	
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2905  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0CC1  0823               	movf	___llmod@divisor+3,w
  2908  0CC2  0422               	iorwf	___llmod@divisor+2,w
  2909  0CC3  0421               	iorwf	___llmod@divisor+1,w
  2910  0CC4  0420               	iorwf	___llmod@divisor,w
  2911  0CC5  1903               	skipnz
  2912  0CC6  2D04               	goto	l1934
  2913  0CC7  01A9               	clrf	___llmod@counter
  2914  0CC8  0AA9               	incf	___llmod@counter,f
  2915  0CC9                     l1924:	
  2916  0CC9  1BA3               	btfsc	___llmod@divisor+3,7
  2917  0CCA  2CD9               	goto	l1926
  2918  0CCB  3001               	movlw	1
  2919  0CCC  00A8               	movwf	??___llmod
  2920  0CCD                     u2325:	
  2921  0CCD  1003               	clrc
  2922  0CCE  0DA0               	rlf	___llmod@divisor,f
  2923  0CCF  0DA1               	rlf	___llmod@divisor+1,f
  2924  0CD0  0DA2               	rlf	___llmod@divisor+2,f
  2925  0CD1  0DA3               	rlf	___llmod@divisor+3,f
  2926  0CD2  0BA8               	decfsz	??___llmod,f
  2927  0CD3  2CCD               	goto	u2325
  2928  0CD4  3001               	movlw	1
  2929  0CD5  00A8               	movwf	??___llmod
  2930  0CD6  0828               	movf	??___llmod,w
  2931  0CD7  07A9               	addwf	___llmod@counter,f
  2932  0CD8  2CC9               	goto	l1924
  2933  0CD9                     l1926:	
  2934  0CD9  0823               	movf	___llmod@divisor+3,w
  2935  0CDA  0227               	subwf	___llmod@dividend+3,w
  2936  0CDB  1D03               	skipz
  2937  0CDC  2CE7               	goto	u2345
  2938  0CDD  0822               	movf	___llmod@divisor+2,w
  2939  0CDE  0226               	subwf	___llmod@dividend+2,w
  2940  0CDF  1D03               	skipz
  2941  0CE0  2CE7               	goto	u2345
  2942  0CE1  0821               	movf	___llmod@divisor+1,w
  2943  0CE2  0225               	subwf	___llmod@dividend+1,w
  2944  0CE3  1D03               	skipz
  2945  0CE4  2CE7               	goto	u2345
  2946  0CE5  0820               	movf	___llmod@divisor,w
  2947  0CE6  0224               	subwf	___llmod@dividend,w
  2948  0CE7                     u2345:	
  2949  0CE7  1C03               	skipc
  2950  0CE8  2CF7               	goto	l1930
  2951  0CE9  0820               	movf	___llmod@divisor,w
  2952  0CEA  02A4               	subwf	___llmod@dividend,f
  2953  0CEB  0821               	movf	___llmod@divisor+1,w
  2954  0CEC  1C03               	skipc
  2955  0CED  0F21               	incfsz	___llmod@divisor+1,w
  2956  0CEE  02A5               	subwf	___llmod@dividend+1,f
  2957  0CEF  0822               	movf	___llmod@divisor+2,w
  2958  0CF0  1C03               	skipc
  2959  0CF1  0F22               	incfsz	___llmod@divisor+2,w
  2960  0CF2  02A6               	subwf	___llmod@dividend+2,f
  2961  0CF3  0823               	movf	___llmod@divisor+3,w
  2962  0CF4  1C03               	skipc
  2963  0CF5  0F23               	incfsz	___llmod@divisor+3,w
  2964  0CF6  02A7               	subwf	___llmod@dividend+3,f
  2965  0CF7                     l1930:	
  2966  0CF7  3001               	movlw	1
  2967  0CF8                     u2355:	
  2968  0CF8  1003               	clrc
  2969  0CF9  0CA3               	rrf	___llmod@divisor+3,f
  2970  0CFA  0CA2               	rrf	___llmod@divisor+2,f
  2971  0CFB  0CA1               	rrf	___llmod@divisor+1,f
  2972  0CFC  0CA0               	rrf	___llmod@divisor,f
  2973  0CFD  3EFF               	addlw	-1
  2974  0CFE  1D03               	skipz
  2975  0CFF  2CF8               	goto	u2355
  2976  0D00  3001               	movlw	1
  2977  0D01  02A9               	subwf	___llmod@counter,f
  2978  0D02  1D03               	btfss	3,2
  2979  0D03  2CD9               	goto	l1926
  2980  0D04                     l1934:	
  2981  0D04  0827               	movf	___llmod@dividend+3,w
  2982  0D05  00A3               	movwf	?___llmod+3
  2983  0D06  0826               	movf	___llmod@dividend+2,w
  2984  0D07  00A2               	movwf	?___llmod+2
  2985  0D08  0825               	movf	___llmod@dividend+1,w
  2986  0D09  00A1               	movwf	?___llmod+1
  2987  0D0A  0824               	movf	___llmod@dividend,w
  2988  0D0B  00A0               	movwf	?___llmod
  2989  0D0C  0008               	return
  2990  0D0D                     __end_of___llmod:	
  2991                           
  2992                           	psect	text9
  2993  0E65                     __ptext9:	
  2994 ;; *************** function ___lldiv *****************
  2995 ;; Defined at:
  2996 ;;		line 6 in file "D:\MPLAB\sources\common\lldiv.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  divisor         4    0[COMMON] unsigned long 
  2999 ;;  dividend        4    4[COMMON] unsigned long 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  quotient        4    9[COMMON] unsigned long 
  3002 ;;  counter         1   13[COMMON] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  4    0[COMMON] unsigned long 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3012 ;;      Params:         8       0       0       0       0
  3013 ;;      Locals:         5       0       0       0       0
  3014 ;;      Temps:          1       0       0       0       0
  3015 ;;      Totals:        14       0       0       0       0
  3016 ;;Total ram usage:       14 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_sprintf
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function ___lldiv
  3027  0E65                     ___lldiv:	
  3028                           
  3029                           ;incstack = 0
  3030                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3031  0E65  3000               	movlw	0
  3032  0E66  00FC               	movwf	___lldiv@quotient+3
  3033  0E67  3000               	movlw	0
  3034  0E68  00FB               	movwf	___lldiv@quotient+2
  3035  0E69  3000               	movlw	0
  3036  0E6A  00FA               	movwf	___lldiv@quotient+1
  3037  0E6B  3000               	movlw	0
  3038  0E6C  00F9               	movwf	___lldiv@quotient
  3039  0E6D  0873               	movf	___lldiv@divisor+3,w
  3040  0E6E  0472               	iorwf	___lldiv@divisor+2,w
  3041  0E6F  0471               	iorwf	___lldiv@divisor+1,w
  3042  0E70  0470               	iorwf	___lldiv@divisor,w
  3043  0E71  1903               	skipnz
  3044  0E72  2EBA               	goto	l1914
  3045  0E73  01FD               	clrf	___lldiv@counter
  3046  0E74  0AFD               	incf	___lldiv@counter,f
  3047  0E75                     l1900:	
  3048  0E75  1BF3               	btfsc	___lldiv@divisor+3,7
  3049  0E76  2E85               	goto	l1902
  3050  0E77  3001               	movlw	1
  3051  0E78  00F8               	movwf	??___lldiv
  3052  0E79                     u2255:	
  3053  0E79  1003               	clrc
  3054  0E7A  0DF0               	rlf	___lldiv@divisor,f
  3055  0E7B  0DF1               	rlf	___lldiv@divisor+1,f
  3056  0E7C  0DF2               	rlf	___lldiv@divisor+2,f
  3057  0E7D  0DF3               	rlf	___lldiv@divisor+3,f
  3058  0E7E  0BF8               	decfsz	??___lldiv,f
  3059  0E7F  2E79               	goto	u2255
  3060  0E80  3001               	movlw	1
  3061  0E81  00F8               	movwf	??___lldiv
  3062  0E82  0878               	movf	??___lldiv,w
  3063  0E83  07FD               	addwf	___lldiv@counter,f
  3064  0E84  2E75               	goto	l1900
  3065  0E85                     l1902:	
  3066  0E85  3001               	movlw	1
  3067  0E86  00F8               	movwf	??___lldiv
  3068  0E87                     u2275:	
  3069  0E87  1003               	clrc
  3070  0E88  0DF9               	rlf	___lldiv@quotient,f
  3071  0E89  0DFA               	rlf	___lldiv@quotient+1,f
  3072  0E8A  0DFB               	rlf	___lldiv@quotient+2,f
  3073  0E8B  0DFC               	rlf	___lldiv@quotient+3,f
  3074  0E8C  0BF8               	decfsz	??___lldiv,f
  3075  0E8D  2E87               	goto	u2275
  3076  0E8E  0873               	movf	___lldiv@divisor+3,w
  3077  0E8F  0277               	subwf	___lldiv@dividend+3,w
  3078  0E90  1D03               	skipz
  3079  0E91  2E9C               	goto	u2285
  3080  0E92  0872               	movf	___lldiv@divisor+2,w
  3081  0E93  0276               	subwf	___lldiv@dividend+2,w
  3082  0E94  1D03               	skipz
  3083  0E95  2E9C               	goto	u2285
  3084  0E96  0871               	movf	___lldiv@divisor+1,w
  3085  0E97  0275               	subwf	___lldiv@dividend+1,w
  3086  0E98  1D03               	skipz
  3087  0E99  2E9C               	goto	u2285
  3088  0E9A  0870               	movf	___lldiv@divisor,w
  3089  0E9B  0274               	subwf	___lldiv@dividend,w
  3090  0E9C                     u2285:	
  3091  0E9C  1C03               	skipc
  3092  0E9D  2EAD               	goto	l1910
  3093  0E9E  0870               	movf	___lldiv@divisor,w
  3094  0E9F  02F4               	subwf	___lldiv@dividend,f
  3095  0EA0  0871               	movf	___lldiv@divisor+1,w
  3096  0EA1  1C03               	skipc
  3097  0EA2  0F71               	incfsz	___lldiv@divisor+1,w
  3098  0EA3  02F5               	subwf	___lldiv@dividend+1,f
  3099  0EA4  0872               	movf	___lldiv@divisor+2,w
  3100  0EA5  1C03               	skipc
  3101  0EA6  0F72               	incfsz	___lldiv@divisor+2,w
  3102  0EA7  02F6               	subwf	___lldiv@dividend+2,f
  3103  0EA8  0873               	movf	___lldiv@divisor+3,w
  3104  0EA9  1C03               	skipc
  3105  0EAA  0F73               	incfsz	___lldiv@divisor+3,w
  3106  0EAB  02F7               	subwf	___lldiv@dividend+3,f
  3107  0EAC  1479               	bsf	___lldiv@quotient,0
  3108  0EAD                     l1910:	
  3109  0EAD  3001               	movlw	1
  3110  0EAE                     u2295:	
  3111  0EAE  1003               	clrc
  3112  0EAF  0CF3               	rrf	___lldiv@divisor+3,f
  3113  0EB0  0CF2               	rrf	___lldiv@divisor+2,f
  3114  0EB1  0CF1               	rrf	___lldiv@divisor+1,f
  3115  0EB2  0CF0               	rrf	___lldiv@divisor,f
  3116  0EB3  3EFF               	addlw	-1
  3117  0EB4  1D03               	skipz
  3118  0EB5  2EAE               	goto	u2295
  3119  0EB6  3001               	movlw	1
  3120  0EB7  02FD               	subwf	___lldiv@counter,f
  3121  0EB8  1D03               	btfss	3,2
  3122  0EB9  2E85               	goto	l1902
  3123  0EBA                     l1914:	
  3124  0EBA  087C               	movf	___lldiv@quotient+3,w
  3125  0EBB  00F3               	movwf	?___lldiv+3
  3126  0EBC  087B               	movf	___lldiv@quotient+2,w
  3127  0EBD  00F2               	movwf	?___lldiv+2
  3128  0EBE  087A               	movf	___lldiv@quotient+1,w
  3129  0EBF  00F1               	movwf	?___lldiv+1
  3130  0EC0  0879               	movf	___lldiv@quotient,w
  3131  0EC1  00F0               	movwf	?___lldiv
  3132  0EC2  0008               	return
  3133  0EC3                     __end_of___lldiv:	
  3134                           
  3135                           	psect	text10
  3136  0A76                     __ptext10:	
  3137 ;; *************** function ___lltoft *****************
  3138 ;; Defined at:
  3139 ;;		line 35 in file "D:\MPLAB\sources\common\lltoft.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  c               4    8[COMMON] unsigned long 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  exp             1   13[COMMON] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  3    8[COMMON] float 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         4       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0
  3155 ;;      Temps:          1       0       0       0       0
  3156 ;;      Totals:         6       0       0       0       0
  3157 ;;Total ram usage:        6 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    1
  3160 ;; This function calls:
  3161 ;;		___ftpack
  3162 ;; This function is called by:
  3163 ;;		_ftoa
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function ___lltoft
  3169  0A76                     ___lltoft:	
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3173  0A76  308E               	movlw	142
  3174  0A77  00FC               	movwf	??___lltoft
  3175  0A78  087C               	movf	??___lltoft,w
  3176  0A79  00FD               	movwf	___lltoft@exp
  3177  0A7A                     l2296:	
  3178  0A7A  30FF               	movlw	255
  3179  0A7B  057B               	andwf	___lltoft@c+3,w
  3180  0A7C  1903               	btfsc	3,2
  3181  0A7D  2A8C               	goto	l2298
  3182  0A7E  3001               	movlw	1
  3183  0A7F                     u3065:	
  3184  0A7F  1003               	clrc
  3185  0A80  0CFB               	rrf	___lltoft@c+3,f
  3186  0A81  0CFA               	rrf	___lltoft@c+2,f
  3187  0A82  0CF9               	rrf	___lltoft@c+1,f
  3188  0A83  0CF8               	rrf	___lltoft@c,f
  3189  0A84  3EFF               	addlw	-1
  3190  0A85  1D03               	skipz
  3191  0A86  2A7F               	goto	u3065
  3192  0A87  3001               	movlw	1
  3193  0A88  00FC               	movwf	??___lltoft
  3194  0A89  087C               	movf	??___lltoft,w
  3195  0A8A  07FD               	addwf	___lltoft@exp,f
  3196  0A8B  2A7A               	goto	l2296
  3197  0A8C                     l2298:	
  3198  0A8C  0878               	movf	___lltoft@c,w
  3199  0A8D  00F0               	movwf	___ftpack@arg
  3200  0A8E  0879               	movf	___lltoft@c+1,w
  3201  0A8F  00F1               	movwf	___ftpack@arg+1
  3202  0A90  087A               	movf	___lltoft@c+2,w
  3203  0A91  00F2               	movwf	___ftpack@arg+2
  3204  0A92  087D               	movf	___lltoft@exp,w
  3205  0A93  00FC               	movwf	??___lltoft
  3206  0A94  087C               	movf	??___lltoft,w
  3207  0A95  00F3               	movwf	___ftpack@exp
  3208  0A96  01F4               	clrf	___ftpack@sign
  3209  0A97  158A  2794         	fcall	___ftpack
  3210  0A99  0870               	movf	?___ftpack,w
  3211  0A9A  00F8               	movwf	?___lltoft
  3212  0A9B  0871               	movf	?___ftpack+1,w
  3213  0A9C  00F9               	movwf	?___lltoft+1
  3214  0A9D  0872               	movf	?___ftpack+2,w
  3215  0A9E  00FA               	movwf	?___lltoft+2
  3216  0A9F  0008               	return
  3217  0AA0                     __end_of___lltoft:	
  3218                           
  3219                           	psect	text11
  3220  00E5                     __ptext11:	
  3221 ;; *************** function ___fttol *****************
  3222 ;; Defined at:
  3223 ;;		line 44 in file "D:\MPLAB\sources\common\fttol.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  f1              3   23[BANK0 ] float 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  lval            4   32[BANK0 ] unsigned long 
  3228 ;;  exp1            1   36[BANK0 ] unsigned char 
  3229 ;;  sign1           1   31[BANK0 ] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  4   23[BANK0 ] long 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3239 ;;      Params:         0       4       0       0       0
  3240 ;;      Locals:         0       6       0       0       0
  3241 ;;      Temps:          0       4       0       0       0
  3242 ;;      Totals:         0      14       0       0       0
  3243 ;;Total ram usage:       14 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_ftoa
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function ___fttol
  3254  00E5                     ___fttol:	
  3255                           
  3256                           ;incstack = 0
  3257                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3258  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  3259  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  3260  00E7  0837               	movf	___fttol@f1,w
  3261  00E8  00BB               	movwf	??___fttol
  3262  00E9  0838               	movf	___fttol@f1+1,w
  3263  00EA  00BC               	movwf	??___fttol+1
  3264  00EB  0839               	movf	___fttol@f1+2,w
  3265  00EC  00BD               	movwf	??___fttol+2
  3266  00ED  1003               	clrc
  3267  00EE  0D3C               	rlf	??___fttol+1,w
  3268  00EF  0D3D               	rlf	??___fttol+2,w
  3269  00F0  00BE               	movwf	??___fttol+3
  3270  00F1  083E               	movf	??___fttol+3,w
  3271  00F2  00C4               	movwf	___fttol@exp1
  3272  00F3  0844               	movf	___fttol@exp1,w
  3273  00F4  1D03               	btfss	3,2
  3274  00F5  28FF               	goto	l2226
  3275  00F6  3000               	movlw	0
  3276  00F7  00BA               	movwf	?___fttol+3
  3277  00F8  3000               	movlw	0
  3278  00F9  00B9               	movwf	?___fttol+2
  3279  00FA  3000               	movlw	0
  3280  00FB  00B8               	movwf	?___fttol+1
  3281  00FC  3000               	movlw	0
  3282  00FD  00B7               	movwf	?___fttol
  3283  00FE  0008               	return
  3284  00FF                     l2226:	
  3285  00FF  0837               	movf	___fttol@f1,w
  3286  0100  00BB               	movwf	??___fttol
  3287  0101  0838               	movf	___fttol@f1+1,w
  3288  0102  00BC               	movwf	??___fttol+1
  3289  0103  0839               	movf	___fttol@f1+2,w
  3290  0104  00BD               	movwf	??___fttol+2
  3291  0105  3017               	movlw	23
  3292  0106                     u2945:	
  3293  0106  1003               	clrc
  3294  0107  0CBD               	rrf	??___fttol+2,f
  3295  0108  0CBC               	rrf	??___fttol+1,f
  3296  0109  0CBB               	rrf	??___fttol,f
  3297  010A  3EFF               	addlw	-1
  3298  010B  1D03               	skipz
  3299  010C  2906               	goto	u2945
  3300  010D  083B               	movf	??___fttol,w
  3301  010E  00BE               	movwf	??___fttol+3
  3302  010F  083E               	movf	??___fttol+3,w
  3303  0110  00BF               	movwf	___fttol@sign1
  3304  0111  17B8               	bsf	___fttol@f1+1,7
  3305  0112  30FF               	movlw	255
  3306  0113  05B7               	andwf	___fttol@f1,f
  3307  0114  30FF               	movlw	255
  3308  0115  05B8               	andwf	___fttol@f1+1,f
  3309  0116  3000               	movlw	0
  3310  0117  05B9               	andwf	___fttol@f1+2,f
  3311  0118  0837               	movf	___fttol@f1,w
  3312  0119  00C0               	movwf	___fttol@lval
  3313  011A  0838               	movf	___fttol@f1+1,w
  3314  011B  00C1               	movwf	___fttol@lval+1
  3315  011C  0839               	movf	___fttol@f1+2,w
  3316  011D  00C2               	movwf	___fttol@lval+2
  3317  011E  01C3               	clrf	___fttol@lval+3
  3318  011F  308E               	movlw	142
  3319  0120  02C4               	subwf	___fttol@exp1,f
  3320  0121  1FC4               	btfss	___fttol@exp1,7
  3321  0122  2941               	goto	l2246
  3322  0123  0844               	movf	___fttol@exp1,w
  3323  0124  3A80               	xorlw	128
  3324  0125  3E8F               	addlw	143
  3325  0126  1803               	skipnc
  3326  0127  2931               	goto	l2244
  3327  0128  3000               	movlw	0
  3328  0129  00BA               	movwf	?___fttol+3
  3329  012A  3000               	movlw	0
  3330  012B  00B9               	movwf	?___fttol+2
  3331  012C  3000               	movlw	0
  3332  012D  00B8               	movwf	?___fttol+1
  3333  012E  3000               	movlw	0
  3334  012F  00B7               	movwf	?___fttol
  3335  0130  0008               	return
  3336  0131                     l2244:	
  3337  0131  3001               	movlw	1
  3338  0132                     u2975:	
  3339  0132  1003               	clrc
  3340  0133  0CC3               	rrf	___fttol@lval+3,f
  3341  0134  0CC2               	rrf	___fttol@lval+2,f
  3342  0135  0CC1               	rrf	___fttol@lval+1,f
  3343  0136  0CC0               	rrf	___fttol@lval,f
  3344  0137  3EFF               	addlw	-1
  3345  0138  1D03               	skipz
  3346  0139  2932               	goto	u2975
  3347  013A  3001               	movlw	1
  3348  013B  00BB               	movwf	??___fttol
  3349  013C  083B               	movf	??___fttol,w
  3350  013D  07C4               	addwf	___fttol@exp1,f
  3351  013E  1903               	btfsc	3,2
  3352  013F  295C               	goto	l2254
  3353  0140  2931               	goto	l2244
  3354  0141                     l2246:	
  3355  0141  3018               	movlw	24
  3356  0142  0244               	subwf	___fttol@exp1,w
  3357  0143  1C03               	skipc
  3358  0144  2959               	goto	l627
  3359  0145  3000               	movlw	0
  3360  0146  00BA               	movwf	?___fttol+3
  3361  0147  3000               	movlw	0
  3362  0148  00B9               	movwf	?___fttol+2
  3363  0149  3000               	movlw	0
  3364  014A  00B8               	movwf	?___fttol+1
  3365  014B  3000               	movlw	0
  3366  014C  00B7               	movwf	?___fttol
  3367  014D  0008               	return
  3368  014E                     l2252:	
  3369  014E  3001               	movlw	1
  3370  014F  00BB               	movwf	??___fttol
  3371  0150                     u3005:	
  3372  0150  1003               	clrc
  3373  0151  0DC0               	rlf	___fttol@lval,f
  3374  0152  0DC1               	rlf	___fttol@lval+1,f
  3375  0153  0DC2               	rlf	___fttol@lval+2,f
  3376  0154  0DC3               	rlf	___fttol@lval+3,f
  3377  0155  0BBB               	decfsz	??___fttol,f
  3378  0156  2950               	goto	u3005
  3379  0157  3001               	movlw	1
  3380  0158  02C4               	subwf	___fttol@exp1,f
  3381  0159                     l627:	
  3382  0159  0844               	movf	___fttol@exp1,w
  3383  015A  1D03               	btfss	3,2
  3384  015B  294E               	goto	l2252
  3385  015C                     l2254:	
  3386  015C  083F               	movf	___fttol@sign1,w
  3387  015D  1903               	btfsc	3,2
  3388  015E  296A               	goto	l2258
  3389  015F  09C0               	comf	___fttol@lval,f
  3390  0160  09C1               	comf	___fttol@lval+1,f
  3391  0161  09C2               	comf	___fttol@lval+2,f
  3392  0162  09C3               	comf	___fttol@lval+3,f
  3393  0163  0AC0               	incf	___fttol@lval,f
  3394  0164  1903               	skipnz
  3395  0165  0AC1               	incf	___fttol@lval+1,f
  3396  0166  1903               	skipnz
  3397  0167  0AC2               	incf	___fttol@lval+2,f
  3398  0168  1903               	skipnz
  3399  0169  0AC3               	incf	___fttol@lval+3,f
  3400  016A                     l2258:	
  3401  016A  0843               	movf	___fttol@lval+3,w
  3402  016B  00BA               	movwf	?___fttol+3
  3403  016C  0842               	movf	___fttol@lval+2,w
  3404  016D  00B9               	movwf	?___fttol+2
  3405  016E  0841               	movf	___fttol@lval+1,w
  3406  016F  00B8               	movwf	?___fttol+1
  3407  0170  0840               	movf	___fttol@lval,w
  3408  0171  00B7               	movwf	?___fttol
  3409  0172  0008               	return
  3410  0173                     __end_of___fttol:	
  3411                           
  3412                           	psect	text12
  3413  09EC                     __ptext12:	
  3414 ;; *************** function ___ftsub *****************
  3415 ;; Defined at:
  3416 ;;		line 18 in file "D:\MPLAB\sources\common\ftsub.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  f2              3    7[BANK0 ] float 
  3419 ;;  f1              3   10[BANK0 ] float 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  3    7[BANK0 ] float 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, pclath, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3431 ;;      Params:         0       6       0       0       0
  3432 ;;      Locals:         0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0
  3434 ;;      Totals:         0       6       0       0       0
  3435 ;;Total ram usage:        6 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    2
  3438 ;; This function calls:
  3439 ;;		___ftadd
  3440 ;; This function is called by:
  3441 ;;		_ftoa
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function ___ftsub
  3447  09EC                     ___ftsub:	
  3448                           
  3449                           ;incstack = 0
  3450                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3451  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  3452  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  3453  09EE  0829               	movf	___ftsub@f2+2,w
  3454  09EF  0428               	iorwf	___ftsub@f2+1,w
  3455  09F0  0427               	iorwf	___ftsub@f2,w
  3456  09F1  1903               	skipnz
  3457  09F2  29F5               	goto	l2216
  3458  09F3  3080               	movlw	128
  3459  09F4  06A9               	xorwf	___ftsub@f2+2,f
  3460  09F5                     l2216:	
  3461  09F5  082A               	movf	___ftsub@f1,w
  3462  09F6  00F8               	movwf	___ftadd@f1
  3463  09F7  082B               	movf	___ftsub@f1+1,w
  3464  09F8  00F9               	movwf	___ftadd@f1+1
  3465  09F9  082C               	movf	___ftsub@f1+2,w
  3466  09FA  00FA               	movwf	___ftadd@f1+2
  3467  09FB  0827               	movf	___ftsub@f2,w
  3468  09FC  00FB               	movwf	___ftadd@f2
  3469  09FD  0828               	movf	___ftsub@f2+1,w
  3470  09FE  00FC               	movwf	___ftadd@f2+1
  3471  09FF  0829               	movf	___ftsub@f2+2,w
  3472  0A00  00FD               	movwf	___ftadd@f2+2
  3473  0A01  118A  23D2         	fcall	___ftadd
  3474  0A03  0878               	movf	?___ftadd,w
  3475  0A04  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0A05  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0A06  00A7               	movwf	?___ftsub
  3478  0A07  0879               	movf	?___ftadd+1,w
  3479  0A08  00A8               	movwf	?___ftsub+1
  3480  0A09  087A               	movf	?___ftadd+2,w
  3481  0A0A  00A9               	movwf	?___ftsub+2
  3482  0A0B  0008               	return
  3483  0A0C                     __end_of___ftsub:	
  3484                           
  3485                           	psect	text13
  3486  03D2                     __ptext13:	
  3487 ;; *************** function ___ftadd *****************
  3488 ;; Defined at:
  3489 ;;		line 86 in file "D:\MPLAB\sources\common\ftadd.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  f1              3    8[COMMON] float 
  3492 ;;  f2              3   11[COMMON] float 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  exp1            1    6[BANK0 ] unsigned char 
  3495 ;;  exp2            1    5[BANK0 ] unsigned char 
  3496 ;;  sign            1    4[BANK0 ] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  3    8[COMMON] float 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         6       0       0       0       0
  3507 ;;      Locals:         0       3       0       0       0
  3508 ;;      Temps:          0       4       0       0       0
  3509 ;;      Totals:         6       7       0       0       0
  3510 ;;Total ram usage:       13 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    1
  3513 ;; This function calls:
  3514 ;;		___ftpack
  3515 ;; This function is called by:
  3516 ;;		___ftsub
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function ___ftadd
  3522  03D2                     ___ftadd:	
  3523                           
  3524                           ;incstack = 0
  3525                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3526  03D2  0878               	movf	___ftadd@f1,w
  3527  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3528  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3529  03D5  00A0               	movwf	??___ftadd
  3530  03D6  0879               	movf	___ftadd@f1+1,w
  3531  03D7  00A1               	movwf	??___ftadd+1
  3532  03D8  087A               	movf	___ftadd@f1+2,w
  3533  03D9  00A2               	movwf	??___ftadd+2
  3534  03DA  1003               	clrc
  3535  03DB  0D21               	rlf	??___ftadd+1,w
  3536  03DC  0D22               	rlf	??___ftadd+2,w
  3537  03DD  00A3               	movwf	??___ftadd+3
  3538  03DE  0823               	movf	??___ftadd+3,w
  3539  03DF  00A6               	movwf	___ftadd@exp1
  3540  03E0  087B               	movf	___ftadd@f2,w
  3541  03E1  00A0               	movwf	??___ftadd
  3542  03E2  087C               	movf	___ftadd@f2+1,w
  3543  03E3  00A1               	movwf	??___ftadd+1
  3544  03E4  087D               	movf	___ftadd@f2+2,w
  3545  03E5  00A2               	movwf	??___ftadd+2
  3546  03E6  1003               	clrc
  3547  03E7  0D21               	rlf	??___ftadd+1,w
  3548  03E8  0D22               	rlf	??___ftadd+2,w
  3549  03E9  00A3               	movwf	??___ftadd+3
  3550  03EA  0823               	movf	??___ftadd+3,w
  3551  03EB  00A5               	movwf	___ftadd@exp2
  3552  03EC  0826               	movf	___ftadd@exp1,w
  3553  03ED  1903               	btfsc	3,2
  3554  03EE  2BFB               	goto	l1830
  3555  03EF  0825               	movf	___ftadd@exp2,w
  3556  03F0  0226               	subwf	___ftadd@exp1,w
  3557  03F1  1803               	skipnc
  3558  03F2  2C02               	goto	l1834
  3559  03F3  0326               	decf	___ftadd@exp1,w
  3560  03F4  3AFF               	xorlw	255
  3561  03F5  0725               	addwf	___ftadd@exp2,w
  3562  03F6  00A0               	movwf	??___ftadd
  3563  03F7  3019               	movlw	25
  3564  03F8  0220               	subwf	??___ftadd,w
  3565  03F9  1C03               	skipc
  3566  03FA  2C02               	goto	l1834
  3567  03FB                     l1830:	
  3568  03FB  087B               	movf	___ftadd@f2,w
  3569  03FC  00F8               	movwf	?___ftadd
  3570  03FD  087C               	movf	___ftadd@f2+1,w
  3571  03FE  00F9               	movwf	?___ftadd+1
  3572  03FF  087D               	movf	___ftadd@f2+2,w
  3573  0400  00FA               	movwf	?___ftadd+2
  3574  0401  0008               	return
  3575  0402                     l1834:	
  3576  0402  0825               	movf	___ftadd@exp2,w
  3577  0403  1903               	btfsc	3,2
  3578  0404  0008               	return
  3579  0405  0826               	movf	___ftadd@exp1,w
  3580  0406  0225               	subwf	___ftadd@exp2,w
  3581  0407  1803               	skipnc
  3582  0408  2C11               	goto	l1840
  3583  0409  0325               	decf	___ftadd@exp2,w
  3584  040A  3AFF               	xorlw	255
  3585  040B  0726               	addwf	___ftadd@exp1,w
  3586  040C  00A0               	movwf	??___ftadd
  3587  040D  3019               	movlw	25
  3588  040E  0220               	subwf	??___ftadd,w
  3589  040F  1803               	btfsc	3,0
  3590  0410  0008               	return
  3591  0411                     l1840:	
  3592  0411  3006               	movlw	6
  3593  0412  00A0               	movwf	??___ftadd
  3594  0413  0820               	movf	??___ftadd,w
  3595  0414  00A4               	movwf	___ftadd@sign
  3596  0415  1BFA               	btfsc	___ftadd@f1+2,7
  3597  0416  17A4               	bsf	___ftadd@sign,7
  3598  0417  1BFD               	btfsc	___ftadd@f2+2,7
  3599  0418  1724               	bsf	___ftadd@sign,6
  3600  0419  17F9               	bsf	___ftadd@f1+1,7
  3601  041A  30FF               	movlw	255
  3602  041B  05F8               	andwf	___ftadd@f1,f
  3603  041C  30FF               	movlw	255
  3604  041D  05F9               	andwf	___ftadd@f1+1,f
  3605  041E  3000               	movlw	0
  3606  041F  05FA               	andwf	___ftadd@f1+2,f
  3607  0420  17FC               	bsf	___ftadd@f2+1,7
  3608  0421  30FF               	movlw	255
  3609  0422  05FB               	andwf	___ftadd@f2,f
  3610  0423  30FF               	movlw	255
  3611  0424  05FC               	andwf	___ftadd@f2+1,f
  3612  0425  3000               	movlw	0
  3613  0426  05FD               	andwf	___ftadd@f2+2,f
  3614  0427  0825               	movf	___ftadd@exp2,w
  3615  0428  0226               	subwf	___ftadd@exp1,w
  3616  0429  1803               	skipnc
  3617  042A  2C51               	goto	l1862
  3618  042B                     l1852:	
  3619  042B  3001               	movlw	1
  3620  042C                     u2095:	
  3621  042C  1003               	clrc
  3622  042D  0DFB               	rlf	___ftadd@f2,f
  3623  042E  0DFC               	rlf	___ftadd@f2+1,f
  3624  042F  0DFD               	rlf	___ftadd@f2+2,f
  3625  0430  3EFF               	addlw	-1
  3626  0431  1D03               	skipz
  3627  0432  2C2C               	goto	u2095
  3628  0433  3001               	movlw	1
  3629  0434  02A5               	subwf	___ftadd@exp2,f
  3630  0435  0825               	movf	___ftadd@exp2,w
  3631  0436  0626               	xorwf	___ftadd@exp1,w
  3632  0437  1903               	skipnz
  3633  0438  2C4C               	goto	l1860
  3634  0439  3001               	movlw	1
  3635  043A  02A4               	subwf	___ftadd@sign,f
  3636  043B  0824               	movf	___ftadd@sign,w
  3637  043C  3907               	andlw	7
  3638  043D  1903               	btfsc	3,2
  3639  043E  2C4C               	goto	l1860
  3640  043F  2C2B               	goto	l1852
  3641  0440                     l1858:	
  3642  0440  3001               	movlw	1
  3643  0441                     u2125:	
  3644  0441  1003               	clrc
  3645  0442  0CFA               	rrf	___ftadd@f1+2,f
  3646  0443  0CF9               	rrf	___ftadd@f1+1,f
  3647  0444  0CF8               	rrf	___ftadd@f1,f
  3648  0445  3EFF               	addlw	-1
  3649  0446  1D03               	skipz
  3650  0447  2C41               	goto	u2125
  3651  0448  3001               	movlw	1
  3652  0449  00A0               	movwf	??___ftadd
  3653  044A  0820               	movf	??___ftadd,w
  3654  044B  07A6               	addwf	___ftadd@exp1,f
  3655  044C                     l1860:	
  3656  044C  0826               	movf	___ftadd@exp1,w
  3657  044D  0625               	xorwf	___ftadd@exp2,w
  3658  044E  1903               	btfsc	3,2
  3659  044F  2C7A               	goto	l559
  3660  0450  2C40               	goto	l1858
  3661  0451                     l1862:	
  3662  0451  0826               	movf	___ftadd@exp1,w
  3663  0452  0225               	subwf	___ftadd@exp2,w
  3664  0453  1803               	skipnc
  3665  0454  2C7A               	goto	l559
  3666  0455                     l1864:	
  3667  0455  3001               	movlw	1
  3668  0456                     u2155:	
  3669  0456  1003               	clrc
  3670  0457  0DF8               	rlf	___ftadd@f1,f
  3671  0458  0DF9               	rlf	___ftadd@f1+1,f
  3672  0459  0DFA               	rlf	___ftadd@f1+2,f
  3673  045A  3EFF               	addlw	-1
  3674  045B  1D03               	skipz
  3675  045C  2C56               	goto	u2155
  3676  045D  3001               	movlw	1
  3677  045E  02A6               	subwf	___ftadd@exp1,f
  3678  045F  0825               	movf	___ftadd@exp2,w
  3679  0460  0626               	xorwf	___ftadd@exp1,w
  3680  0461  1903               	skipnz
  3681  0462  2C76               	goto	l1872
  3682  0463  3001               	movlw	1
  3683  0464  02A4               	subwf	___ftadd@sign,f
  3684  0465  0824               	movf	___ftadd@sign,w
  3685  0466  3907               	andlw	7
  3686  0467  1903               	btfsc	3,2
  3687  0468  2C76               	goto	l1872
  3688  0469  2C55               	goto	l1864
  3689  046A                     l1870:	
  3690  046A  3001               	movlw	1
  3691  046B                     u2185:	
  3692  046B  1003               	clrc
  3693  046C  0CFD               	rrf	___ftadd@f2+2,f
  3694  046D  0CFC               	rrf	___ftadd@f2+1,f
  3695  046E  0CFB               	rrf	___ftadd@f2,f
  3696  046F  3EFF               	addlw	-1
  3697  0470  1D03               	skipz
  3698  0471  2C6B               	goto	u2185
  3699  0472  3001               	movlw	1
  3700  0473  00A0               	movwf	??___ftadd
  3701  0474  0820               	movf	??___ftadd,w
  3702  0475  07A5               	addwf	___ftadd@exp2,f
  3703  0476                     l1872:	
  3704  0476  0826               	movf	___ftadd@exp1,w
  3705  0477  0625               	xorwf	___ftadd@exp2,w
  3706  0478  1D03               	skipz
  3707  0479  2C6A               	goto	l1870
  3708  047A                     l559:	
  3709  047A  1FA4               	btfss	___ftadd@sign,7
  3710  047B  2C8C               	goto	l1876
  3711  047C  30FF               	movlw	255
  3712  047D  06F8               	xorwf	___ftadd@f1,f
  3713  047E  30FF               	movlw	255
  3714  047F  06F9               	xorwf	___ftadd@f1+1,f
  3715  0480  30FF               	movlw	255
  3716  0481  06FA               	xorwf	___ftadd@f1+2,f
  3717  0482  3001               	movlw	1
  3718  0483  07F8               	addwf	___ftadd@f1,f
  3719  0484  3000               	movlw	0
  3720  0485  1803               	skipnc
  3721  0486  3001               	movlw	1
  3722  0487  07F9               	addwf	___ftadd@f1+1,f
  3723  0488  3000               	movlw	0
  3724  0489  1803               	skipnc
  3725  048A  3001               	movlw	1
  3726  048B  07FA               	addwf	___ftadd@f1+2,f
  3727  048C                     l1876:	
  3728  048C  1F24               	btfss	___ftadd@sign,6
  3729  048D  2C9E               	goto	l1880
  3730  048E  30FF               	movlw	255
  3731  048F  06FB               	xorwf	___ftadd@f2,f
  3732  0490  30FF               	movlw	255
  3733  0491  06FC               	xorwf	___ftadd@f2+1,f
  3734  0492  30FF               	movlw	255
  3735  0493  06FD               	xorwf	___ftadd@f2+2,f
  3736  0494  3001               	movlw	1
  3737  0495  07FB               	addwf	___ftadd@f2,f
  3738  0496  3000               	movlw	0
  3739  0497  1803               	skipnc
  3740  0498  3001               	movlw	1
  3741  0499  07FC               	addwf	___ftadd@f2+1,f
  3742  049A  3000               	movlw	0
  3743  049B  1803               	skipnc
  3744  049C  3001               	movlw	1
  3745  049D  07FD               	addwf	___ftadd@f2+2,f
  3746  049E                     l1880:	
  3747  049E  01A4               	clrf	___ftadd@sign
  3748  049F  0878               	movf	___ftadd@f1,w
  3749  04A0  07FB               	addwf	___ftadd@f2,f
  3750  04A1  0879               	movf	___ftadd@f1+1,w
  3751  04A2  1103               	clrz
  3752  04A3  1803               	skipnc
  3753  04A4  0A79               	incf	___ftadd@f1+1,w
  3754  04A5  1D03               	btfss	3,2
  3755  04A6  07FC               	addwf	___ftadd@f2+1,f
  3756  04A7  087A               	movf	___ftadd@f1+2,w
  3757  04A8  1103               	clrz
  3758  04A9  1803               	skipnc
  3759  04AA  0A7A               	incf	___ftadd@f1+2,w
  3760  04AB  1D03               	btfss	3,2
  3761  04AC  07FD               	addwf	___ftadd@f2+2,f
  3762  04AD  1FFD               	btfss	___ftadd@f2+2,7
  3763  04AE  2CC1               	goto	l1890
  3764  04AF  30FF               	movlw	255
  3765  04B0  06FB               	xorwf	___ftadd@f2,f
  3766  04B1  30FF               	movlw	255
  3767  04B2  06FC               	xorwf	___ftadd@f2+1,f
  3768  04B3  30FF               	movlw	255
  3769  04B4  06FD               	xorwf	___ftadd@f2+2,f
  3770  04B5  3001               	movlw	1
  3771  04B6  07FB               	addwf	___ftadd@f2,f
  3772  04B7  3000               	movlw	0
  3773  04B8  1803               	skipnc
  3774  04B9  3001               	movlw	1
  3775  04BA  07FC               	addwf	___ftadd@f2+1,f
  3776  04BB  3000               	movlw	0
  3777  04BC  1803               	skipnc
  3778  04BD  3001               	movlw	1
  3779  04BE  07FD               	addwf	___ftadd@f2+2,f
  3780  04BF  01A4               	clrf	___ftadd@sign
  3781  04C0  0AA4               	incf	___ftadd@sign,f
  3782  04C1                     l1890:	
  3783  04C1  087B               	movf	___ftadd@f2,w
  3784  04C2  00F0               	movwf	___ftpack@arg
  3785  04C3  087C               	movf	___ftadd@f2+1,w
  3786  04C4  00F1               	movwf	___ftpack@arg+1
  3787  04C5  087D               	movf	___ftadd@f2+2,w
  3788  04C6  00F2               	movwf	___ftpack@arg+2
  3789  04C7  0826               	movf	___ftadd@exp1,w
  3790  04C8  00A0               	movwf	??___ftadd
  3791  04C9  0820               	movf	??___ftadd,w
  3792  04CA  00F3               	movwf	___ftpack@exp
  3793  04CB  0824               	movf	___ftadd@sign,w
  3794  04CC  00A1               	movwf	??___ftadd+1
  3795  04CD  0821               	movf	??___ftadd+1,w
  3796  04CE  00F4               	movwf	___ftpack@sign
  3797  04CF  158A  2794         	fcall	___ftpack
  3798  04D1  0870               	movf	?___ftpack,w
  3799  04D2  00F8               	movwf	?___ftadd
  3800  04D3  0871               	movf	?___ftpack+1,w
  3801  04D4  00F9               	movwf	?___ftadd+1
  3802  04D5  0872               	movf	?___ftpack+2,w
  3803  04D6  00FA               	movwf	?___ftadd+2
  3804  04D7  0008               	return
  3805  04D8                     __end_of___ftadd:	
  3806                           
  3807                           	psect	text14
  3808  0956                     __ptext14:	
  3809 ;; *************** function ___ftneg *****************
  3810 ;; Defined at:
  3811 ;;		line 15 in file "D:\MPLAB\sources\common\ftneg.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  f1              3    0[COMMON] float 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  3    0[COMMON] float 
  3818 ;; Registers used:
  3819 ;;		wreg
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3825 ;;      Params:         3       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0
  3828 ;;      Totals:         3       0       0       0       0
  3829 ;;Total ram usage:        3 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_ftoa
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           
  3839                           ;psect for function ___ftneg
  3840  0956                     ___ftneg:	
  3841                           
  3842                           ;incstack = 0
  3843                           ; Regs used in ___ftneg: [wreg]
  3844  0956  0872               	movf	___ftneg@f1+2,w
  3845  0957  0471               	iorwf	___ftneg@f1+1,w
  3846  0958  0470               	iorwf	___ftneg@f1,w
  3847  0959  1903               	skipnz
  3848  095A  0008               	return
  3849  095B  3080               	movlw	128
  3850  095C  06F2               	xorwf	___ftneg@f1+2,f
  3851  095D  0008               	return
  3852  095E                     __end_of___ftneg:	
  3853                           
  3854                           	psect	text15
  3855  021E                     __ptext15:	
  3856 ;; *************** function ___ftmul *****************
  3857 ;; Defined at:
  3858 ;;		line 62 in file "D:\MPLAB\sources\common\ftmul.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  f1              3    7[BANK0 ] float 
  3861 ;;  f2              3   10[BANK0 ] float 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  3864 ;;  sign            1   22[BANK0 ] unsigned char 
  3865 ;;  cntr            1   21[BANK0 ] unsigned char 
  3866 ;;  exp             1   17[BANK0 ] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  3    7[BANK0 ] float 
  3869 ;; Registers used:
  3870 ;;		wreg, status,2, status,0, pclath, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3876 ;;      Params:         0       6       0       0       0
  3877 ;;      Locals:         0       6       0       0       0
  3878 ;;      Temps:          0       4       0       0       0
  3879 ;;      Totals:         0      16       0       0       0
  3880 ;;Total ram usage:       16 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    1
  3883 ;; This function calls:
  3884 ;;		___ftpack
  3885 ;; This function is called by:
  3886 ;;		_mode_voltage_read
  3887 ;;		_ftoa
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           
  3892                           ;psect for function ___ftmul
  3893  021E                     ___ftmul:	
  3894                           
  3895                           ;incstack = 0
  3896                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3897  021E  1283               	bcf	3,5	;RP0=0, select bank0
  3898  021F  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0220  0827               	movf	___ftmul@f1,w
  3900  0221  00AD               	movwf	??___ftmul
  3901  0222  0828               	movf	___ftmul@f1+1,w
  3902  0223  00AE               	movwf	??___ftmul+1
  3903  0224  0829               	movf	___ftmul@f1+2,w
  3904  0225  00AF               	movwf	??___ftmul+2
  3905  0226  1003               	clrc
  3906  0227  0D2E               	rlf	??___ftmul+1,w
  3907  0228  0D2F               	rlf	??___ftmul+2,w
  3908  0229  00B0               	movwf	??___ftmul+3
  3909  022A  0830               	movf	??___ftmul+3,w
  3910  022B  00B1               	movwf	___ftmul@exp
  3911  022C  0831               	movf	___ftmul@exp,w
  3912  022D  1D03               	btfss	3,2
  3913  022E  2A36               	goto	l2160
  3914  022F  3000               	movlw	0
  3915  0230  00A7               	movwf	?___ftmul
  3916  0231  3000               	movlw	0
  3917  0232  00A8               	movwf	?___ftmul+1
  3918  0233  3000               	movlw	0
  3919  0234  00A9               	movwf	?___ftmul+2
  3920  0235  0008               	return
  3921  0236                     l2160:	
  3922  0236  082A               	movf	___ftmul@f2,w
  3923  0237  00AD               	movwf	??___ftmul
  3924  0238  082B               	movf	___ftmul@f2+1,w
  3925  0239  00AE               	movwf	??___ftmul+1
  3926  023A  082C               	movf	___ftmul@f2+2,w
  3927  023B  00AF               	movwf	??___ftmul+2
  3928  023C  1003               	clrc
  3929  023D  0D2E               	rlf	??___ftmul+1,w
  3930  023E  0D2F               	rlf	??___ftmul+2,w
  3931  023F  00B0               	movwf	??___ftmul+3
  3932  0240  0830               	movf	??___ftmul+3,w
  3933  0241  00B6               	movwf	___ftmul@sign
  3934  0242  0836               	movf	___ftmul@sign,w
  3935  0243  1D03               	btfss	3,2
  3936  0244  2A4C               	goto	l2166
  3937  0245  3000               	movlw	0
  3938  0246  00A7               	movwf	?___ftmul
  3939  0247  3000               	movlw	0
  3940  0248  00A8               	movwf	?___ftmul+1
  3941  0249  3000               	movlw	0
  3942  024A  00A9               	movwf	?___ftmul+2
  3943  024B  0008               	return
  3944  024C                     l2166:	
  3945  024C  0836               	movf	___ftmul@sign,w
  3946  024D  3E7B               	addlw	123
  3947  024E  00AD               	movwf	??___ftmul
  3948  024F  082D               	movf	??___ftmul,w
  3949  0250  07B1               	addwf	___ftmul@exp,f
  3950  0251  0827               	movf	___ftmul@f1,w
  3951  0252  00AD               	movwf	??___ftmul
  3952  0253  0828               	movf	___ftmul@f1+1,w
  3953  0254  00AE               	movwf	??___ftmul+1
  3954  0255  0829               	movf	___ftmul@f1+2,w
  3955  0256  00AF               	movwf	??___ftmul+2
  3956  0257  3010               	movlw	16
  3957  0258                     u2795:	
  3958  0258  1003               	clrc
  3959  0259  0CAF               	rrf	??___ftmul+2,f
  3960  025A  0CAE               	rrf	??___ftmul+1,f
  3961  025B  0CAD               	rrf	??___ftmul,f
  3962  025C  3EFF               	addlw	-1
  3963  025D  1D03               	skipz
  3964  025E  2A58               	goto	u2795
  3965  025F  082D               	movf	??___ftmul,w
  3966  0260  00B0               	movwf	??___ftmul+3
  3967  0261  0830               	movf	??___ftmul+3,w
  3968  0262  00B6               	movwf	___ftmul@sign
  3969  0263  082A               	movf	___ftmul@f2,w
  3970  0264  00AD               	movwf	??___ftmul
  3971  0265  082B               	movf	___ftmul@f2+1,w
  3972  0266  00AE               	movwf	??___ftmul+1
  3973  0267  082C               	movf	___ftmul@f2+2,w
  3974  0268  00AF               	movwf	??___ftmul+2
  3975  0269  3010               	movlw	16
  3976  026A                     u2805:	
  3977  026A  1003               	clrc
  3978  026B  0CAF               	rrf	??___ftmul+2,f
  3979  026C  0CAE               	rrf	??___ftmul+1,f
  3980  026D  0CAD               	rrf	??___ftmul,f
  3981  026E  3EFF               	addlw	-1
  3982  026F  1D03               	skipz
  3983  0270  2A6A               	goto	u2805
  3984  0271  082D               	movf	??___ftmul,w
  3985  0272  00B0               	movwf	??___ftmul+3
  3986  0273  0830               	movf	??___ftmul+3,w
  3987  0274  06B6               	xorwf	___ftmul@sign,f
  3988  0275  3080               	movlw	128
  3989  0276  00AD               	movwf	??___ftmul
  3990  0277  082D               	movf	??___ftmul,w
  3991  0278  05B6               	andwf	___ftmul@sign,f
  3992  0279  17A8               	bsf	___ftmul@f1+1,7
  3993  027A  17AB               	bsf	___ftmul@f2+1,7
  3994  027B  30FF               	movlw	255
  3995  027C  05AA               	andwf	___ftmul@f2,f
  3996  027D  30FF               	movlw	255
  3997  027E  05AB               	andwf	___ftmul@f2+1,f
  3998  027F  3000               	movlw	0
  3999  0280  05AC               	andwf	___ftmul@f2+2,f
  4000  0281  3000               	movlw	0
  4001  0282  00B2               	movwf	___ftmul@f3_as_product
  4002  0283  3000               	movlw	0
  4003  0284  00B3               	movwf	___ftmul@f3_as_product+1
  4004  0285  3000               	movlw	0
  4005  0286  00B4               	movwf	___ftmul@f3_as_product+2
  4006  0287  3007               	movlw	7
  4007  0288  00AD               	movwf	??___ftmul
  4008  0289  082D               	movf	??___ftmul,w
  4009  028A  00B5               	movwf	___ftmul@cntr
  4010  028B                     l2178:	
  4011  028B  1C27               	btfss	___ftmul@f1,0
  4012  028C  2A9B               	goto	l2182
  4013  028D  082A               	movf	___ftmul@f2,w
  4014  028E  07B2               	addwf	___ftmul@f3_as_product,f
  4015  028F  082B               	movf	___ftmul@f2+1,w
  4016  0290  1103               	clrz
  4017  0291  1803               	skipnc
  4018  0292  0A2B               	incf	___ftmul@f2+1,w
  4019  0293  1D03               	btfss	3,2
  4020  0294  07B3               	addwf	___ftmul@f3_as_product+1,f
  4021  0295  082C               	movf	___ftmul@f2+2,w
  4022  0296  1103               	clrz
  4023  0297  1803               	skipnc
  4024  0298  0A2C               	incf	___ftmul@f2+2,w
  4025  0299  1D03               	btfss	3,2
  4026  029A  07B4               	addwf	___ftmul@f3_as_product+2,f
  4027  029B                     l2182:	
  4028  029B  3001               	movlw	1
  4029  029C                     u2835:	
  4030  029C  1003               	clrc
  4031  029D  0CA9               	rrf	___ftmul@f1+2,f
  4032  029E  0CA8               	rrf	___ftmul@f1+1,f
  4033  029F  0CA7               	rrf	___ftmul@f1,f
  4034  02A0  3EFF               	addlw	-1
  4035  02A1  1D03               	skipz
  4036  02A2  2A9C               	goto	u2835
  4037  02A3  3001               	movlw	1
  4038  02A4                     u2845:	
  4039  02A4  1003               	clrc
  4040  02A5  0DAA               	rlf	___ftmul@f2,f
  4041  02A6  0DAB               	rlf	___ftmul@f2+1,f
  4042  02A7  0DAC               	rlf	___ftmul@f2+2,f
  4043  02A8  3EFF               	addlw	-1
  4044  02A9  1D03               	skipz
  4045  02AA  2AA4               	goto	u2845
  4046  02AB  3001               	movlw	1
  4047  02AC  02B5               	subwf	___ftmul@cntr,f
  4048  02AD  1D03               	btfss	3,2
  4049  02AE  2A8B               	goto	l2178
  4050  02AF  3009               	movlw	9
  4051  02B0  00AD               	movwf	??___ftmul
  4052  02B1  082D               	movf	??___ftmul,w
  4053  02B2  00B5               	movwf	___ftmul@cntr
  4054  02B3                     l2190:	
  4055  02B3  1C27               	btfss	___ftmul@f1,0
  4056  02B4  2AC3               	goto	l2194
  4057  02B5  082A               	movf	___ftmul@f2,w
  4058  02B6  07B2               	addwf	___ftmul@f3_as_product,f
  4059  02B7  082B               	movf	___ftmul@f2+1,w
  4060  02B8  1103               	clrz
  4061  02B9  1803               	skipnc
  4062  02BA  0A2B               	incf	___ftmul@f2+1,w
  4063  02BB  1D03               	btfss	3,2
  4064  02BC  07B3               	addwf	___ftmul@f3_as_product+1,f
  4065  02BD  082C               	movf	___ftmul@f2+2,w
  4066  02BE  1103               	clrz
  4067  02BF  1803               	skipnc
  4068  02C0  0A2C               	incf	___ftmul@f2+2,w
  4069  02C1  1D03               	btfss	3,2
  4070  02C2  07B4               	addwf	___ftmul@f3_as_product+2,f
  4071  02C3                     l2194:	
  4072  02C3  3001               	movlw	1
  4073  02C4                     u2885:	
  4074  02C4  1003               	clrc
  4075  02C5  0CA9               	rrf	___ftmul@f1+2,f
  4076  02C6  0CA8               	rrf	___ftmul@f1+1,f
  4077  02C7  0CA7               	rrf	___ftmul@f1,f
  4078  02C8  3EFF               	addlw	-1
  4079  02C9  1D03               	skipz
  4080  02CA  2AC4               	goto	u2885
  4081  02CB  3001               	movlw	1
  4082  02CC                     u2895:	
  4083  02CC  1003               	clrc
  4084  02CD  0CB4               	rrf	___ftmul@f3_as_product+2,f
  4085  02CE  0CB3               	rrf	___ftmul@f3_as_product+1,f
  4086  02CF  0CB2               	rrf	___ftmul@f3_as_product,f
  4087  02D0  3EFF               	addlw	-1
  4088  02D1  1D03               	skipz
  4089  02D2  2ACC               	goto	u2895
  4090  02D3  3001               	movlw	1
  4091  02D4  02B5               	subwf	___ftmul@cntr,f
  4092  02D5  1D03               	btfss	3,2
  4093  02D6  2AB3               	goto	l2190
  4094  02D7  0832               	movf	___ftmul@f3_as_product,w
  4095  02D8  00F0               	movwf	___ftpack@arg
  4096  02D9  0833               	movf	___ftmul@f3_as_product+1,w
  4097  02DA  00F1               	movwf	___ftpack@arg+1
  4098  02DB  0834               	movf	___ftmul@f3_as_product+2,w
  4099  02DC  00F2               	movwf	___ftpack@arg+2
  4100  02DD  0831               	movf	___ftmul@exp,w
  4101  02DE  00AD               	movwf	??___ftmul
  4102  02DF  082D               	movf	??___ftmul,w
  4103  02E0  00F3               	movwf	___ftpack@exp
  4104  02E1  0836               	movf	___ftmul@sign,w
  4105  02E2  00AE               	movwf	??___ftmul+1
  4106  02E3  082E               	movf	??___ftmul+1,w
  4107  02E4  00F4               	movwf	___ftpack@sign
  4108  02E5  158A  2794         	fcall	___ftpack
  4109  02E7  0870               	movf	?___ftpack,w
  4110  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  4111  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  4112  02EA  00A7               	movwf	?___ftmul
  4113  02EB  0871               	movf	?___ftpack+1,w
  4114  02EC  00A8               	movwf	?___ftmul+1
  4115  02ED  0872               	movf	?___ftpack+2,w
  4116  02EE  00A9               	movwf	?___ftmul+2
  4117  02EF  0008               	return
  4118  02F0                     __end_of___ftmul:	
  4119                           
  4120                           	psect	text16
  4121  0E08                     __ptext16:	
  4122 ;; *************** function ___ftge *****************
  4123 ;; Defined at:
  4124 ;;		line 4 in file "D:\MPLAB\sources\common\ftge.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  ff1             3    0[COMMON] float 
  4127 ;;  ff2             3    3[COMMON] float 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;		None               void
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4139 ;;      Params:         6       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0
  4141 ;;      Temps:          6       0       0       0       0
  4142 ;;      Totals:        12       0       0       0       0
  4143 ;;Total ram usage:       12 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_ftoa
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function ___ftge
  4154  0E08                     ___ftge:	
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4158  0E08  1FF2               	btfss	___ftge@ff1+2,7
  4159  0E09  2E2F               	goto	l2138
  4160  0E0A  3000               	movlw	0
  4161  0E0B  00F6               	movwf	??___ftge
  4162  0E0C  3000               	movlw	0
  4163  0E0D  00F7               	movwf	??___ftge+1
  4164  0E0E  3080               	movlw	128
  4165  0E0F  00F8               	movwf	??___ftge+2
  4166  0E10  0970               	comf	___ftge@ff1,w
  4167  0E11  00F9               	movwf	??___ftge+3
  4168  0E12  0971               	comf	___ftge@ff1+1,w
  4169  0E13  00FA               	movwf	??___ftge+4
  4170  0E14  0972               	comf	___ftge@ff1+2,w
  4171  0E15  00FB               	movwf	??___ftge+5
  4172  0E16  0AF9               	incf	??___ftge+3,f
  4173  0E17  1903               	skipnz
  4174  0E18  0AFA               	incf	??___ftge+4,f
  4175  0E19  1903               	skipnz
  4176  0E1A  0AFB               	incf	??___ftge+5,f
  4177  0E1B  0879               	movf	??___ftge+3,w
  4178  0E1C  07F6               	addwf	??___ftge,f
  4179  0E1D  087A               	movf	??___ftge+4,w
  4180  0E1E  1803               	skipnc
  4181  0E1F  0F7A               	incfsz	??___ftge+4,w
  4182  0E20  2E22               	goto	u2731
  4183  0E21  2E23               	goto	u2732
  4184  0E22                     u2731:	
  4185  0E22  07F7               	addwf	??___ftge+1,f
  4186  0E23                     u2732:	
  4187  0E23  087B               	movf	??___ftge+5,w
  4188  0E24  1803               	skipnc
  4189  0E25  0F7B               	incfsz	??___ftge+5,w
  4190  0E26  2E28               	goto	u2733
  4191  0E27  2E29               	goto	u2734
  4192  0E28                     u2733:	
  4193  0E28  07F8               	addwf	??___ftge+2,f
  4194  0E29                     u2734:	
  4195  0E29  0876               	movf	??___ftge,w
  4196  0E2A  00F0               	movwf	___ftge@ff1
  4197  0E2B  0877               	movf	??___ftge+1,w
  4198  0E2C  00F1               	movwf	___ftge@ff1+1
  4199  0E2D  0878               	movf	??___ftge+2,w
  4200  0E2E  00F2               	movwf	___ftge@ff1+2
  4201  0E2F                     l2138:	
  4202  0E2F  1FF5               	btfss	___ftge@ff2+2,7
  4203  0E30  2E56               	goto	l2142
  4204  0E31  3000               	movlw	0
  4205  0E32  00F6               	movwf	??___ftge
  4206  0E33  3000               	movlw	0
  4207  0E34  00F7               	movwf	??___ftge+1
  4208  0E35  3080               	movlw	128
  4209  0E36  00F8               	movwf	??___ftge+2
  4210  0E37  0973               	comf	___ftge@ff2,w
  4211  0E38  00F9               	movwf	??___ftge+3
  4212  0E39  0974               	comf	___ftge@ff2+1,w
  4213  0E3A  00FA               	movwf	??___ftge+4
  4214  0E3B  0975               	comf	___ftge@ff2+2,w
  4215  0E3C  00FB               	movwf	??___ftge+5
  4216  0E3D  0AF9               	incf	??___ftge+3,f
  4217  0E3E  1903               	skipnz
  4218  0E3F  0AFA               	incf	??___ftge+4,f
  4219  0E40  1903               	skipnz
  4220  0E41  0AFB               	incf	??___ftge+5,f
  4221  0E42  0879               	movf	??___ftge+3,w
  4222  0E43  07F6               	addwf	??___ftge,f
  4223  0E44  087A               	movf	??___ftge+4,w
  4224  0E45  1803               	skipnc
  4225  0E46  0F7A               	incfsz	??___ftge+4,w
  4226  0E47  2E49               	goto	u2751
  4227  0E48  2E4A               	goto	u2752
  4228  0E49                     u2751:	
  4229  0E49  07F7               	addwf	??___ftge+1,f
  4230  0E4A                     u2752:	
  4231  0E4A  087B               	movf	??___ftge+5,w
  4232  0E4B  1803               	skipnc
  4233  0E4C  0F7B               	incfsz	??___ftge+5,w
  4234  0E4D  2E4F               	goto	u2753
  4235  0E4E  2E50               	goto	u2754
  4236  0E4F                     u2753:	
  4237  0E4F  07F8               	addwf	??___ftge+2,f
  4238  0E50                     u2754:	
  4239  0E50  0876               	movf	??___ftge,w
  4240  0E51  00F3               	movwf	___ftge@ff2
  4241  0E52  0877               	movf	??___ftge+1,w
  4242  0E53  00F4               	movwf	___ftge@ff2+1
  4243  0E54  0878               	movf	??___ftge+2,w
  4244  0E55  00F5               	movwf	___ftge@ff2+2
  4245  0E56                     l2142:	
  4246  0E56  3080               	movlw	128
  4247  0E57  06F2               	xorwf	___ftge@ff1+2,f
  4248  0E58  3080               	movlw	128
  4249  0E59  06F5               	xorwf	___ftge@ff2+2,f
  4250  0E5A  0875               	movf	___ftge@ff2+2,w
  4251  0E5B  0272               	subwf	___ftge@ff1+2,w
  4252  0E5C  1D03               	skipz
  4253  0E5D  0008               	return
  4254  0E5E  0874               	movf	___ftge@ff2+1,w
  4255  0E5F  0271               	subwf	___ftge@ff1+1,w
  4256  0E60  1D03               	skipz
  4257  0E61  0008               	return
  4258  0E62  0873               	movf	___ftge@ff2,w
  4259  0E63  0270               	subwf	___ftge@ff1,w
  4260  0E64  0008               	return
  4261  0E65                     __end_of___ftge:	
  4262                           
  4263                           	psect	text17
  4264  0971                     __ptext17:	
  4265 ;; *************** function ___lwtoft *****************
  4266 ;; Defined at:
  4267 ;;		line 28 in file "D:\MPLAB\sources\common\lwtoft.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  c               2   11[COMMON] unsigned int 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  3   11[COMMON] float 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, pclath, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4281 ;;      Params:         3       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0
  4283 ;;      Temps:          0       1       0       0       0
  4284 ;;      Totals:         3       1       0       0       0
  4285 ;;Total ram usage:        4 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    1
  4288 ;; This function calls:
  4289 ;;		___ftpack
  4290 ;; This function is called by:
  4291 ;;		_mode_voltage_read
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function ___lwtoft
  4297  0971                     ___lwtoft:	
  4298                           
  4299                           ;incstack = 0
  4300                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4301  0971  087B               	movf	___lwtoft@c,w
  4302  0972  00F0               	movwf	___ftpack@arg
  4303  0973  087C               	movf	___lwtoft@c+1,w
  4304  0974  00F1               	movwf	___ftpack@arg+1
  4305  0975  01F2               	clrf	___ftpack@arg+2
  4306  0976  308E               	movlw	142
  4307  0977  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0978  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0979  00A6               	movwf	??___lwtoft
  4310  097A  0826               	movf	??___lwtoft,w
  4311  097B  00F3               	movwf	___ftpack@exp
  4312  097C  01F4               	clrf	___ftpack@sign
  4313  097D  158A  2794         	fcall	___ftpack
  4314  097F  0870               	movf	?___ftpack,w
  4315  0980  00FB               	movwf	?___lwtoft
  4316  0981  0871               	movf	?___ftpack+1,w
  4317  0982  00FC               	movwf	?___lwtoft+1
  4318  0983  0872               	movf	?___ftpack+2,w
  4319  0984  00FD               	movwf	?___lwtoft+2
  4320  0985  0008               	return
  4321  0986                     __end_of___lwtoft:	
  4322                           
  4323                           	psect	text18
  4324  0F94                     __ptext18:	
  4325 ;; *************** function ___ftpack *****************
  4326 ;; Defined at:
  4327 ;;		line 62 in file "D:\MPLAB\sources\common\float.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  arg             3    0[COMMON] unsigned um
  4330 ;;  exp             1    3[COMMON] unsigned char 
  4331 ;;  sign            1    4[COMMON] unsigned char 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  3    0[COMMON] float 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4343 ;;      Params:         5       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0
  4345 ;;      Temps:          3       0       0       0       0
  4346 ;;      Totals:         8       0       0       0       0
  4347 ;;Total ram usage:        8 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		___ftadd
  4353 ;;		___ftmul
  4354 ;;		___lltoft
  4355 ;;		___lwtoft
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function ___ftpack
  4361  0F94                     ___ftpack:	
  4362                           
  4363                           ;incstack = 0
  4364                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4365  0F94  0873               	movf	___ftpack@exp,w
  4366  0F95  1903               	btfsc	3,2
  4367  0F96  2F9C               	goto	l1760
  4368  0F97  0872               	movf	___ftpack@arg+2,w
  4369  0F98  0471               	iorwf	___ftpack@arg+1,w
  4370  0F99  0470               	iorwf	___ftpack@arg,w
  4371  0F9A  1D03               	skipz
  4372  0F9B  2FAF               	goto	l1766
  4373  0F9C                     l1760:	
  4374  0F9C  3000               	movlw	0
  4375  0F9D  00F0               	movwf	?___ftpack
  4376  0F9E  3000               	movlw	0
  4377  0F9F  00F1               	movwf	?___ftpack+1
  4378  0FA0  3000               	movlw	0
  4379  0FA1  00F2               	movwf	?___ftpack+2
  4380  0FA2  0008               	return
  4381  0FA3                     l1764:	
  4382  0FA3  3001               	movlw	1
  4383  0FA4  00F5               	movwf	??___ftpack
  4384  0FA5  0875               	movf	??___ftpack,w
  4385  0FA6  07F3               	addwf	___ftpack@exp,f
  4386  0FA7  3001               	movlw	1
  4387  0FA8                     u1805:	
  4388  0FA8  1003               	clrc
  4389  0FA9  0CF2               	rrf	___ftpack@arg+2,f
  4390  0FAA  0CF1               	rrf	___ftpack@arg+1,f
  4391  0FAB  0CF0               	rrf	___ftpack@arg,f
  4392  0FAC  3EFF               	addlw	-1
  4393  0FAD  1D03               	skipz
  4394  0FAE  2FA8               	goto	u1805
  4395  0FAF                     l1766:	
  4396  0FAF  30FE               	movlw	254
  4397  0FB0  0572               	andwf	___ftpack@arg+2,w
  4398  0FB1  1903               	btfsc	3,2
  4399  0FB2  2FCA               	goto	l528
  4400  0FB3  2FA3               	goto	l1764
  4401  0FB4                     l1768:	
  4402  0FB4  3001               	movlw	1
  4403  0FB5  00F5               	movwf	??___ftpack
  4404  0FB6  0875               	movf	??___ftpack,w
  4405  0FB7  07F3               	addwf	___ftpack@exp,f
  4406  0FB8  3001               	movlw	1
  4407  0FB9  07F0               	addwf	___ftpack@arg,f
  4408  0FBA  3000               	movlw	0
  4409  0FBB  1803               	skipnc
  4410  0FBC  3001               	movlw	1
  4411  0FBD  07F1               	addwf	___ftpack@arg+1,f
  4412  0FBE  3000               	movlw	0
  4413  0FBF  1803               	skipnc
  4414  0FC0  3001               	movlw	1
  4415  0FC1  07F2               	addwf	___ftpack@arg+2,f
  4416  0FC2  3001               	movlw	1
  4417  0FC3                     u1825:	
  4418  0FC3  1003               	clrc
  4419  0FC4  0CF2               	rrf	___ftpack@arg+2,f
  4420  0FC5  0CF1               	rrf	___ftpack@arg+1,f
  4421  0FC6  0CF0               	rrf	___ftpack@arg,f
  4422  0FC7  3EFF               	addlw	-1
  4423  0FC8  1D03               	skipz
  4424  0FC9  2FC3               	goto	u1825
  4425  0FCA                     l528:	
  4426  0FCA  30FF               	movlw	255
  4427  0FCB  0572               	andwf	___ftpack@arg+2,w
  4428  0FCC  1903               	btfsc	3,2
  4429  0FCD  2FD9               	goto	l1776
  4430  0FCE  2FB4               	goto	l1768
  4431  0FCF                     l1774:	
  4432  0FCF  3001               	movlw	1
  4433  0FD0  02F3               	subwf	___ftpack@exp,f
  4434  0FD1  3001               	movlw	1
  4435  0FD2                     u1845:	
  4436  0FD2  1003               	clrc
  4437  0FD3  0DF0               	rlf	___ftpack@arg,f
  4438  0FD4  0DF1               	rlf	___ftpack@arg+1,f
  4439  0FD5  0DF2               	rlf	___ftpack@arg+2,f
  4440  0FD6  3EFF               	addlw	-1
  4441  0FD7  1D03               	skipz
  4442  0FD8  2FD2               	goto	u1845
  4443  0FD9                     l1776:	
  4444  0FD9  1BF1               	btfsc	___ftpack@arg+1,7
  4445  0FDA  2FDF               	goto	l535
  4446  0FDB  3002               	movlw	2
  4447  0FDC  0273               	subwf	___ftpack@exp,w
  4448  0FDD  1803               	skipnc
  4449  0FDE  2FCF               	goto	l1774
  4450  0FDF                     l535:	
  4451  0FDF  1873               	btfsc	___ftpack@exp,0
  4452  0FE0  2FE7               	goto	l536
  4453  0FE1  30FF               	movlw	255
  4454  0FE2  05F0               	andwf	___ftpack@arg,f
  4455  0FE3  307F               	movlw	127
  4456  0FE4  05F1               	andwf	___ftpack@arg+1,f
  4457  0FE5  30FF               	movlw	255
  4458  0FE6  05F2               	andwf	___ftpack@arg+2,f
  4459  0FE7                     l536:	
  4460  0FE7  1003               	clrc
  4461  0FE8  0CF3               	rrf	___ftpack@exp,f
  4462  0FE9  0873               	movf	___ftpack@exp,w
  4463  0FEA  00F5               	movwf	??___ftpack
  4464  0FEB  01F6               	clrf	??___ftpack+1
  4465  0FEC  01F7               	clrf	??___ftpack+2
  4466  0FED  3010               	movlw	16
  4467  0FEE                     u1885:	
  4468  0FEE  1003               	clrc
  4469  0FEF  0DF5               	rlf	??___ftpack,f
  4470  0FF0  0DF6               	rlf	??___ftpack+1,f
  4471  0FF1  0DF7               	rlf	??___ftpack+2,f
  4472  0FF2  3EFF               	addlw	-1
  4473  0FF3  1D03               	skipz
  4474  0FF4  2FEE               	goto	u1885
  4475  0FF5  0875               	movf	??___ftpack,w
  4476  0FF6  04F0               	iorwf	___ftpack@arg,f
  4477  0FF7  0876               	movf	??___ftpack+1,w
  4478  0FF8  04F1               	iorwf	___ftpack@arg+1,f
  4479  0FF9  0877               	movf	??___ftpack+2,w
  4480  0FFA  04F2               	iorwf	___ftpack@arg+2,f
  4481  0FFB  0874               	movf	___ftpack@sign,w
  4482  0FFC  1903               	btfsc	3,2
  4483  0FFD  0008               	return
  4484  0FFE  17F2               	bsf	___ftpack@arg+2,7
  4485  0FFF  0008               	return
  4486  1000                     __end_of___ftpack:	
  4487                           
  4488                           	psect	text19
  4489  0C71                     __ptext19:	
  4490 ;; *************** function _mode_light_level_check *****************
  4491 ;; Defined at:
  4492 ;;		line 145 in file "main.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  t1              2   12[COMMON] unsigned int 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4506 ;;      Params:         0       0       0       0       0
  4507 ;;      Locals:         2       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0
  4509 ;;      Totals:         2       0       0       0       0
  4510 ;;Total ram usage:        2 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    3
  4513 ;; This function calls:
  4514 ;;		_Lcd_Clear
  4515 ;;		_Lcd_Set_Cursor
  4516 ;;		_Lcd_Write_String
  4517 ;;		_light_level_check
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _mode_light_level_check
  4525  0C71                     _mode_light_level_check:	
  4526                           
  4527                           ;main.c: 146: unsigned int t1 = light_level_check();
  4528                           
  4529                           ;incstack = 0
  4530                           ; Regs used in _mode_light_level_check: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4531  0C71  158A  255D  158A   	fcall	_light_level_check
  4532  0C74  0879               	movf	?_light_level_check+1,w
  4533  0C75  00FD               	movwf	mode_light_level_check@t1+1
  4534  0C76  0878               	movf	?_light_level_check,w
  4535  0C77  00FC               	movwf	mode_light_level_check@t1
  4536                           
  4537                           ;main.c: 147: Lcd_Clear();
  4538  0C78  158A  214E  158A   	fcall	_Lcd_Clear
  4539                           
  4540                           ;main.c: 148: Lcd_Set_Cursor(1,1);
  4541  0C7B  01F4               	clrf	Lcd_Set_Cursor@b
  4542  0C7C  0AF4               	incf	Lcd_Set_Cursor@b,f
  4543  0C7D  3001               	movlw	1
  4544  0C7E  158A  23E7  158A   	fcall	_Lcd_Set_Cursor
  4545                           
  4546                           ;main.c: 149: Lcd_Write_String("Light_LEVEL is:");
  4547  0C81  303A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4548  0C82  00F5               	movwf	Lcd_Write_String@a
  4549  0C83  3080               	movlw	128
  4550  0C84  00F6               	movwf	Lcd_Write_String@a+1
  4551  0C85  158A  2331  158A   	fcall	_Lcd_Write_String
  4552                           
  4553                           ;main.c: 150: Lcd_Set_Cursor(2,1);
  4554  0C88  01F4               	clrf	Lcd_Set_Cursor@b
  4555  0C89  0AF4               	incf	Lcd_Set_Cursor@b,f
  4556  0C8A  3002               	movlw	2
  4557  0C8B  158A  23E7  158A   	fcall	_Lcd_Set_Cursor
  4558                           
  4559                           ;main.c: 151: if(t1>816) Lcd_Write_String("DRAK");
  4560  0C8E  3003               	movlw	3
  4561  0C8F  027D               	subwf	mode_light_level_check@t1+1,w
  4562  0C90  3031               	movlw	49
  4563  0C91  1903               	skipnz
  4564  0C92  027C               	subwf	mode_light_level_check@t1,w
  4565  0C93  1C03               	skipc
  4566  0C94  2C9C               	goto	l2594
  4567  0C95  30C1               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4568  0C96  00F5               	movwf	Lcd_Write_String@a
  4569  0C97  3080               	movlw	128
  4570  0C98  00F6               	movwf	Lcd_Write_String@a+1
  4571  0C99  158A  2331         	fcall	_Lcd_Write_String
  4572  0C9B  0008               	return
  4573  0C9C                     l2594:	
  4574                           
  4575                           ;main.c: 152: else if((t1<=816)&&(t1>204))Lcd_Write_String("Bright");
  4576  0C9C  3003               	movlw	3
  4577  0C9D  027D               	subwf	mode_light_level_check@t1+1,w
  4578  0C9E  3031               	movlw	49
  4579  0C9F  1903               	skipnz
  4580  0CA0  027C               	subwf	mode_light_level_check@t1,w
  4581  0CA1  1803               	skipnc
  4582  0CA2  2CB1               	goto	l2600
  4583  0CA3  3000               	movlw	0
  4584  0CA4  027D               	subwf	mode_light_level_check@t1+1,w
  4585  0CA5  30CD               	movlw	205
  4586  0CA6  1903               	skipnz
  4587  0CA7  027C               	subwf	mode_light_level_check@t1,w
  4588  0CA8  1C03               	skipc
  4589  0CA9  2CB1               	goto	l2600
  4590  0CAA  30AE               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4591  0CAB  00F5               	movwf	Lcd_Write_String@a
  4592  0CAC  3080               	movlw	128
  4593  0CAD  00F6               	movwf	Lcd_Write_String@a+1
  4594  0CAE  158A  2331         	fcall	_Lcd_Write_String
  4595  0CB0  0008               	return
  4596  0CB1                     l2600:	
  4597                           
  4598                           ;main.c: 153: else if(t1<=204)Lcd_Write_String("Dazzling");
  4599  0CB1  3000               	movlw	0
  4600  0CB2  027D               	subwf	mode_light_level_check@t1+1,w
  4601  0CB3  30CD               	movlw	205
  4602  0CB4  1903               	skipnz
  4603  0CB5  027C               	subwf	mode_light_level_check@t1,w
  4604  0CB6  1803               	skipnc
  4605  0CB7  0008               	return
  4606  0CB8  309D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4607  0CB9  00F5               	movwf	Lcd_Write_String@a
  4608  0CBA  3080               	movlw	128
  4609  0CBB  00F6               	movwf	Lcd_Write_String@a+1
  4610  0CBC  158A  2331         	fcall	_Lcd_Write_String
  4611  0CBE  0008               	return
  4612  0CBF                     __end_of_mode_light_level_check:	
  4613                           
  4614                           	psect	text20
  4615  0D5D                     __ptext20:	
  4616 ;; *************** function _light_level_check *****************
  4617 ;; Defined at:
  4618 ;;		line 118 in file "main.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  ldr_value       2    2[BANK0 ] unsigned int 
  4623 ;;  i               2    6[BANK0 ] int 
  4624 ;;  sum_light_le    2    4[BANK0 ] unsigned int 
  4625 ;;  ldr_value       2    0[BANK0 ] unsigned int 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  2    8[COMMON] unsigned int 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4635 ;;      Params:         2       0       0       0       0
  4636 ;;      Locals:         0       8       0       0       0
  4637 ;;      Temps:          0       0       0       0       0
  4638 ;;      Totals:         2       8       0       0       0
  4639 ;;Total ram usage:       10 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    1
  4642 ;; This function calls:
  4643 ;;		___lwdiv
  4644 ;;		_analog_read
  4645 ;; This function is called by:
  4646 ;;		_mode_light_level_check
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           
  4651                           ;psect for function _light_level_check
  4652  0D5D                     _light_level_check:	
  4653                           
  4654                           ;main.c: 119: unsigned int sum_light_level_value =0;
  4655                           
  4656                           ;incstack = 0
  4657                           ; Regs used in _light_level_check: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4658  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  4659  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  4660  0D5F  01A4               	clrf	light_level_check@sum_light_level_value
  4661  0D60  01A5               	clrf	light_level_check@sum_light_level_value+1
  4662                           
  4663                           ;main.c: 120: unsigned int ldr_value = analog_read(1);
  4664  0D61  3001               	movlw	1
  4665  0D62  00F0               	movwf	analog_read@channel
  4666  0D63  3000               	movlw	0
  4667  0D64  00F1               	movwf	analog_read@channel+1
  4668  0D65  158A  22A0  158A   	fcall	_analog_read
  4669  0D68  0871               	movf	?_analog_read+1,w
  4670  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0D6B  00A1               	movwf	light_level_check@ldr_value+1
  4673  0D6C  0870               	movf	?_analog_read,w
  4674  0D6D  00A0               	movwf	light_level_check@ldr_value
  4675                           
  4676                           ;main.c: 121: for(int i=0;i<5;i++){
  4677  0D6E  01A6               	clrf	light_level_check@i
  4678  0D6F  01A7               	clrf	light_level_check@i+1
  4679  0D70  0827               	movf	light_level_check@i+1,w
  4680  0D71  3A80               	xorlw	128
  4681  0D72  00FF               	movwf	127
  4682  0D73  3080               	movlw	128
  4683  0D74  027F               	subwf	127,w
  4684  0D75  1D03               	skipz
  4685  0D76  2D79               	goto	u3105
  4686  0D77  3005               	movlw	5
  4687  0D78  0226               	subwf	light_level_check@i,w
  4688  0D79                     u3105:	
  4689  0D79  1803               	btfsc	3,0
  4690  0D7A  2DA1               	goto	l2340
  4691  0D7B                     l2332:	
  4692                           
  4693                           ;main.c: 122: unsigned int ldr_value = analog_read(1);
  4694  0D7B  3001               	movlw	1
  4695  0D7C  00F0               	movwf	analog_read@channel
  4696  0D7D  3000               	movlw	0
  4697  0D7E  00F1               	movwf	analog_read@channel+1
  4698  0D7F  158A  22A0  158A   	fcall	_analog_read
  4699  0D82  0871               	movf	?_analog_read+1,w
  4700  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  4701  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  4702  0D85  00A3               	movwf	light_level_check@ldr_value_178+1
  4703  0D86  0870               	movf	?_analog_read,w
  4704  0D87  00A2               	movwf	light_level_check@ldr_value_178
  4705                           
  4706                           ;main.c: 123: sum_light_level_value=sum_light_level_value + ldr_value ;
  4707  0D88  0822               	movf	light_level_check@ldr_value_178,w
  4708  0D89  0724               	addwf	light_level_check@sum_light_level_value,w
  4709  0D8A  00A4               	movwf	light_level_check@sum_light_level_value
  4710  0D8B  0823               	movf	light_level_check@ldr_value_178+1,w
  4711  0D8C  1803               	skipnc
  4712  0D8D  0A23               	incf	light_level_check@ldr_value_178+1,w
  4713  0D8E  0725               	addwf	light_level_check@sum_light_level_value+1,w
  4714  0D8F  00A5               	movwf	light_level_check@sum_light_level_value+1
  4715  0D90  3001               	movlw	1
  4716  0D91  07A6               	addwf	light_level_check@i,f
  4717  0D92  1803               	skipnc
  4718  0D93  0AA7               	incf	light_level_check@i+1,f
  4719  0D94  3000               	movlw	0
  4720  0D95  07A7               	addwf	light_level_check@i+1,f
  4721  0D96  0827               	movf	light_level_check@i+1,w
  4722  0D97  3A80               	xorlw	128
  4723  0D98  00FF               	movwf	127
  4724  0D99  3080               	movlw	128
  4725  0D9A  027F               	subwf	127,w
  4726  0D9B  1D03               	skipz
  4727  0D9C  2D9F               	goto	u3115
  4728  0D9D  3005               	movlw	5
  4729  0D9E  0226               	subwf	light_level_check@i,w
  4730  0D9F                     u3115:	
  4731  0D9F  1C03               	skipc
  4732  0DA0  2D7B               	goto	l2332
  4733  0DA1                     l2340:	
  4734                           
  4735                           ;main.c: 124: }
  4736                           ;main.c: 125: return (sum_light_level_value/5);
  4737  0DA1  3005               	movlw	5
  4738  0DA2  00F0               	movwf	___lwdiv@divisor
  4739  0DA3  3000               	movlw	0
  4740  0DA4  00F1               	movwf	___lwdiv@divisor+1
  4741  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0DA7  0825               	movf	light_level_check@sum_light_level_value+1,w
  4744  0DA8  00F3               	movwf	___lwdiv@dividend+1
  4745  0DA9  0824               	movf	light_level_check@sum_light_level_value,w
  4746  0DAA  00F2               	movwf	___lwdiv@dividend
  4747  0DAB  158A  2368         	fcall	___lwdiv
  4748  0DAD  0871               	movf	?___lwdiv+1,w
  4749  0DAE  00F9               	movwf	?_light_level_check+1
  4750  0DAF  0870               	movf	?___lwdiv,w
  4751  0DB0  00F8               	movwf	?_light_level_check
  4752  0DB1  0008               	return
  4753  0DB2                     __end_of_light_level_check:	
  4754                           
  4755                           	psect	text21
  4756  0AA0                     __ptext21:	
  4757 ;; *************** function _analog_read *****************
  4758 ;; Defined at:
  4759 ;;		line 90 in file "main.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  channel         2    0[COMMON] unsigned int 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  ad_value        2    3[COMMON] unsigned int 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  2    0[COMMON] unsigned int 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4773 ;;      Params:         2       0       0       0       0
  4774 ;;      Locals:         2       0       0       0       0
  4775 ;;      Temps:          1       0       0       0       0
  4776 ;;      Totals:         5       0       0       0       0
  4777 ;;Total ram usage:        5 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; This function calls:
  4780 ;;		Nothing
  4781 ;; This function is called by:
  4782 ;;		_voltage_read
  4783 ;;		_light_level_check
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           
  4788                           ;psect for function _analog_read
  4789  0AA0                     _analog_read:	
  4790                           
  4791                           ;main.c: 92: ADFM = 1;
  4792                           
  4793                           ;incstack = 0
  4794                           ; Regs used in _analog_read: [wreg+status,2+status,0]
  4795  0AA0  1683               	bsf	3,5	;RP0=1, select bank1
  4796  0AA1  1303               	bcf	3,6	;RP1=0, select bank1
  4797  0AA2  179F               	bsf	31,7	;volatile
  4798                           
  4799                           ;main.c: 93: ADCS2 = 1;
  4800  0AA3  171F               	bsf	31,6	;volatile
  4801                           
  4802                           ;main.c: 94: VCFG0 = 0;
  4803  0AA4  121F               	bcf	31,4	;volatile
  4804                           
  4805                           ;main.c: 95: VCFG1 = 0;
  4806  0AA5  129F               	bcf	31,5	;volatile
  4807                           
  4808                           ;main.c: 96: ADCS0 = 0;
  4809  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  4811  0AA8  131F               	bcf	31,6	;volatile
  4812                           
  4813                           ;main.c: 97: ADCS1 = 0;
  4814  0AA9  139F               	bcf	31,7	;volatile
  4815                           
  4816                           ;main.c: 98: ADCON0bits.CHS = channel;
  4817  0AAA  0870               	movf	analog_read@channel,w
  4818  0AAB  00F2               	movwf	??_analog_read
  4819  0AAC  0DF2               	rlf	??_analog_read,f
  4820  0AAD  0DF2               	rlf	??_analog_read,f
  4821  0AAE  0DF2               	rlf	??_analog_read,f
  4822  0AAF  081F               	movf	31,w	;volatile
  4823  0AB0  0672               	xorwf	??_analog_read,w
  4824  0AB1  39C7               	andlw	-57
  4825  0AB2  0672               	xorwf	??_analog_read,w
  4826  0AB3  009F               	movwf	31	;volatile
  4827                           
  4828                           ;main.c: 99: ADON =1 ;
  4829  0AB4  141F               	bsf	31,0	;volatile
  4830                           
  4831                           ;main.c: 101: _delay((unsigned long)((1)*(4000000/4000.0)));
  4832  0AB5  30C7               	movlw	199
  4833  0AB6  00F2               	movwf	??_analog_read
  4834  0AB7                     u3587:	
  4835  0AB7  2AB8               	nop2
  4836  0AB8  0BF2               	decfsz	??_analog_read,f
  4837  0AB9  2AB7               	goto	u3587
  4838  0ABA  2ABB               	nop2
  4839  0ABB  2ABC               	nop2
  4840                           
  4841                           ;main.c: 102: GO_DONE = 1;
  4842  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4844  0ABE  151F               	bsf	31,2	;volatile
  4845  0ABF                     l84:	
  4846                           ;main.c: 103: while(ADCON0bits.GO_DONE);
  4847                           
  4848  0ABF  191F               	btfsc	31,2	;volatile
  4849  0AC0  2ABF               	goto	l84
  4850                           
  4851                           ;main.c: 104: unsigned int ad_value = (ADRESH << 8) + ADRESL;
  4852  0AC1  081E               	movf	30,w	;volatile
  4853  0AC2  00F4               	movwf	analog_read@ad_value+1
  4854  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  4855  0AC4  1303               	bcf	3,6	;RP1=0, select bank1
  4856  0AC5  081E               	movf	30,w	;volatile
  4857  0AC6  00F3               	movwf	analog_read@ad_value
  4858                           
  4859                           ;main.c: 105: return ad_value;
  4860  0AC7  0874               	movf	analog_read@ad_value+1,w
  4861  0AC8  00F1               	movwf	?_analog_read+1
  4862  0AC9  0873               	movf	analog_read@ad_value,w
  4863  0ACA  00F0               	movwf	?_analog_read
  4864  0ACB  0008               	return
  4865  0ACC                     __end_of_analog_read:	
  4866                           
  4867                           	psect	text22
  4868  04D8                     __ptext22:	
  4869 ;; *************** function _mode_dht11_read *****************
  4870 ;; Defined at:
  4871 ;;		line 155 in file "main.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;		None
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  v_humi          4   26[BANK0 ] unsigned char [4]
  4876 ;;  v_temp          4   22[BANK0 ] unsigned char [4]
  4877 ;;  humi            2   36[BANK0 ] int 
  4878 ;;  temp            2   34[BANK0 ] int 
  4879 ;;  dtemp           2   32[BANK0 ] int 
  4880 ;;  dhumi           2   30[BANK0 ] int 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4890 ;;      Params:         0       0       0       0       0
  4891 ;;      Locals:         0      16       0       0       0
  4892 ;;      Temps:          0       3       0       0       0
  4893 ;;      Totals:         0      19       0       0       0
  4894 ;;Total ram usage:       19 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    3
  4897 ;; This function calls:
  4898 ;;		_DHT11_CheckResponse
  4899 ;;		_DHT11_ReadData
  4900 ;;		_DHT11_init
  4901 ;;		_Lcd_Clear
  4902 ;;		_Lcd_Set_Cursor
  4903 ;;		_Lcd_Write_String
  4904 ;;		_itoa
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function _mode_dht11_read
  4912  04D8                     _mode_dht11_read:	
  4913                           
  4914                           ;main.c: 156: int temp,humi,dhumi,dtemp;
  4915                           ;main.c: 157: unsigned char v_temp[4],v_humi[4];
  4916                           ;main.c: 158: DHT11_init();
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _mode_dht11_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4920  04D8  158A  2186  118A   	fcall	_DHT11_init
  4921                           
  4922                           ;main.c: 159: if((DHT11_CheckResponse())==1){
  4923  04DB  158A  23A4  118A   	fcall	_DHT11_CheckResponse
  4924  04DE  0370               	decf	?_DHT11_CheckResponse,w
  4925  04DF  0471               	iorwf	?_DHT11_CheckResponse+1,w
  4926  04E0  1D03               	btfss	3,2
  4927  04E1  2DD9               	goto	l2648
  4928                           
  4929                           ;main.c: 160: if((DHT11_ReadData(&humi,&dhumi,&temp,&dtemp))==1){
  4930  04E2  303E               	movlw	(low (mode_dht11_read@dhumi| 0))& (0+255)
  4931  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  4932  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  4933  04E5  00B3               	movwf	??_mode_dht11_read
  4934  04E6  0833               	movf	??_mode_dht11_read,w
  4935  04E7  00F0               	movwf	DHT11_ReadData@dhum
  4936  04E8  3042               	movlw	(low (mode_dht11_read@temp| 0))& (0+255)
  4937  04E9  00B4               	movwf	??_mode_dht11_read+1
  4938  04EA  0834               	movf	??_mode_dht11_read+1,w
  4939  04EB  00F1               	movwf	DHT11_ReadData@temp
  4940  04EC  3040               	movlw	(low (mode_dht11_read@dtemp| 0))& (0+255)
  4941  04ED  00B5               	movwf	??_mode_dht11_read+2
  4942  04EE  0835               	movf	??_mode_dht11_read+2,w
  4943  04EF  00F2               	movwf	DHT11_ReadData@dtemp
  4944  04F0  3044               	movlw	(low (mode_dht11_read@humi| 0))& (0+255)
  4945  04F1  118A  22F0  118A   	fcall	_DHT11_ReadData
  4946  04F4  0370               	decf	?_DHT11_ReadData,w
  4947  04F5  0471               	iorwf	?_DHT11_ReadData+1,w
  4948  04F6  1D03               	btfss	3,2
  4949  04F7  2D7A               	goto	l2632
  4950                           
  4951                           ;main.c: 161: Lcd_Clear();
  4952  04F8  158A  214E  118A   	fcall	_Lcd_Clear
  4953                           
  4954                           ;main.c: 162: itoa(v_temp,temp,10);
  4955  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  4956  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  4957  04FD  0843               	movf	mode_dht11_read@temp+1,w
  4958  04FE  00A5               	movwf	itoa@val+1
  4959  04FF  0842               	movf	mode_dht11_read@temp,w
  4960  0500  00A4               	movwf	itoa@val
  4961  0501  300A               	movlw	10
  4962  0502  00A6               	movwf	itoa@base
  4963  0503  3000               	movlw	0
  4964  0504  00A7               	movwf	itoa@base+1
  4965  0505  3036               	movlw	(low (mode_dht11_read@v_temp| 0))& (0+255)
  4966  0506  158A  2251  118A   	fcall	_itoa
  4967                           
  4968                           ;main.c: 163: itoa(v_humi,humi,10);
  4969  0509  1283               	bcf	3,5	;RP0=0, select bank0
  4970  050A  1303               	bcf	3,6	;RP1=0, select bank0
  4971  050B  0845               	movf	mode_dht11_read@humi+1,w
  4972  050C  00A5               	movwf	itoa@val+1
  4973  050D  0844               	movf	mode_dht11_read@humi,w
  4974  050E  00A4               	movwf	itoa@val
  4975  050F  300A               	movlw	10
  4976  0510  00A6               	movwf	itoa@base
  4977  0511  3000               	movlw	0
  4978  0512  00A7               	movwf	itoa@base+1
  4979  0513  303A               	movlw	(low (mode_dht11_read@v_humi| 0))& (0+255)
  4980  0514  158A  2251  118A   	fcall	_itoa
  4981                           
  4982                           ;main.c: 164: if(temp>35||temp<20||humi>75||humi<15)RA2 =1;
  4983  0517  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0518  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0519  0843               	movf	mode_dht11_read@temp+1,w
  4986  051A  3A80               	xorlw	128
  4987  051B  00FF               	movwf	127
  4988  051C  3080               	movlw	128
  4989  051D  027F               	subwf	127,w
  4990  051E  1D03               	skipz
  4991  051F  2D22               	goto	u3475
  4992  0520  3024               	movlw	36
  4993  0521  0242               	subwf	mode_dht11_read@temp,w
  4994  0522                     u3475:	
  4995  0522  1803               	skipnc
  4996  0523  2D4B               	goto	l118
  4997  0524  1283               	bcf	3,5	;RP0=0, select bank0
  4998  0525  1303               	bcf	3,6	;RP1=0, select bank0
  4999  0526  0843               	movf	mode_dht11_read@temp+1,w
  5000  0527  3A80               	xorlw	128
  5001  0528  00FF               	movwf	127
  5002  0529  3080               	movlw	128
  5003  052A  027F               	subwf	127,w
  5004  052B  1D03               	skipz
  5005  052C  2D2F               	goto	u3485
  5006  052D  3014               	movlw	20
  5007  052E  0242               	subwf	mode_dht11_read@temp,w
  5008  052F                     u3485:	
  5009  052F  1C03               	skipc
  5010  0530  2D4B               	goto	l118
  5011  0531  1283               	bcf	3,5	;RP0=0, select bank0
  5012  0532  1303               	bcf	3,6	;RP1=0, select bank0
  5013  0533  0845               	movf	mode_dht11_read@humi+1,w
  5014  0534  3A80               	xorlw	128
  5015  0535  00FF               	movwf	127
  5016  0536  3080               	movlw	128
  5017  0537  027F               	subwf	127,w
  5018  0538  1D03               	skipz
  5019  0539  2D3C               	goto	u3495
  5020  053A  304C               	movlw	76
  5021  053B  0244               	subwf	mode_dht11_read@humi,w
  5022  053C                     u3495:	
  5023  053C  1803               	skipnc
  5024  053D  2D4B               	goto	l118
  5025  053E  1283               	bcf	3,5	;RP0=0, select bank0
  5026  053F  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0540  0845               	movf	mode_dht11_read@humi+1,w
  5028  0541  3A80               	xorlw	128
  5029  0542  00FF               	movwf	127
  5030  0543  3080               	movlw	128
  5031  0544  027F               	subwf	127,w
  5032  0545  1D03               	skipz
  5033  0546  2D49               	goto	u3505
  5034  0547  300F               	movlw	15
  5035  0548  0244               	subwf	mode_dht11_read@humi,w
  5036  0549                     u3505:	
  5037  0549  1803               	skipnc
  5038  054A  2D4F               	goto	l116
  5039  054B                     l118:	
  5040  054B  1283               	bcf	3,5	;RP0=0, select bank0
  5041  054C  1303               	bcf	3,6	;RP1=0, select bank0
  5042  054D  1505               	bsf	5,2	;volatile
  5043  054E  2D52               	goto	l2622
  5044  054F                     l116:	
  5045                           
  5046                           ;main.c: 165: else RA2 =0;
  5047  054F  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0550  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0551  1105               	bcf	5,2	;volatile
  5050  0552                     l2622:	
  5051                           
  5052                           ;main.c: 166: Lcd_Set_Cursor(1,1);
  5053  0552  01F4               	clrf	Lcd_Set_Cursor@b
  5054  0553  0AF4               	incf	Lcd_Set_Cursor@b,f
  5055  0554  3001               	movlw	1
  5056  0555  158A  23E7  118A   	fcall	_Lcd_Set_Cursor
  5057                           
  5058                           ;main.c: 167: Lcd_Write_String("TEMP:");
  5059  0558  30BB               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5060  0559  00F5               	movwf	Lcd_Write_String@a
  5061  055A  3080               	movlw	128
  5062  055B  00F6               	movwf	Lcd_Write_String@a+1
  5063  055C  158A  2331  118A   	fcall	_Lcd_Write_String
  5064                           
  5065                           ;main.c: 168: Lcd_Write_String(v_temp);
  5066  055F  3036               	movlw	(low (mode_dht11_read@v_temp| 0))& (0+255)
  5067  0560  00F5               	movwf	Lcd_Write_String@a
  5068  0561  3000               	movlw	0
  5069  0562  00F6               	movwf	Lcd_Write_String@a+1
  5070  0563  158A  2331  118A   	fcall	_Lcd_Write_String
  5071                           
  5072                           ;main.c: 169: Lcd_Set_Cursor(2,1);
  5073  0566  01F4               	clrf	Lcd_Set_Cursor@b
  5074  0567  0AF4               	incf	Lcd_Set_Cursor@b,f
  5075  0568  3002               	movlw	2
  5076  0569  158A  23E7  118A   	fcall	_Lcd_Set_Cursor
  5077                           
  5078                           ;main.c: 170: Lcd_Write_String("HUMI:");
  5079  056C  30B5               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5080  056D  00F5               	movwf	Lcd_Write_String@a
  5081  056E  3080               	movlw	128
  5082  056F  00F6               	movwf	Lcd_Write_String@a+1
  5083  0570  158A  2331  118A   	fcall	_Lcd_Write_String
  5084                           
  5085                           ;main.c: 171: Lcd_Write_String(v_humi);
  5086  0573  303A               	movlw	(low (mode_dht11_read@v_humi| 0))& (0+255)
  5087  0574  00F5               	movwf	Lcd_Write_String@a
  5088  0575  3000               	movlw	0
  5089  0576  00F6               	movwf	Lcd_Write_String@a+1
  5090  0577  158A  2331         	fcall	_Lcd_Write_String
  5091                           
  5092                           ;main.c: 172: }
  5093  0579  0008               	return
  5094  057A                     l2632:	
  5095                           
  5096                           ;main.c: 173: else if((DHT11_ReadData(&humi,&dhumi,&temp,&dtemp))== -1){
  5097  057A  303E               	movlw	(low (mode_dht11_read@dhumi| 0))& (0+255)
  5098  057B  1283               	bcf	3,5	;RP0=0, select bank0
  5099  057C  1303               	bcf	3,6	;RP1=0, select bank0
  5100  057D  00B3               	movwf	??_mode_dht11_read
  5101  057E  0833               	movf	??_mode_dht11_read,w
  5102  057F  00F0               	movwf	DHT11_ReadData@dhum
  5103  0580  3042               	movlw	(low (mode_dht11_read@temp| 0))& (0+255)
  5104  0581  00B4               	movwf	??_mode_dht11_read+1
  5105  0582  0834               	movf	??_mode_dht11_read+1,w
  5106  0583  00F1               	movwf	DHT11_ReadData@temp
  5107  0584  3040               	movlw	(low (mode_dht11_read@dtemp| 0))& (0+255)
  5108  0585  00B5               	movwf	??_mode_dht11_read+2
  5109  0586  0835               	movf	??_mode_dht11_read+2,w
  5110  0587  00F2               	movwf	DHT11_ReadData@dtemp
  5111  0588  3044               	movlw	(low (mode_dht11_read@humi| 0))& (0+255)
  5112  0589  118A  22F0  118A   	fcall	_DHT11_ReadData
  5113  058C  0A70               	incf	?_DHT11_ReadData,w
  5114  058D  1D03               	skipz
  5115  058E  2DA2               	goto	l2638
  5116  058F  0A71               	incf	?_DHT11_ReadData+1,w
  5117  0590  1D03               	btfss	3,2
  5118  0591  2DA2               	goto	l2638
  5119                           
  5120                           ;main.c: 174: Lcd_Clear();
  5121  0592  158A  214E  118A   	fcall	_Lcd_Clear
  5122                           
  5123                           ;main.c: 175: Lcd_Set_Cursor(1,1);
  5124  0595  01F4               	clrf	Lcd_Set_Cursor@b
  5125  0596  0AF4               	incf	Lcd_Set_Cursor@b,f
  5126  0597  3001               	movlw	1
  5127  0598  158A  23E7  118A   	fcall	_Lcd_Set_Cursor
  5128                           
  5129                           ;main.c: 176: Lcd_Write_String("DHT11 ERROR:-1");
  5130  059B  304A               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  5131  059C  00F5               	movwf	Lcd_Write_String@a
  5132  059D  3080               	movlw	128
  5133  059E  00F6               	movwf	Lcd_Write_String@a+1
  5134  059F  158A  2331         	fcall	_Lcd_Write_String
  5135                           
  5136                           ;main.c: 178: }
  5137  05A1  0008               	return
  5138  05A2                     l2638:	
  5139                           
  5140                           ;main.c: 179: else if((DHT11_ReadData(&humi,&dhumi,&temp,&dtemp))==2){
  5141  05A2  303E               	movlw	(low (mode_dht11_read@dhumi| 0))& (0+255)
  5142  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  5143  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  5144  05A5  00B3               	movwf	??_mode_dht11_read
  5145  05A6  0833               	movf	??_mode_dht11_read,w
  5146  05A7  00F0               	movwf	DHT11_ReadData@dhum
  5147  05A8  3042               	movlw	(low (mode_dht11_read@temp| 0))& (0+255)
  5148  05A9  00B4               	movwf	??_mode_dht11_read+1
  5149  05AA  0834               	movf	??_mode_dht11_read+1,w
  5150  05AB  00F1               	movwf	DHT11_ReadData@temp
  5151  05AC  3040               	movlw	(low (mode_dht11_read@dtemp| 0))& (0+255)
  5152  05AD  00B5               	movwf	??_mode_dht11_read+2
  5153  05AE  0835               	movf	??_mode_dht11_read+2,w
  5154  05AF  00F2               	movwf	DHT11_ReadData@dtemp
  5155  05B0  3044               	movlw	(low (mode_dht11_read@humi| 0))& (0+255)
  5156  05B1  118A  22F0  118A   	fcall	_DHT11_ReadData
  5157  05B4  3002               	movlw	2
  5158  05B5  0670               	xorwf	?_DHT11_ReadData,w
  5159  05B6  0471               	iorwf	?_DHT11_ReadData+1,w
  5160  05B7  1D03               	btfss	3,2
  5161  05B8  2DC9               	goto	l2644
  5162                           
  5163                           ;main.c: 180: Lcd_Clear();
  5164  05B9  158A  214E  118A   	fcall	_Lcd_Clear
  5165                           
  5166                           ;main.c: 181: Lcd_Set_Cursor(1,1);
  5167  05BC  01F4               	clrf	Lcd_Set_Cursor@b
  5168  05BD  0AF4               	incf	Lcd_Set_Cursor@b,f
  5169  05BE  3001               	movlw	1
  5170  05BF  158A  23E7  118A   	fcall	_Lcd_Set_Cursor
  5171                           
  5172                           ;main.c: 182: Lcd_Write_String("DHT11 ERROR:2");
  5173  05C2  3076               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  5174  05C3  00F5               	movwf	Lcd_Write_String@a
  5175  05C4  3080               	movlw	128
  5176  05C5  00F6               	movwf	Lcd_Write_String@a+1
  5177  05C6  158A  2331         	fcall	_Lcd_Write_String
  5178                           
  5179                           ;main.c: 183: }
  5180  05C8  0008               	return
  5181  05C9                     l2644:	
  5182                           
  5183                           ;main.c: 184: else{
  5184                           ;main.c: 185: Lcd_Clear();
  5185  05C9  158A  214E  118A   	fcall	_Lcd_Clear
  5186                           
  5187                           ;main.c: 186: Lcd_Set_Cursor(1,1);
  5188  05CC  01F4               	clrf	Lcd_Set_Cursor@b
  5189  05CD  0AF4               	incf	Lcd_Set_Cursor@b,f
  5190  05CE  3001               	movlw	1
  5191  05CF  158A  23E7  118A   	fcall	_Lcd_Set_Cursor
  5192                           
  5193                           ;main.c: 187: Lcd_Write_String("DHT11 ERROR:0");
  5194  05D2  3068               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  5195  05D3  00F5               	movwf	Lcd_Write_String@a
  5196  05D4  3080               	movlw	128
  5197  05D5  00F6               	movwf	Lcd_Write_String@a+1
  5198  05D6  158A  2331         	fcall	_Lcd_Write_String
  5199                           
  5200                           ;main.c: 188: }
  5201                           ;main.c: 189: }
  5202  05D8  0008               	return
  5203  05D9                     l2648:	
  5204                           
  5205                           ;main.c: 190: else{
  5206                           ;main.c: 191: Lcd_Clear();
  5207  05D9  158A  214E  118A   	fcall	_Lcd_Clear
  5208                           
  5209                           ;main.c: 192: Lcd_Set_Cursor(1,1);
  5210  05DC  01F4               	clrf	Lcd_Set_Cursor@b
  5211  05DD  0AF4               	incf	Lcd_Set_Cursor@b,f
  5212  05DE  3001               	movlw	1
  5213  05DF  158A  23E7  118A   	fcall	_Lcd_Set_Cursor
  5214                           
  5215                           ;main.c: 193: Lcd_Write_String("DHT11 ERROR:3");
  5216  05E2  3084               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  5217  05E3  00F5               	movwf	Lcd_Write_String@a
  5218  05E4  3080               	movlw	128
  5219  05E5  00F6               	movwf	Lcd_Write_String@a+1
  5220  05E6  158A  2331         	fcall	_Lcd_Write_String
  5221  05E8  0008               	return
  5222  05E9                     __end_of_mode_dht11_read:	
  5223                           
  5224                           	psect	text23
  5225  0A51                     __ptext23:	
  5226 ;; *************** function _itoa *****************
  5227 ;; Defined at:
  5228 ;;		line 4 in file "D:\MPLAB\sources\common\itoa.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  buf             1    wreg     PTR unsigned char 
  5231 ;;		 -> mode_dht11_read@v_humi(4), mode_dht11_read@v_temp(4), 
  5232 ;;  val             2    4[BANK0 ] int 
  5233 ;;  base            2    6[BANK0 ] int 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  5236 ;;		 -> mode_dht11_read@v_humi(4), mode_dht11_read@v_temp(4), 
  5237 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  5238 ;;		 -> mode_dht11_read@v_humi(4), mode_dht11_read@v_temp(4), 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      PTR unsigned char 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5248 ;;      Params:         0       4       0       0       0
  5249 ;;      Locals:         0       2       0       0       0
  5250 ;;      Temps:          1       0       0       0       0
  5251 ;;      Totals:         1       6       0       0       0
  5252 ;;Total ram usage:        7 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    2
  5255 ;; This function calls:
  5256 ;;		_utoa
  5257 ;; This function is called by:
  5258 ;;		_mode_dht11_read
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _itoa
  5264  0A51                     _itoa:	
  5265                           
  5266                           ;incstack = 0
  5267                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5268                           ;itoa@buf stored from wreg
  5269  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  5270  0A52  1303               	bcf	3,6	;RP1=0, select bank0
  5271  0A53  00A9               	movwf	itoa@buf
  5272  0A54  0829               	movf	itoa@buf,w
  5273  0A55  00FD               	movwf	??_itoa
  5274  0A56  087D               	movf	??_itoa,w
  5275  0A57  00A8               	movwf	itoa@cp
  5276  0A58  1FA5               	btfss	itoa@val+1,7
  5277  0A59  2A6A               	goto	l2510
  5278  0A5A  302D               	movlw	45
  5279  0A5B  00FD               	movwf	??_itoa
  5280  0A5C  0829               	movf	itoa@buf,w
  5281  0A5D  0084               	movwf	4
  5282  0A5E  087D               	movf	??_itoa,w
  5283  0A5F  1383               	bcf	3,7	;select IRP bank0
  5284  0A60  0080               	movwf	0
  5285  0A61  3001               	movlw	1
  5286  0A62  00FD               	movwf	??_itoa
  5287  0A63  087D               	movf	??_itoa,w
  5288  0A64  07A9               	addwf	itoa@buf,f
  5289  0A65  09A4               	comf	itoa@val,f
  5290  0A66  09A5               	comf	itoa@val+1,f
  5291  0A67  0AA4               	incf	itoa@val,f
  5292  0A68  1903               	skipnz
  5293  0A69  0AA5               	incf	itoa@val+1,f
  5294  0A6A                     l2510:	
  5295  0A6A  0825               	movf	itoa@val+1,w
  5296  0A6B  00F9               	movwf	utoa@val+1
  5297  0A6C  0824               	movf	itoa@val,w
  5298  0A6D  00F8               	movwf	utoa@val
  5299  0A6E  0827               	movf	itoa@base+1,w
  5300  0A6F  00FB               	movwf	utoa@base+1
  5301  0A70  0826               	movf	itoa@base,w
  5302  0A71  00FA               	movwf	utoa@base
  5303  0A72  0829               	movf	itoa@buf,w
  5304  0A73  158A  26C3         	fcall	_utoa
  5305  0A75  0008               	return
  5306  0A76                     __end_of_itoa:	
  5307                           ;	Return value of _itoa is never used
  5308                           
  5309                           
  5310                           	psect	text24
  5311  0EC3                     __ptext24:	
  5312 ;; *************** function _utoa *****************
  5313 ;; Defined at:
  5314 ;;		line 17 in file "D:\MPLAB\sources\common\itoa.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  buf             1    wreg     PTR unsigned char 
  5317 ;;		 -> mode_dht11_read@v_humi(4), mode_dht11_read@v_temp(4), 
  5318 ;;  val             2    8[COMMON] unsigned int 
  5319 ;;  base            2   10[COMMON] int 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  5322 ;;		 -> mode_dht11_read@v_humi(4), mode_dht11_read@v_temp(4), 
  5323 ;;  v               2    0[BANK0 ] unsigned int 
  5324 ;;  c               1    2[BANK0 ] unsigned char 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      PTR unsigned char 
  5327 ;; Registers used:
  5328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5334 ;;      Params:         4       0       0       0       0
  5335 ;;      Locals:         0       4       0       0       0
  5336 ;;      Temps:          1       0       0       0       0
  5337 ;;      Totals:         5       4       0       0       0
  5338 ;;Total ram usage:        9 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    1
  5341 ;; This function calls:
  5342 ;;		___lwdiv
  5343 ;;		___lwmod
  5344 ;; This function is called by:
  5345 ;;		_itoa
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function _utoa
  5351  0EC3                     _utoa:	
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5355                           ;utoa@buf stored from wreg
  5356  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  5357  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  5358  0EC5  00A3               	movwf	utoa@buf
  5359  0EC6  0879               	movf	utoa@val+1,w
  5360  0EC7  00A1               	movwf	utoa@v+1
  5361  0EC8  0878               	movf	utoa@val,w
  5362  0EC9  00A0               	movwf	utoa@v
  5363  0ECA                     l2264:	
  5364  0ECA  087B               	movf	utoa@base+1,w
  5365  0ECB  00F1               	movwf	___lwdiv@divisor+1
  5366  0ECC  087A               	movf	utoa@base,w
  5367  0ECD  00F0               	movwf	___lwdiv@divisor
  5368  0ECE  0821               	movf	utoa@v+1,w
  5369  0ECF  00F3               	movwf	___lwdiv@dividend+1
  5370  0ED0  0820               	movf	utoa@v,w
  5371  0ED1  00F2               	movwf	___lwdiv@dividend
  5372  0ED2  158A  2368  158A   	fcall	___lwdiv
  5373  0ED5  0871               	movf	?___lwdiv+1,w
  5374  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  5375  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  5376  0ED8  00A1               	movwf	utoa@v+1
  5377  0ED9  0870               	movf	?___lwdiv,w
  5378  0EDA  00A0               	movwf	utoa@v
  5379  0EDB  3001               	movlw	1
  5380  0EDC  00FC               	movwf	??_utoa
  5381  0EDD  087C               	movf	??_utoa,w
  5382  0EDE  07A3               	addwf	utoa@buf,f
  5383  0EDF  0820               	movf	utoa@v,w
  5384  0EE0  0421               	iorwf	utoa@v+1,w
  5385  0EE1  1D03               	btfss	3,2
  5386  0EE2  2ECA               	goto	l2264
  5387  0EE3  0823               	movf	utoa@buf,w
  5388  0EE4  0084               	movwf	4
  5389  0EE5  1383               	bcf	3,7	;select IRP bank0
  5390  0EE6  0180               	clrf	0
  5391  0EE7  3001               	movlw	1
  5392  0EE8  02A3               	subwf	utoa@buf,f
  5393  0EE9                     l2274:	
  5394  0EE9  087B               	movf	utoa@base+1,w
  5395  0EEA  00F1               	movwf	___lwmod@divisor+1
  5396  0EEB  087A               	movf	utoa@base,w
  5397  0EEC  00F0               	movwf	___lwmod@divisor
  5398  0EED  0879               	movf	utoa@val+1,w
  5399  0EEE  00F3               	movwf	___lwmod@dividend+1
  5400  0EEF  0878               	movf	utoa@val,w
  5401  0EF0  00F2               	movwf	___lwmod@dividend
  5402  0EF1  158A  22CC  158A   	fcall	___lwmod
  5403  0EF4  0870               	movf	?___lwmod,w
  5404  0EF5  00FC               	movwf	??_utoa
  5405  0EF6  087C               	movf	??_utoa,w
  5406  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  5407  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  5408  0EF9  00A2               	movwf	utoa@c
  5409  0EFA  087B               	movf	utoa@base+1,w
  5410  0EFB  00F1               	movwf	___lwdiv@divisor+1
  5411  0EFC  087A               	movf	utoa@base,w
  5412  0EFD  00F0               	movwf	___lwdiv@divisor
  5413  0EFE  0879               	movf	utoa@val+1,w
  5414  0EFF  00F3               	movwf	___lwdiv@dividend+1
  5415  0F00  0878               	movf	utoa@val,w
  5416  0F01  00F2               	movwf	___lwdiv@dividend
  5417  0F02  158A  2368  158A   	fcall	___lwdiv
  5418  0F05  0871               	movf	?___lwdiv+1,w
  5419  0F06  00F9               	movwf	utoa@val+1
  5420  0F07  0870               	movf	?___lwdiv,w
  5421  0F08  00F8               	movwf	utoa@val
  5422  0F09  300A               	movlw	10
  5423  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  5424  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  5425  0F0C  0222               	subwf	utoa@c,w
  5426  0F0D  1C03               	skipc
  5427  0F0E  2F13               	goto	l647
  5428  0F0F  3007               	movlw	7
  5429  0F10  00FC               	movwf	??_utoa
  5430  0F11  087C               	movf	??_utoa,w
  5431  0F12  07A2               	addwf	utoa@c,f
  5432  0F13                     l647:	
  5433  0F13  3030               	movlw	48
  5434  0F14  00FC               	movwf	??_utoa
  5435  0F15  087C               	movf	??_utoa,w
  5436  0F16  07A2               	addwf	utoa@c,f
  5437  0F17  0822               	movf	utoa@c,w
  5438  0F18  00FC               	movwf	??_utoa
  5439  0F19  0823               	movf	utoa@buf,w
  5440  0F1A  0084               	movwf	4
  5441  0F1B  087C               	movf	??_utoa,w
  5442  0F1C  1383               	bcf	3,7	;select IRP bank0
  5443  0F1D  0080               	movwf	0
  5444  0F1E  3001               	movlw	1
  5445  0F1F  02A3               	subwf	utoa@buf,f
  5446  0F20  0878               	movf	utoa@val,w
  5447  0F21  0479               	iorwf	utoa@val+1,w
  5448  0F22  1D03               	btfss	3,2
  5449  0F23  2EE9               	goto	l2274
  5450                           
  5451                           ;	Return value of _utoa is never used
  5452  0F24  3001               	movlw	1
  5453  0F25  00FC               	movwf	??_utoa
  5454  0F26  087C               	movf	??_utoa,w
  5455  0F27  07A3               	addwf	utoa@buf,f
  5456  0F28  0008               	return
  5457  0F29                     __end_of_utoa:	
  5458                           
  5459                           	psect	text25
  5460  0ACC                     __ptext25:	
  5461 ;; *************** function ___lwmod *****************
  5462 ;; Defined at:
  5463 ;;		line 6 in file "D:\MPLAB\sources\common\lwmod.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  divisor         2    0[COMMON] unsigned int 
  5466 ;;  dividend        2    2[COMMON] unsigned int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  counter         1    5[COMMON] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2    0[COMMON] unsigned int 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5478 ;;      Params:         4       0       0       0       0
  5479 ;;      Locals:         1       0       0       0       0
  5480 ;;      Temps:          1       0       0       0       0
  5481 ;;      Totals:         6       0       0       0       0
  5482 ;;Total ram usage:        6 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_utoa
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           
  5492                           ;psect for function ___lwmod
  5493  0ACC                     ___lwmod:	
  5494                           
  5495                           ;incstack = 0
  5496                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5497  0ACC  0870               	movf	___lwmod@divisor,w
  5498  0ACD  0471               	iorwf	___lwmod@divisor+1,w
  5499  0ACE  1903               	btfsc	3,2
  5500  0ACF  2AF9               	goto	l1982
  5501  0AD0  01F5               	clrf	___lwmod@counter
  5502  0AD1  0AF5               	incf	___lwmod@counter,f
  5503  0AD2                     l1972:	
  5504  0AD2  1BF1               	btfsc	___lwmod@divisor+1,7
  5505  0AD3  2AE0               	goto	l1974
  5506  0AD4  3001               	movlw	1
  5507  0AD5                     u2455:	
  5508  0AD5  1003               	clrc
  5509  0AD6  0DF0               	rlf	___lwmod@divisor,f
  5510  0AD7  0DF1               	rlf	___lwmod@divisor+1,f
  5511  0AD8  3EFF               	addlw	-1
  5512  0AD9  1D03               	skipz
  5513  0ADA  2AD5               	goto	u2455
  5514  0ADB  3001               	movlw	1
  5515  0ADC  00F4               	movwf	??___lwmod
  5516  0ADD  0874               	movf	??___lwmod,w
  5517  0ADE  07F5               	addwf	___lwmod@counter,f
  5518  0ADF  2AD2               	goto	l1972
  5519  0AE0                     l1974:	
  5520  0AE0  0871               	movf	___lwmod@divisor+1,w
  5521  0AE1  0273               	subwf	___lwmod@dividend+1,w
  5522  0AE2  1D03               	skipz
  5523  0AE3  2AE6               	goto	u2475
  5524  0AE4  0870               	movf	___lwmod@divisor,w
  5525  0AE5  0272               	subwf	___lwmod@dividend,w
  5526  0AE6                     u2475:	
  5527  0AE6  1C03               	skipc
  5528  0AE7  2AEE               	goto	l1978
  5529  0AE8  0870               	movf	___lwmod@divisor,w
  5530  0AE9  02F2               	subwf	___lwmod@dividend,f
  5531  0AEA  0871               	movf	___lwmod@divisor+1,w
  5532  0AEB  1C03               	skipc
  5533  0AEC  03F3               	decf	___lwmod@dividend+1,f
  5534  0AED  02F3               	subwf	___lwmod@dividend+1,f
  5535  0AEE                     l1978:	
  5536  0AEE  3001               	movlw	1
  5537  0AEF                     u2485:	
  5538  0AEF  1003               	clrc
  5539  0AF0  0CF1               	rrf	___lwmod@divisor+1,f
  5540  0AF1  0CF0               	rrf	___lwmod@divisor,f
  5541  0AF2  3EFF               	addlw	-1
  5542  0AF3  1D03               	skipz
  5543  0AF4  2AEF               	goto	u2485
  5544  0AF5  3001               	movlw	1
  5545  0AF6  02F5               	subwf	___lwmod@counter,f
  5546  0AF7  1D03               	btfss	3,2
  5547  0AF8  2AE0               	goto	l1974
  5548  0AF9                     l1982:	
  5549  0AF9  0873               	movf	___lwmod@dividend+1,w
  5550  0AFA  00F1               	movwf	?___lwmod+1
  5551  0AFB  0872               	movf	___lwmod@dividend,w
  5552  0AFC  00F0               	movwf	?___lwmod
  5553  0AFD  0008               	return
  5554  0AFE                     __end_of___lwmod:	
  5555                           
  5556                           	psect	text26
  5557  0B68                     __ptext26:	
  5558 ;; *************** function ___lwdiv *****************
  5559 ;; Defined at:
  5560 ;;		line 6 in file "D:\MPLAB\sources\common\lwdiv.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  divisor         2    0[COMMON] unsigned int 
  5563 ;;  dividend        2    2[COMMON] unsigned int 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  quotient        2    5[COMMON] unsigned int 
  5566 ;;  counter         1    7[COMMON] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  2    0[COMMON] unsigned int 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5576 ;;      Params:         4       0       0       0       0
  5577 ;;      Locals:         3       0       0       0       0
  5578 ;;      Temps:          1       0       0       0       0
  5579 ;;      Totals:         8       0       0       0       0
  5580 ;;Total ram usage:        8 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_voltage_read
  5586 ;;		_light_level_check
  5587 ;;		_utoa
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function ___lwdiv
  5593  0B68                     ___lwdiv:	
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5597  0B68  01F5               	clrf	___lwdiv@quotient
  5598  0B69  01F6               	clrf	___lwdiv@quotient+1
  5599  0B6A  0870               	movf	___lwdiv@divisor,w
  5600  0B6B  0471               	iorwf	___lwdiv@divisor+1,w
  5601  0B6C  1903               	btfsc	3,2
  5602  0B6D  2B9F               	goto	l1960
  5603  0B6E  01F7               	clrf	___lwdiv@counter
  5604  0B6F  0AF7               	incf	___lwdiv@counter,f
  5605  0B70                     l1948:	
  5606  0B70  1BF1               	btfsc	___lwdiv@divisor+1,7
  5607  0B71  2B7E               	goto	l1950
  5608  0B72  3001               	movlw	1
  5609  0B73                     u2385:	
  5610  0B73  1003               	clrc
  5611  0B74  0DF0               	rlf	___lwdiv@divisor,f
  5612  0B75  0DF1               	rlf	___lwdiv@divisor+1,f
  5613  0B76  3EFF               	addlw	-1
  5614  0B77  1D03               	skipz
  5615  0B78  2B73               	goto	u2385
  5616  0B79  3001               	movlw	1
  5617  0B7A  00F4               	movwf	??___lwdiv
  5618  0B7B  0874               	movf	??___lwdiv,w
  5619  0B7C  07F7               	addwf	___lwdiv@counter,f
  5620  0B7D  2B70               	goto	l1948
  5621  0B7E                     l1950:	
  5622  0B7E  3001               	movlw	1
  5623  0B7F                     u2405:	
  5624  0B7F  1003               	clrc
  5625  0B80  0DF5               	rlf	___lwdiv@quotient,f
  5626  0B81  0DF6               	rlf	___lwdiv@quotient+1,f
  5627  0B82  3EFF               	addlw	-1
  5628  0B83  1D03               	skipz
  5629  0B84  2B7F               	goto	u2405
  5630  0B85  0871               	movf	___lwdiv@divisor+1,w
  5631  0B86  0273               	subwf	___lwdiv@dividend+1,w
  5632  0B87  1D03               	skipz
  5633  0B88  2B8B               	goto	u2415
  5634  0B89  0870               	movf	___lwdiv@divisor,w
  5635  0B8A  0272               	subwf	___lwdiv@dividend,w
  5636  0B8B                     u2415:	
  5637  0B8B  1C03               	skipc
  5638  0B8C  2B94               	goto	l1956
  5639  0B8D  0870               	movf	___lwdiv@divisor,w
  5640  0B8E  02F2               	subwf	___lwdiv@dividend,f
  5641  0B8F  0871               	movf	___lwdiv@divisor+1,w
  5642  0B90  1C03               	skipc
  5643  0B91  03F3               	decf	___lwdiv@dividend+1,f
  5644  0B92  02F3               	subwf	___lwdiv@dividend+1,f
  5645  0B93  1475               	bsf	___lwdiv@quotient,0
  5646  0B94                     l1956:	
  5647  0B94  3001               	movlw	1
  5648  0B95                     u2425:	
  5649  0B95  1003               	clrc
  5650  0B96  0CF1               	rrf	___lwdiv@divisor+1,f
  5651  0B97  0CF0               	rrf	___lwdiv@divisor,f
  5652  0B98  3EFF               	addlw	-1
  5653  0B99  1D03               	skipz
  5654  0B9A  2B95               	goto	u2425
  5655  0B9B  3001               	movlw	1
  5656  0B9C  02F7               	subwf	___lwdiv@counter,f
  5657  0B9D  1D03               	btfss	3,2
  5658  0B9E  2B7E               	goto	l1950
  5659  0B9F                     l1960:	
  5660  0B9F  0876               	movf	___lwdiv@quotient+1,w
  5661  0BA0  00F1               	movwf	?___lwdiv+1
  5662  0BA1  0875               	movf	___lwdiv@quotient,w
  5663  0BA2  00F0               	movwf	?___lwdiv
  5664  0BA3  0008               	return
  5665  0BA4                     __end_of___lwdiv:	
  5666                           
  5667                           	psect	text27
  5668  0B31                     __ptext27:	
  5669 ;; *************** function _Lcd_Write_String *****************
  5670 ;; Defined at:
  5671 ;;		line 109 in file "lcd.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  a               2    5[COMMON] PTR unsigned char 
  5674 ;;		 -> ftoa@buf(17), STR_13(14), STR_12(14), STR_11(14), 
  5675 ;;		 -> STR_10(15), STR_9(6), STR_8(6), mode_dht11_read@v_humi(4), 
  5676 ;;		 -> mode_dht11_read@v_temp(4), STR_7(9), STR_6(7), STR_5(5), 
  5677 ;;		 -> STR_4(16), STR_3(15), STR_2(17), STR_1(8), 
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  i               2   10[COMMON] int 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      void 
  5682 ;; Registers used:
  5683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5689 ;;      Params:         2       0       0       0       0
  5690 ;;      Locals:         2       0       0       0       0
  5691 ;;      Temps:          3       0       0       0       0
  5692 ;;      Totals:         7       0       0       0       0
  5693 ;;Total ram usage:        7 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    2
  5696 ;; This function calls:
  5697 ;;		_Lcd_Write_Char
  5698 ;; This function is called by:
  5699 ;;		_mode_welcome
  5700 ;;		_mode_voltage_read
  5701 ;;		_mode_light_level_check
  5702 ;;		_mode_dht11_read
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function _Lcd_Write_String
  5708  0B31                     _Lcd_Write_String:	
  5709                           
  5710                           ;lcd.c: 111: int i;
  5711                           ;lcd.c: 112: for(i=0;a[i]!='\0';i++)
  5712                           
  5713                           ;incstack = 0
  5714                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5715  0B31  01FA               	clrf	Lcd_Write_String@i
  5716  0B32  01FB               	clrf	Lcd_Write_String@i+1
  5717  0B33                     l2372:	
  5718  0B33  087A               	movf	Lcd_Write_String@i,w
  5719  0B34  0775               	addwf	Lcd_Write_String@a,w
  5720  0B35  00F8               	movwf	??_Lcd_Write_String+1
  5721  0B36  0876               	movf	Lcd_Write_String@a+1,w
  5722  0B37  00F7               	movwf	??_Lcd_Write_String
  5723  0B38  1803               	skipnc
  5724  0B39  0AF7               	incf	??_Lcd_Write_String,f
  5725  0B3A  1BFA               	btfsc	Lcd_Write_String@i,7
  5726  0B3B  03F7               	decf	??_Lcd_Write_String,f
  5727  0B3C  0877               	movf	??_Lcd_Write_String,w
  5728  0B3D  00F9               	movwf	??_Lcd_Write_String+2
  5729  0B3E  0879               	movf	??_Lcd_Write_String+2,w
  5730  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  5731  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  5732  0B41  00FF               	movwf	127
  5733  0B42  0878               	movf	??_Lcd_Write_String+1,w
  5734  0B43  0084               	movwf	4
  5735  0B44  118A  2002  158A   	fcall	stringtab
  5736  0B47  3A00               	xorlw	0
  5737  0B48  1903               	btfsc	3,2
  5738  0B49  0008               	return
  5739                           
  5740                           ;lcd.c: 113: Lcd_Write_Char(a[i]);
  5741  0B4A  087A               	movf	Lcd_Write_String@i,w
  5742  0B4B  0775               	addwf	Lcd_Write_String@a,w
  5743  0B4C  00F8               	movwf	??_Lcd_Write_String+1
  5744  0B4D  0876               	movf	Lcd_Write_String@a+1,w
  5745  0B4E  00F7               	movwf	??_Lcd_Write_String
  5746  0B4F  1803               	skipnc
  5747  0B50  0AF7               	incf	??_Lcd_Write_String,f
  5748  0B51  1BFA               	btfsc	Lcd_Write_String@i,7
  5749  0B52  03F7               	decf	??_Lcd_Write_String,f
  5750  0B53  0877               	movf	??_Lcd_Write_String,w
  5751  0B54  00F9               	movwf	??_Lcd_Write_String+2
  5752  0B55  0879               	movf	??_Lcd_Write_String+2,w
  5753  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  5754  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  5755  0B58  00FF               	movwf	127
  5756  0B59  0878               	movf	??_Lcd_Write_String+1,w
  5757  0B5A  0084               	movwf	4
  5758  0B5B  118A  2002  158A   	fcall	stringtab
  5759  0B5E  158A  22FE  158A   	fcall	_Lcd_Write_Char
  5760  0B61  3001               	movlw	1
  5761  0B62  07FA               	addwf	Lcd_Write_String@i,f
  5762  0B63  1803               	skipnc
  5763  0B64  0AFB               	incf	Lcd_Write_String@i+1,f
  5764  0B65  3000               	movlw	0
  5765  0B66  07FB               	addwf	Lcd_Write_String@i+1,f
  5766  0B67  2B33               	goto	l2372
  5767  0B68                     __end_of_Lcd_Write_String:	
  5768                           
  5769                           	psect	text28
  5770  0AFE                     __ptext28:	
  5771 ;; *************** function _Lcd_Write_Char *****************
  5772 ;; Defined at:
  5773 ;;		line 93 in file "lcd.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  a               1    wreg     unsigned char 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  a               1    4[COMMON] unsigned char 
  5778 ;;  y               1    3[COMMON] unsigned char 
  5779 ;;  temp            1    2[COMMON] unsigned char 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5789 ;;      Params:         0       0       0       0       0
  5790 ;;      Locals:         3       0       0       0       0
  5791 ;;      Temps:          1       0       0       0       0
  5792 ;;      Totals:         4       0       0       0       0
  5793 ;;Total ram usage:        4 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    1
  5796 ;; This function calls:
  5797 ;;		_Lcd_Port
  5798 ;; This function is called by:
  5799 ;;		_Lcd_Write_String
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _Lcd_Write_Char
  5805  0AFE                     _Lcd_Write_Char:	
  5806                           
  5807                           ;incstack = 0
  5808                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5809                           ;Lcd_Write_Char@a stored from wreg
  5810  0AFE  00F4               	movwf	Lcd_Write_Char@a
  5811                           
  5812                           ;lcd.c: 95: char temp,y;
  5813                           ;lcd.c: 96: temp = a&0x0F;
  5814  0AFF  0874               	movf	Lcd_Write_Char@a,w
  5815  0B00  390F               	andlw	15
  5816  0B01  00F1               	movwf	??_Lcd_Write_Char
  5817  0B02  0871               	movf	??_Lcd_Write_Char,w
  5818  0B03  00F2               	movwf	Lcd_Write_Char@temp
  5819                           
  5820                           ;lcd.c: 97: y = a&0xF0;
  5821  0B04  0874               	movf	Lcd_Write_Char@a,w
  5822  0B05  39F0               	andlw	240
  5823  0B06  00F1               	movwf	??_Lcd_Write_Char
  5824  0B07  0871               	movf	??_Lcd_Write_Char,w
  5825  0B08  00F3               	movwf	Lcd_Write_Char@y
  5826                           
  5827                           ;lcd.c: 98: RB1 = 1;
  5828  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  5829  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  5830  0B0B  1486               	bsf	6,1	;volatile
  5831                           
  5832                           ;lcd.c: 99: Lcd_Port(y>>4);
  5833  0B0C  0873               	movf	Lcd_Write_Char@y,w
  5834  0B0D  00F1               	movwf	??_Lcd_Write_Char
  5835  0B0E  3004               	movlw	4
  5836  0B0F                     u2515:	
  5837  0B0F  1003               	clrc
  5838  0B10  0CF1               	rrf	??_Lcd_Write_Char,f
  5839  0B11  3EFF               	addlw	-1
  5840  0B12  1D03               	skipz
  5841  0B13  2B0F               	goto	u2515
  5842  0B14  0871               	movf	??_Lcd_Write_Char,w
  5843  0B15  158A  21B5  158A   	fcall	_Lcd_Port
  5844                           
  5845                           ;lcd.c: 100: RB2 = 1;
  5846  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  5847  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  5848  0B1A  1506               	bsf	6,2	;volatile
  5849                           
  5850                           ;lcd.c: 101: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5851  0B1B  300D               	movlw	13
  5852  0B1C  00F1               	movwf	??_Lcd_Write_Char
  5853  0B1D                     u3597:	
  5854  0B1D  0BF1               	decfsz	??_Lcd_Write_Char,f
  5855  0B1E  2B1D               	goto	u3597
  5856                           
  5857                           ;lcd.c: 102: RB2 = 0;
  5858  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  5859  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  5860  0B21  1106               	bcf	6,2	;volatile
  5861                           
  5862                           ;lcd.c: 103: Lcd_Port(temp);
  5863  0B22  0872               	movf	Lcd_Write_Char@temp,w
  5864  0B23  158A  21B5  158A   	fcall	_Lcd_Port
  5865                           
  5866                           ;lcd.c: 104: RB2 = 1;
  5867  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5868  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5869  0B28  1506               	bsf	6,2	;volatile
  5870                           
  5871                           ;lcd.c: 105: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5872  0B29  300D               	movlw	13
  5873  0B2A  00F1               	movwf	??_Lcd_Write_Char
  5874  0B2B                     u3607:	
  5875  0B2B  0BF1               	decfsz	??_Lcd_Write_Char,f
  5876  0B2C  2B2B               	goto	u3607
  5877                           
  5878                           ;lcd.c: 106: RB2 = 0;
  5879  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  5880  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  5881  0B2F  1106               	bcf	6,2	;volatile
  5882  0B30  0008               	return
  5883  0B31                     __end_of_Lcd_Write_Char:	
  5884                           
  5885                           	psect	text29
  5886  0BE7                     __ptext29:	
  5887 ;; *************** function _Lcd_Set_Cursor *****************
  5888 ;; Defined at:
  5889 ;;		line 53 in file "lcd.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  a               1    wreg     unsigned char 
  5892 ;;  b               1    4[COMMON] unsigned char 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  a               1    7[COMMON] unsigned char 
  5895 ;;  temp            1   10[COMMON] unsigned char 
  5896 ;;  y               1    9[COMMON] unsigned char 
  5897 ;;  z               1    8[COMMON] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      void 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0, pclath, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5907 ;;      Params:         1       0       0       0       0
  5908 ;;      Locals:         4       0       0       0       0
  5909 ;;      Temps:          2       0       0       0       0
  5910 ;;      Totals:         7       0       0       0       0
  5911 ;;Total ram usage:        7 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    2
  5914 ;; This function calls:
  5915 ;;		_Lcd_Cmd
  5916 ;; This function is called by:
  5917 ;;		_mode_welcome
  5918 ;;		_mode_voltage_read
  5919 ;;		_mode_light_level_check
  5920 ;;		_mode_dht11_read
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _Lcd_Set_Cursor
  5926  0BE7                     _Lcd_Set_Cursor:	
  5927                           
  5928                           ;incstack = 0
  5929                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5930                           ;Lcd_Set_Cursor@a stored from wreg
  5931  0BE7  00F7               	movwf	Lcd_Set_Cursor@a
  5932                           
  5933                           ;lcd.c: 55: char temp,z,y;
  5934                           ;lcd.c: 56: if(a == 1)
  5935  0BE8  0377               	decf	Lcd_Set_Cursor@a,w
  5936  0BE9  1D03               	btfss	3,2
  5937  0BEA  2C09               	goto	l2356
  5938                           
  5939                           ;lcd.c: 57: {
  5940                           ;lcd.c: 58: temp = 0x80 + b - 1;
  5941  0BEB  0874               	movf	Lcd_Set_Cursor@b,w
  5942  0BEC  3E7F               	addlw	127
  5943  0BED  00F5               	movwf	??_Lcd_Set_Cursor
  5944  0BEE  0875               	movf	??_Lcd_Set_Cursor,w
  5945  0BEF  00FA               	movwf	Lcd_Set_Cursor@temp
  5946                           
  5947                           ;lcd.c: 59: z = temp>>4;
  5948  0BF0  087A               	movf	Lcd_Set_Cursor@temp,w
  5949  0BF1  00F5               	movwf	??_Lcd_Set_Cursor
  5950  0BF2  3004               	movlw	4
  5951  0BF3                     u3135:	
  5952  0BF3  1003               	clrc
  5953  0BF4  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5954  0BF5  3EFF               	addlw	-1
  5955  0BF6  1D03               	skipz
  5956  0BF7  2BF3               	goto	u3135
  5957  0BF8  0875               	movf	??_Lcd_Set_Cursor,w
  5958  0BF9  00F6               	movwf	??_Lcd_Set_Cursor+1
  5959  0BFA  0876               	movf	??_Lcd_Set_Cursor+1,w
  5960  0BFB  00F8               	movwf	Lcd_Set_Cursor@z
  5961                           
  5962                           ;lcd.c: 60: y = temp & 0x0F;
  5963  0BFC  087A               	movf	Lcd_Set_Cursor@temp,w
  5964  0BFD  390F               	andlw	15
  5965  0BFE  00F5               	movwf	??_Lcd_Set_Cursor
  5966  0BFF  0875               	movf	??_Lcd_Set_Cursor,w
  5967  0C00  00F9               	movwf	Lcd_Set_Cursor@y
  5968                           
  5969                           ;lcd.c: 61: Lcd_Cmd(z);
  5970  0C01  0878               	movf	Lcd_Set_Cursor@z,w
  5971  0C02  158A  219D  158A   	fcall	_Lcd_Cmd
  5972                           
  5973                           ;lcd.c: 62: Lcd_Cmd(y);
  5974  0C05  0879               	movf	Lcd_Set_Cursor@y,w
  5975  0C06  158A  219D         	fcall	_Lcd_Cmd
  5976                           
  5977                           ;lcd.c: 63: }
  5978  0C08  0008               	return
  5979  0C09                     l2356:	
  5980                           
  5981                           ;lcd.c: 64: else if(a == 2)
  5982  0C09  3002               	movlw	2
  5983  0C0A  0677               	xorwf	Lcd_Set_Cursor@a,w
  5984  0C0B  1D03               	btfss	3,2
  5985  0C0C  0008               	return
  5986                           
  5987                           ;lcd.c: 65: {
  5988                           ;lcd.c: 66: temp = 0xC0 + b - 1;
  5989  0C0D  0874               	movf	Lcd_Set_Cursor@b,w
  5990  0C0E  3EBF               	addlw	191
  5991  0C0F  00F5               	movwf	??_Lcd_Set_Cursor
  5992  0C10  0875               	movf	??_Lcd_Set_Cursor,w
  5993  0C11  00FA               	movwf	Lcd_Set_Cursor@temp
  5994                           
  5995                           ;lcd.c: 67: z = temp>>4;
  5996  0C12  087A               	movf	Lcd_Set_Cursor@temp,w
  5997  0C13  00F5               	movwf	??_Lcd_Set_Cursor
  5998  0C14  3004               	movlw	4
  5999  0C15                     u3155:	
  6000  0C15  1003               	clrc
  6001  0C16  0CF5               	rrf	??_Lcd_Set_Cursor,f
  6002  0C17  3EFF               	addlw	-1
  6003  0C18  1D03               	skipz
  6004  0C19  2C15               	goto	u3155
  6005  0C1A  0875               	movf	??_Lcd_Set_Cursor,w
  6006  0C1B  00F6               	movwf	??_Lcd_Set_Cursor+1
  6007  0C1C  0876               	movf	??_Lcd_Set_Cursor+1,w
  6008  0C1D  00F8               	movwf	Lcd_Set_Cursor@z
  6009                           
  6010                           ;lcd.c: 68: y = temp & 0x0F;
  6011  0C1E  087A               	movf	Lcd_Set_Cursor@temp,w
  6012  0C1F  390F               	andlw	15
  6013  0C20  00F5               	movwf	??_Lcd_Set_Cursor
  6014  0C21  0875               	movf	??_Lcd_Set_Cursor,w
  6015  0C22  00F9               	movwf	Lcd_Set_Cursor@y
  6016                           
  6017                           ;lcd.c: 69: Lcd_Cmd(z);
  6018  0C23  0878               	movf	Lcd_Set_Cursor@z,w
  6019  0C24  158A  219D  158A   	fcall	_Lcd_Cmd
  6020                           
  6021                           ;lcd.c: 70: Lcd_Cmd(y);
  6022  0C27  0879               	movf	Lcd_Set_Cursor@y,w
  6023  0C28  158A  219D         	fcall	_Lcd_Cmd
  6024  0C2A  0008               	return
  6025  0C2B                     __end_of_Lcd_Set_Cursor:	
  6026                           
  6027                           	psect	text30
  6028  094E                     __ptext30:	
  6029 ;; *************** function _Lcd_Clear *****************
  6030 ;; Defined at:
  6031 ;;		line 47 in file "lcd.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0, pclath, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6045 ;;      Params:         0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0
  6048 ;;      Totals:         0       0       0       0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    2
  6052 ;; This function calls:
  6053 ;;		_Lcd_Cmd
  6054 ;; This function is called by:
  6055 ;;		_mode_welcome
  6056 ;;		_mode_voltage_read
  6057 ;;		_mode_light_level_check
  6058 ;;		_mode_dht11_read
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           
  6063                           ;psect for function _Lcd_Clear
  6064  094E                     _Lcd_Clear:	
  6065                           
  6066                           ;lcd.c: 49: Lcd_Cmd(0);
  6067                           
  6068                           ;incstack = 0
  6069                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6070  094E  3000               	movlw	0
  6071  094F  158A  219D  158A   	fcall	_Lcd_Cmd
  6072                           
  6073                           ;lcd.c: 50: Lcd_Cmd(1);
  6074  0952  3001               	movlw	1
  6075  0953  158A  219D         	fcall	_Lcd_Cmd
  6076  0955  0008               	return
  6077  0956                     __end_of_Lcd_Clear:	
  6078                           
  6079                           	psect	text31
  6080  0986                     __ptext31:	
  6081 ;; *************** function _DHT11_init *****************
  6082 ;; Defined at:
  6083 ;;		line 11 in file "dht11.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6097 ;;      Params:         0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0
  6099 ;;      Temps:          2       0       0       0       0
  6100 ;;      Totals:         2       0       0       0       0
  6101 ;;Total ram usage:        2 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		_mode_dht11_read
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           
  6111                           ;psect for function _DHT11_init
  6112  0986                     _DHT11_init:	
  6113                           
  6114                           ;dht11.c: 13: TRISBbits.TRISB3 = 0;
  6115                           
  6116                           ;incstack = 0
  6117                           ; Regs used in _DHT11_init: [wreg]
  6118  0986  1683               	bsf	3,5	;RP0=1, select bank1
  6119  0987  1303               	bcf	3,6	;RP1=0, select bank1
  6120  0988  1186               	bcf	6,3	;volatile
  6121                           
  6122                           ;dht11.c: 14: PORTBbits.RB3 = 0;
  6123  0989  1283               	bcf	3,5	;RP0=0, select bank0
  6124  098A  1303               	bcf	3,6	;RP1=0, select bank0
  6125  098B  1186               	bcf	6,3	;volatile
  6126                           
  6127                           ;dht11.c: 15: _delay((unsigned long)((20)*(4000000/4000.0)));
  6128  098C  301A               	movlw	26
  6129  098D  00F1               	movwf	??_DHT11_init+1
  6130  098E  30F8               	movlw	248
  6131  098F  00F0               	movwf	??_DHT11_init
  6132  0990                     u3617:	
  6133  0990  0BF0               	decfsz	??_DHT11_init,f
  6134  0991  2990               	goto	u3617
  6135  0992  0BF1               	decfsz	??_DHT11_init+1,f
  6136  0993  2990               	goto	u3617
  6137  0994  0000               	nop
  6138                           
  6139                           ;dht11.c: 16: TRISBbits.TRISB3 = 1;
  6140  0995  1683               	bsf	3,5	;RP0=1, select bank1
  6141  0996  1303               	bcf	3,6	;RP1=0, select bank1
  6142  0997  1586               	bsf	6,3	;volatile
  6143                           
  6144                           ;dht11.c: 17: _delay((unsigned long)((13)*(4000000/4000000.0)));
  6145  0998  3004               	movlw	4
  6146  0999  00F0               	movwf	??_DHT11_init
  6147  099A                     u3627:	
  6148  099A  0BF0               	decfsz	??_DHT11_init,f
  6149  099B  299A               	goto	u3627
  6150  099C  0008               	return
  6151  099D                     __end_of_DHT11_init:	
  6152                           
  6153                           	psect	text32
  6154  02F0                     __ptext32:	
  6155 ;; *************** function _DHT11_ReadData *****************
  6156 ;; Defined at:
  6157 ;;		line 46 in file "dht11.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  hum             1    wreg     PTR int 
  6160 ;;		 -> mode_dht11_read@humi(2), 
  6161 ;;  dhum            1    0[COMMON] PTR int 
  6162 ;;		 -> mode_dht11_read@dhumi(2), 
  6163 ;;  temp            1    1[COMMON] PTR int 
  6164 ;;		 -> mode_dht11_read@temp(2), 
  6165 ;;  dtemp           1    2[COMMON] PTR int 
  6166 ;;		 -> mode_dht11_read@dtemp(2), 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  hum             1   10[BANK0 ] PTR int 
  6169 ;;		 -> mode_dht11_read@humi(2), 
  6170 ;;  j               2   11[BANK0 ] int 
  6171 ;;  i               2   15[BANK0 ] int 
  6172 ;;  bits           10    0[BANK0 ] int [5]
  6173 ;;  data            2   17[BANK0 ] int 
  6174 ;;  cont_read       2   13[BANK0 ] int 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  2    0[COMMON] int 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6184 ;;      Params:         3       0       0       0       0
  6185 ;;      Locals:         0      19       0       0       0
  6186 ;;      Temps:          6       0       0       0       0
  6187 ;;      Totals:         9      19       0       0       0
  6188 ;;Total ram usage:       28 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		_mode_dht11_read
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           
  6198                           ;psect for function _DHT11_ReadData
  6199  02F0                     _DHT11_ReadData:	
  6200                           
  6201                           ;incstack = 0
  6202                           ; Regs used in _DHT11_ReadData: [wreg-fsr0h+status,2+status,0+btemp+1]
  6203                           ;DHT11_ReadData@hum stored from wreg
  6204  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  6205  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  6206  02F2  00AA               	movwf	DHT11_ReadData@hum
  6207                           
  6208                           ;dht11.c: 47: int bits[5];
  6209                           ;dht11.c: 48: int data,cont_read;
  6210                           ;dht11.c: 50: for (int i=0; i < 5; i++){
  6211  02F3  01AF               	clrf	DHT11_ReadData@i
  6212  02F4  01B0               	clrf	DHT11_ReadData@i+1
  6213  02F5  0830               	movf	DHT11_ReadData@i+1,w
  6214  02F6  3A80               	xorlw	128
  6215  02F7  00FF               	movwf	127
  6216  02F8  3080               	movlw	128
  6217  02F9  027F               	subwf	127,w
  6218  02FA  1D03               	skipz
  6219  02FB  2AFE               	goto	u3265
  6220  02FC  3005               	movlw	5
  6221  02FD  022F               	subwf	DHT11_ReadData@i,w
  6222  02FE                     u3265:	
  6223  02FE  1803               	btfsc	3,0
  6224  02FF  2B89               	goto	l2486
  6225  0300                     l2442:	
  6226                           
  6227                           ;dht11.c: 51: data = 0;
  6228  0300  1283               	bcf	3,5	;RP0=0, select bank0
  6229  0301  1303               	bcf	3,6	;RP1=0, select bank0
  6230  0302  01B1               	clrf	DHT11_ReadData@data
  6231  0303  01B2               	clrf	DHT11_ReadData@data+1
  6232                           
  6233                           ;dht11.c: 52: for(int j=0;j<8;j++)
  6234  0304  01AB               	clrf	DHT11_ReadData@j
  6235  0305  01AC               	clrf	DHT11_ReadData@j+1
  6236  0306  082C               	movf	DHT11_ReadData@j+1,w
  6237  0307  3A80               	xorlw	128
  6238  0308  00FF               	movwf	127
  6239  0309  3080               	movlw	128
  6240  030A  027F               	subwf	127,w
  6241  030B  1D03               	skipz
  6242  030C  2B0F               	goto	u3275
  6243  030D  3008               	movlw	8
  6244  030E  022B               	subwf	DHT11_ReadData@j,w
  6245  030F                     u3275:	
  6246  030F  1803               	btfsc	3,0
  6247  0310  2B6B               	goto	l2480
  6248  0311                     l2448:	
  6249                           
  6250                           ;dht11.c: 53: {
  6251                           ;dht11.c: 54: cont_read = 0;
  6252  0311  1283               	bcf	3,5	;RP0=0, select bank0
  6253  0312  1303               	bcf	3,6	;RP1=0, select bank0
  6254  0313  01AD               	clrf	DHT11_ReadData@cont_read
  6255  0314  01AE               	clrf	DHT11_ReadData@cont_read+1
  6256  0315                     l223:	
  6257                           ;dht11.c: 55: while(PORTBbits.RB3 == 0){
  6258                           
  6259  0315  1986               	btfsc	6,3	;volatile
  6260  0316  2B27               	goto	l2458
  6261                           
  6262                           ;dht11.c: 56: cont_read ++;
  6263  0317  3001               	movlw	1
  6264  0318  07AD               	addwf	DHT11_ReadData@cont_read,f
  6265  0319  1803               	skipnc
  6266  031A  0AAE               	incf	DHT11_ReadData@cont_read+1,f
  6267  031B  3000               	movlw	0
  6268  031C  07AE               	addwf	DHT11_ReadData@cont_read+1,f
  6269                           
  6270                           ;dht11.c: 57: if (cont_read == 500){
  6271  031D  30F4               	movlw	244
  6272  031E  062D               	xorwf	DHT11_ReadData@cont_read,w
  6273  031F  1D03               	skipz
  6274  0320  2B15               	goto	l223
  6275  0321  032E               	decf	DHT11_ReadData@cont_read+1,w
  6276  0322  1D03               	btfss	3,2
  6277  0323  2B15               	goto	l223
  6278                           
  6279                           ;dht11.c: 58: return 0;
  6280  0324  01F0               	clrf	?_DHT11_ReadData
  6281  0325  01F1               	clrf	?_DHT11_ReadData+1
  6282  0326  0008               	return
  6283  0327                     l2458:	
  6284                           
  6285                           ;dht11.c: 59: }
  6286                           ;dht11.c: 60: }
  6287                           ;dht11.c: 61: _delay((unsigned long)((30)*(4000000/4000000.0)));
  6288  0327  3009               	movlw	9
  6289  0328  00F3               	movwf	??_DHT11_ReadData
  6290  0329                     u3637:	
  6291  0329  0BF3               	decfsz	??_DHT11_ReadData,f
  6292  032A  2B29               	goto	u3637
  6293  032B  2B2C               	nop2
  6294                           
  6295                           ;dht11.c: 62: if(PORTBbits.RB3 == 1) {
  6296  032C  1283               	bcf	3,5	;RP0=0, select bank0
  6297  032D  1303               	bcf	3,6	;RP1=0, select bank0
  6298  032E  1D86               	btfss	6,3	;volatile
  6299  032F  2B3F               	goto	l2464
  6300                           
  6301                           ;dht11.c: 63: data = ((data<<1)+1);
  6302  0330  0832               	movf	DHT11_ReadData@data+1,w
  6303  0331  00F4               	movwf	??_DHT11_ReadData+1
  6304  0332  0831               	movf	DHT11_ReadData@data,w
  6305  0333  00F3               	movwf	??_DHT11_ReadData
  6306  0334  1003               	clrc
  6307  0335  0DF3               	rlf	??_DHT11_ReadData,f
  6308  0336  0DF4               	rlf	??_DHT11_ReadData+1,f
  6309  0337  0873               	movf	??_DHT11_ReadData,w
  6310  0338  3E01               	addlw	1
  6311  0339  00B1               	movwf	DHT11_ReadData@data
  6312  033A  0874               	movf	??_DHT11_ReadData+1,w
  6313  033B  1803               	skipnc
  6314  033C  3E01               	addlw	1
  6315  033D  3E00               	addlw	0
  6316  033E  2B43               	goto	L3
  6317  033F                     l2464:	
  6318                           ;dht11.c: 64: }
  6319                           
  6320                           
  6321                           ;dht11.c: 65: else{
  6322                           ;dht11.c: 66: data = (data<<1);
  6323  033F  1003               	clrc
  6324  0340  0D31               	rlf	DHT11_ReadData@data,w
  6325  0341  00B1               	movwf	DHT11_ReadData@data
  6326  0342  0D32               	rlf	DHT11_ReadData@data+1,w
  6327  0343                     L3:	
  6328  0343  00B2               	movwf	DHT11_ReadData@data+1
  6329                           
  6330                           ;dht11.c: 67: }
  6331                           ;dht11.c: 68: cont_read = 0;
  6332  0344  01AD               	clrf	DHT11_ReadData@cont_read
  6333  0345  01AE               	clrf	DHT11_ReadData@cont_read+1
  6334  0346                     l230:	
  6335                           ;dht11.c: 69: while(PORTBbits.RB3 == 1){
  6336                           
  6337  0346  1D86               	btfss	6,3	;volatile
  6338  0347  2B5A               	goto	l2476
  6339                           
  6340                           ;dht11.c: 70: cont_read++;
  6341  0348  3001               	movlw	1
  6342  0349  07AD               	addwf	DHT11_ReadData@cont_read,f
  6343  034A  1803               	skipnc
  6344  034B  0AAE               	incf	DHT11_ReadData@cont_read+1,f
  6345  034C  3000               	movlw	0
  6346  034D  07AE               	addwf	DHT11_ReadData@cont_read+1,f
  6347                           
  6348                           ;dht11.c: 71: if (cont_read == 5000){
  6349  034E  3088               	movlw	136
  6350  034F  062D               	xorwf	DHT11_ReadData@cont_read,w
  6351  0350  3013               	movlw	19
  6352  0351  1903               	skipnz
  6353  0352  062E               	xorwf	DHT11_ReadData@cont_read+1,w
  6354  0353  1D03               	btfss	3,2
  6355  0354  2B46               	goto	l230
  6356                           
  6357                           ;dht11.c: 72: return -1;
  6358  0355  30FF               	movlw	255
  6359  0356  00F0               	movwf	?_DHT11_ReadData
  6360  0357  30FF               	movlw	255
  6361  0358  00F1               	movwf	?_DHT11_ReadData+1
  6362  0359  0008               	return
  6363  035A                     l2476:	
  6364  035A  3001               	movlw	1
  6365  035B  07AB               	addwf	DHT11_ReadData@j,f
  6366  035C  1803               	skipnc
  6367  035D  0AAC               	incf	DHT11_ReadData@j+1,f
  6368  035E  3000               	movlw	0
  6369  035F  07AC               	addwf	DHT11_ReadData@j+1,f
  6370  0360  082C               	movf	DHT11_ReadData@j+1,w
  6371  0361  3A80               	xorlw	128
  6372  0362  00FF               	movwf	127
  6373  0363  3080               	movlw	128
  6374  0364  027F               	subwf	127,w
  6375  0365  1D03               	skipz
  6376  0366  2B69               	goto	u3335
  6377  0367  3008               	movlw	8
  6378  0368  022B               	subwf	DHT11_ReadData@j,w
  6379  0369                     u3335:	
  6380  0369  1C03               	skipc
  6381  036A  2B11               	goto	l2448
  6382  036B                     l2480:	
  6383                           
  6384                           ;dht11.c: 73: }
  6385                           ;dht11.c: 74: }
  6386                           ;dht11.c: 75: }
  6387                           ;dht11.c: 76: bits[i] = data;
  6388  036B  1283               	bcf	3,5	;RP0=0, select bank0
  6389  036C  1303               	bcf	3,6	;RP1=0, select bank0
  6390  036D  082F               	movf	DHT11_ReadData@i,w
  6391  036E  00F3               	movwf	??_DHT11_ReadData
  6392  036F  0773               	addwf	??_DHT11_ReadData,w
  6393  0370  3E20               	addlw	(low (DHT11_ReadData@bits| 0))& (0+255)
  6394  0371  0084               	movwf	4
  6395  0372  0831               	movf	DHT11_ReadData@data,w
  6396  0373  1383               	bcf	3,7	;select IRP bank0
  6397  0374  0080               	movwf	0
  6398  0375  0A84               	incf	4,f
  6399  0376  0832               	movf	DHT11_ReadData@data+1,w
  6400  0377  0080               	movwf	0
  6401  0378  3001               	movlw	1
  6402  0379  07AF               	addwf	DHT11_ReadData@i,f
  6403  037A  1803               	skipnc
  6404  037B  0AB0               	incf	DHT11_ReadData@i+1,f
  6405  037C  3000               	movlw	0
  6406  037D  07B0               	addwf	DHT11_ReadData@i+1,f
  6407  037E  0830               	movf	DHT11_ReadData@i+1,w
  6408  037F  3A80               	xorlw	128
  6409  0380  00FF               	movwf	127
  6410  0381  3080               	movlw	128
  6411  0382  027F               	subwf	127,w
  6412  0383  1D03               	skipz
  6413  0384  2B87               	goto	u3345
  6414  0385  3005               	movlw	5
  6415  0386  022F               	subwf	DHT11_ReadData@i,w
  6416  0387                     u3345:	
  6417  0387  1C03               	skipc
  6418  0388  2B00               	goto	l2442
  6419  0389                     l2486:	
  6420                           
  6421                           ;dht11.c: 77: }
  6422                           ;dht11.c: 78: if ((bits[0] + bits[1] + bits[2] + bits[3]) == bits[4])
  6423  0389  1283               	bcf	3,5	;RP0=0, select bank0
  6424  038A  1303               	bcf	3,6	;RP1=0, select bank0
  6425  038B  0824               	movf	DHT11_ReadData@bits+4,w
  6426  038C  0722               	addwf	DHT11_ReadData@bits+2,w
  6427  038D  00F3               	movwf	??_DHT11_ReadData
  6428  038E  0825               	movf	DHT11_ReadData@bits+5,w
  6429  038F  1803               	skipnc
  6430  0390  0A25               	incf	DHT11_ReadData@bits+5,w
  6431  0391  0723               	addwf	DHT11_ReadData@bits+3,w
  6432  0392  00F4               	movwf	??_DHT11_ReadData+1
  6433  0393  0826               	movf	DHT11_ReadData@bits+6,w
  6434  0394  0773               	addwf	??_DHT11_ReadData,w
  6435  0395  00F5               	movwf	??_DHT11_ReadData+2
  6436  0396  0827               	movf	DHT11_ReadData@bits+7,w
  6437  0397  1803               	skipnc
  6438  0398  0A27               	incf	DHT11_ReadData@bits+7,w
  6439  0399  0774               	addwf	??_DHT11_ReadData+1,w
  6440  039A  00F6               	movwf	??_DHT11_ReadData+3
  6441  039B  0820               	movf	DHT11_ReadData@bits,w
  6442  039C  0775               	addwf	??_DHT11_ReadData+2,w
  6443  039D  00F7               	movwf	??_DHT11_ReadData+4
  6444  039E  0821               	movf	DHT11_ReadData@bits+1,w
  6445  039F  1803               	skipnc
  6446  03A0  0A21               	incf	DHT11_ReadData@bits+1,w
  6447  03A1  0776               	addwf	??_DHT11_ReadData+3,w
  6448  03A2  00F8               	movwf	??_DHT11_ReadData+5
  6449  03A3  0829               	movf	DHT11_ReadData@bits+9,w
  6450  03A4  0678               	xorwf	??_DHT11_ReadData+5,w
  6451  03A5  1D03               	skipz
  6452  03A6  2BA9               	goto	u3355
  6453  03A7  0828               	movf	DHT11_ReadData@bits+8,w
  6454  03A8  0677               	xorwf	??_DHT11_ReadData+4,w
  6455  03A9                     u3355:	
  6456  03A9  1D03               	skipz
  6457  03AA  2BCD               	goto	l2496
  6458                           
  6459                           ;dht11.c: 79: {
  6460                           ;dht11.c: 80: *hum = bits[0];
  6461  03AB  082A               	movf	DHT11_ReadData@hum,w
  6462  03AC  0084               	movwf	4
  6463  03AD  0820               	movf	DHT11_ReadData@bits,w
  6464  03AE  1383               	bcf	3,7	;select IRP bank0
  6465  03AF  0080               	movwf	0
  6466  03B0  0A84               	incf	4,f
  6467  03B1  0821               	movf	DHT11_ReadData@bits+1,w
  6468  03B2  0080               	movwf	0
  6469                           
  6470                           ;dht11.c: 81: *dhum = bits[1];
  6471  03B3  0870               	movf	DHT11_ReadData@dhum,w
  6472  03B4  0084               	movwf	4
  6473  03B5  0822               	movf	DHT11_ReadData@bits+2,w
  6474  03B6  0080               	movwf	0
  6475  03B7  0A84               	incf	4,f
  6476  03B8  0823               	movf	DHT11_ReadData@bits+3,w
  6477  03B9  0080               	movwf	0
  6478                           
  6479                           ;dht11.c: 82: *temp = bits[2];
  6480  03BA  0871               	movf	DHT11_ReadData@temp,w
  6481  03BB  0084               	movwf	4
  6482  03BC  0824               	movf	DHT11_ReadData@bits+4,w
  6483  03BD  0080               	movwf	0
  6484  03BE  0A84               	incf	4,f
  6485  03BF  0825               	movf	DHT11_ReadData@bits+5,w
  6486  03C0  0080               	movwf	0
  6487                           
  6488                           ;dht11.c: 83: *dtemp = bits[3];
  6489  03C1  0872               	movf	DHT11_ReadData@dtemp,w
  6490  03C2  0084               	movwf	4
  6491  03C3  0826               	movf	DHT11_ReadData@bits+6,w
  6492  03C4  0080               	movwf	0
  6493  03C5  0A84               	incf	4,f
  6494  03C6  0827               	movf	DHT11_ReadData@bits+7,w
  6495  03C7  0080               	movwf	0
  6496                           
  6497                           ;dht11.c: 84: return 1;
  6498  03C8  3001               	movlw	1
  6499  03C9  00F0               	movwf	?_DHT11_ReadData
  6500  03CA  3000               	movlw	0
  6501  03CB  00F1               	movwf	?_DHT11_ReadData+1
  6502                           
  6503                           ;dht11.c: 85: }
  6504  03CC  0008               	return
  6505  03CD                     l2496:	
  6506                           
  6507                           ;dht11.c: 86: else return 2;
  6508  03CD  3002               	movlw	2
  6509  03CE  00F0               	movwf	?_DHT11_ReadData
  6510  03CF  3000               	movlw	0
  6511  03D0  00F1               	movwf	?_DHT11_ReadData+1
  6512  03D1  0008               	return
  6513  03D2                     __end_of_DHT11_ReadData:	
  6514                           
  6515                           	psect	text33
  6516  0BA4                     __ptext33:	
  6517 ;; *************** function _DHT11_CheckResponse *****************
  6518 ;; Defined at:
  6519 ;;		line 20 in file "dht11.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  cont            2    2[COMMON] unsigned int 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  2    0[COMMON] int 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         2       0       0       0       0
  6534 ;;      Locals:         2       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0
  6536 ;;      Totals:         4       0       0       0       0
  6537 ;;Total ram usage:        4 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_mode_dht11_read
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           
  6547                           ;psect for function _DHT11_CheckResponse
  6548  0BA4                     _DHT11_CheckResponse:	
  6549                           
  6550                           ;dht11.c: 21: unsigned int cont = 0;
  6551                           
  6552                           ;incstack = 0
  6553                           ; Regs used in _DHT11_CheckResponse: [wreg+status,2+status,0]
  6554  0BA4  01F2               	clrf	DHT11_CheckResponse@cont
  6555  0BA5  01F3               	clrf	DHT11_CheckResponse@cont+1
  6556  0BA6                     l204:	
  6557                           ;dht11.c: 22: while(PORTBbits.RB3 ==1){
  6558                           
  6559  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  6560  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  6561  0BA8  1D86               	btfss	6,3	;volatile
  6562  0BA9  2BBA               	goto	l2412
  6563                           
  6564                           ;dht11.c: 23: cont++;
  6565  0BAA  3001               	movlw	1
  6566  0BAB  07F2               	addwf	DHT11_CheckResponse@cont,f
  6567  0BAC  1803               	skipnc
  6568  0BAD  0AF3               	incf	DHT11_CheckResponse@cont+1,f
  6569  0BAE  3000               	movlw	0
  6570  0BAF  07F3               	addwf	DHT11_CheckResponse@cont+1,f
  6571                           
  6572                           ;dht11.c: 24: if (cont == 500){
  6573  0BB0  30F4               	movlw	244
  6574  0BB1  0672               	xorwf	DHT11_CheckResponse@cont,w
  6575  0BB2  1D03               	skipz
  6576  0BB3  2BA6               	goto	l204
  6577  0BB4  0373               	decf	DHT11_CheckResponse@cont+1,w
  6578  0BB5  1D03               	btfss	3,2
  6579  0BB6  2BA6               	goto	l204
  6580                           
  6581                           ;dht11.c: 25: return 0;
  6582  0BB7  01F0               	clrf	?_DHT11_CheckResponse
  6583  0BB8  01F1               	clrf	?_DHT11_CheckResponse+1
  6584  0BB9  0008               	return
  6585  0BBA                     l2412:	
  6586                           
  6587                           ;dht11.c: 26: }
  6588                           ;dht11.c: 27: }
  6589                           ;dht11.c: 28: cont = 0;
  6590  0BBA  01F2               	clrf	DHT11_CheckResponse@cont
  6591  0BBB  01F3               	clrf	DHT11_CheckResponse@cont+1
  6592  0BBC                     l209:	
  6593                           ;dht11.c: 29: while(PORTBbits.RB3 == 0 ){
  6594                           
  6595  0BBC  1986               	btfsc	6,3	;volatile
  6596  0BBD  2BCE               	goto	l2422
  6597                           
  6598                           ;dht11.c: 30: cont++;
  6599  0BBE  3001               	movlw	1
  6600  0BBF  07F2               	addwf	DHT11_CheckResponse@cont,f
  6601  0BC0  1803               	skipnc
  6602  0BC1  0AF3               	incf	DHT11_CheckResponse@cont+1,f
  6603  0BC2  3000               	movlw	0
  6604  0BC3  07F3               	addwf	DHT11_CheckResponse@cont+1,f
  6605                           
  6606                           ;dht11.c: 31: if (cont == 500){
  6607  0BC4  30F4               	movlw	244
  6608  0BC5  0672               	xorwf	DHT11_CheckResponse@cont,w
  6609  0BC6  1D03               	skipz
  6610  0BC7  2BBC               	goto	l209
  6611  0BC8  0373               	decf	DHT11_CheckResponse@cont+1,w
  6612  0BC9  1D03               	btfss	3,2
  6613  0BCA  2BBC               	goto	l209
  6614                           
  6615                           ;dht11.c: 32: return 0;
  6616  0BCB  01F0               	clrf	?_DHT11_CheckResponse
  6617  0BCC  01F1               	clrf	?_DHT11_CheckResponse+1
  6618  0BCD  0008               	return
  6619  0BCE                     l2422:	
  6620                           
  6621                           ;dht11.c: 33: }
  6622                           ;dht11.c: 34: }
  6623                           ;dht11.c: 35: cont = 0;
  6624  0BCE  01F2               	clrf	DHT11_CheckResponse@cont
  6625  0BCF  01F3               	clrf	DHT11_CheckResponse@cont+1
  6626  0BD0                     l213:	
  6627                           ;dht11.c: 36: while(PORTBbits.RB3 == 1){
  6628                           
  6629  0BD0  1D86               	btfss	6,3	;volatile
  6630  0BD1  2BE2               	goto	l2432
  6631                           
  6632                           ;dht11.c: 37: cont++;
  6633  0BD2  3001               	movlw	1
  6634  0BD3  07F2               	addwf	DHT11_CheckResponse@cont,f
  6635  0BD4  1803               	skipnc
  6636  0BD5  0AF3               	incf	DHT11_CheckResponse@cont+1,f
  6637  0BD6  3000               	movlw	0
  6638  0BD7  07F3               	addwf	DHT11_CheckResponse@cont+1,f
  6639                           
  6640                           ;dht11.c: 38: if (cont == 500){
  6641  0BD8  30F4               	movlw	244
  6642  0BD9  0672               	xorwf	DHT11_CheckResponse@cont,w
  6643  0BDA  1D03               	skipz
  6644  0BDB  2BD0               	goto	l213
  6645  0BDC  0373               	decf	DHT11_CheckResponse@cont+1,w
  6646  0BDD  1D03               	btfss	3,2
  6647  0BDE  2BD0               	goto	l213
  6648                           
  6649                           ;dht11.c: 39: return 0;
  6650  0BDF  01F0               	clrf	?_DHT11_CheckResponse
  6651  0BE0  01F1               	clrf	?_DHT11_CheckResponse+1
  6652  0BE1  0008               	return
  6653  0BE2                     l2432:	
  6654                           
  6655                           ;dht11.c: 40: }
  6656                           ;dht11.c: 41: }
  6657                           ;dht11.c: 43: return 1;
  6658  0BE2  3001               	movlw	1
  6659  0BE3  00F0               	movwf	?_DHT11_CheckResponse
  6660  0BE4  3000               	movlw	0
  6661  0BE5  00F1               	movwf	?_DHT11_CheckResponse+1
  6662  0BE6  0008               	return
  6663  0BE7                     __end_of_DHT11_CheckResponse:	
  6664                           
  6665                           	psect	text34
  6666  0A2D                     __ptext34:	
  6667 ;; *************** function _button_scan *****************
  6668 ;; Defined at:
  6669 ;;		line 78 in file "main.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  2    0[COMMON] unsigned int 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6683 ;;      Params:         2       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0
  6685 ;;      Temps:          2       0       0       0       0
  6686 ;;      Totals:         4       0       0       0       0
  6687 ;;Total ram usage:        4 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_main
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           
  6697                           ;psect for function _button_scan
  6698  0A2D                     _button_scan:	
  6699                           
  6700                           ;main.c: 79: static unsigned int key_up = 1;
  6701                           ;main.c: 80: if(key_up==1&&RB0 == 1){
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _button_scan: [wreg+status,2+status,0]
  6705  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  6706  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  6707  0A2F  0360               	decf	button_scan@key_up,w
  6708  0A30  0461               	iorwf	button_scan@key_up+1,w
  6709  0A31  1903               	btfsc	3,2
  6710  0A32  1C06               	btfss	6,0	;volatile
  6711  0A33  2A48               	goto	l77
  6712                           
  6713                           ;main.c: 82: _delay((unsigned long)((10)*(4000000/4000.0)));
  6714  0A34  300D               	movlw	13
  6715  0A35  00F3               	movwf	??_button_scan+1
  6716  0A36  30FB               	movlw	251
  6717  0A37  00F2               	movwf	??_button_scan
  6718  0A38                     u3647:	
  6719  0A38  0BF2               	decfsz	??_button_scan,f
  6720  0A39  2A38               	goto	u3647
  6721  0A3A  0BF3               	decfsz	??_button_scan+1,f
  6722  0A3B  2A38               	goto	u3647
  6723  0A3C  2A3D               	nop2
  6724                           
  6725                           ;main.c: 84: key_up = 0;
  6726  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  6727  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  6728  0A3F  01E0               	clrf	button_scan@key_up
  6729  0A40  01E1               	clrf	button_scan@key_up+1
  6730                           
  6731                           ;main.c: 85: if(RB0==1)return 1;
  6732  0A41  1C06               	btfss	6,0	;volatile
  6733  0A42  2A4E               	goto	l2558
  6734  0A43  3001               	movlw	1
  6735  0A44  00F0               	movwf	?_button_scan
  6736  0A45  3000               	movlw	0
  6737  0A46  00F1               	movwf	?_button_scan+1
  6738  0A47  0008               	return
  6739  0A48                     l77:	
  6740                           ;main.c: 86: }
  6741                           
  6742                           
  6743                           ;main.c: 87: else if(RB0==0)key_up = 1;
  6744  0A48  1806               	btfsc	6,0	;volatile
  6745  0A49  2A4E               	goto	l2558
  6746  0A4A  3001               	movlw	1
  6747  0A4B  00E0               	movwf	button_scan@key_up
  6748  0A4C  3000               	movlw	0
  6749  0A4D  00E1               	movwf	button_scan@key_up+1
  6750  0A4E                     l2558:	
  6751                           
  6752                           ;main.c: 88: return 0;
  6753  0A4E  01F0               	clrf	?_button_scan
  6754  0A4F  01F1               	clrf	?_button_scan+1
  6755  0A50  0008               	return
  6756  0A51                     __end_of_button_scan:	
  6757                           
  6758                           	psect	text35
  6759  0C2B                     __ptext35:	
  6760 ;; *************** function _Lcd_Init *****************
  6761 ;; Defined at:
  6762 ;;		line 74 in file "lcd.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;		None
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg, status,2, status,0, pclath, cstack
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6776 ;;      Params:         0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0
  6778 ;;      Temps:          2       0       0       0       0
  6779 ;;      Totals:         2       0       0       0       0
  6780 ;;Total ram usage:        2 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:    2
  6783 ;; This function calls:
  6784 ;;		_Lcd_Cmd
  6785 ;;		_Lcd_Port
  6786 ;; This function is called by:
  6787 ;;		_main
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           
  6792                           ;psect for function _Lcd_Init
  6793  0C2B                     _Lcd_Init:	
  6794                           
  6795                           ;lcd.c: 76: Lcd_Port(0x00);
  6796                           
  6797                           ;incstack = 0
  6798                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6799  0C2B  3000               	movlw	0
  6800  0C2C  158A  21B5  158A   	fcall	_Lcd_Port
  6801                           
  6802                           ;lcd.c: 77: _delay((unsigned long)((20)*(4000000/4000.0)));
  6803  0C2F  301A               	movlw	26
  6804  0C30  00F5               	movwf	??_Lcd_Init+1
  6805  0C31  30F8               	movlw	248
  6806  0C32  00F4               	movwf	??_Lcd_Init
  6807  0C33                     u3657:	
  6808  0C33  0BF4               	decfsz	??_Lcd_Init,f
  6809  0C34  2C33               	goto	u3657
  6810  0C35  0BF5               	decfsz	??_Lcd_Init+1,f
  6811  0C36  2C33               	goto	u3657
  6812  0C37  0000               	nop
  6813                           
  6814                           ;lcd.c: 78: Lcd_Cmd(0x03);
  6815  0C38  3003               	movlw	3
  6816  0C39  158A  219D  158A   	fcall	_Lcd_Cmd
  6817                           
  6818                           ;lcd.c: 79: _delay((unsigned long)((5)*(4000000/4000.0)));
  6819  0C3C  3007               	movlw	7
  6820  0C3D  00F5               	movwf	??_Lcd_Init+1
  6821  0C3E  307D               	movlw	125
  6822  0C3F  00F4               	movwf	??_Lcd_Init
  6823  0C40                     u3667:	
  6824  0C40  0BF4               	decfsz	??_Lcd_Init,f
  6825  0C41  2C40               	goto	u3667
  6826  0C42  0BF5               	decfsz	??_Lcd_Init+1,f
  6827  0C43  2C40               	goto	u3667
  6828                           
  6829                           ;lcd.c: 80: Lcd_Cmd(0x03);
  6830  0C44  3003               	movlw	3
  6831  0C45  158A  219D  158A   	fcall	_Lcd_Cmd
  6832                           
  6833                           ;lcd.c: 81: _delay((unsigned long)((11)*(4000000/4000.0)));
  6834  0C48  300F               	movlw	15
  6835  0C49  00F5               	movwf	??_Lcd_Init+1
  6836  0C4A  3047               	movlw	71
  6837  0C4B  00F4               	movwf	??_Lcd_Init
  6838  0C4C                     u3677:	
  6839  0C4C  0BF4               	decfsz	??_Lcd_Init,f
  6840  0C4D  2C4C               	goto	u3677
  6841  0C4E  0BF5               	decfsz	??_Lcd_Init+1,f
  6842  0C4F  2C4C               	goto	u3677
  6843  0C50  2C51               	nop2
  6844                           
  6845                           ;lcd.c: 82: Lcd_Cmd(0x03);
  6846  0C51  3003               	movlw	3
  6847  0C52  158A  219D  158A   	fcall	_Lcd_Cmd
  6848                           
  6849                           ;lcd.c: 84: Lcd_Cmd(0x02);
  6850  0C55  3002               	movlw	2
  6851  0C56  158A  219D  158A   	fcall	_Lcd_Cmd
  6852                           
  6853                           ;lcd.c: 85: Lcd_Cmd(0x02);
  6854  0C59  3002               	movlw	2
  6855  0C5A  158A  219D  158A   	fcall	_Lcd_Cmd
  6856                           
  6857                           ;lcd.c: 86: Lcd_Cmd(0x08);
  6858  0C5D  3008               	movlw	8
  6859  0C5E  158A  219D  158A   	fcall	_Lcd_Cmd
  6860                           
  6861                           ;lcd.c: 87: Lcd_Cmd(0x00);
  6862  0C61  3000               	movlw	0
  6863  0C62  158A  219D  158A   	fcall	_Lcd_Cmd
  6864                           
  6865                           ;lcd.c: 88: Lcd_Cmd(0x0C);
  6866  0C65  300C               	movlw	12
  6867  0C66  158A  219D  158A   	fcall	_Lcd_Cmd
  6868                           
  6869                           ;lcd.c: 89: Lcd_Cmd(0x00);
  6870  0C69  3000               	movlw	0
  6871  0C6A  158A  219D  158A   	fcall	_Lcd_Cmd
  6872                           
  6873                           ;lcd.c: 90: Lcd_Cmd(0x06);
  6874  0C6D  3006               	movlw	6
  6875  0C6E  158A  219D         	fcall	_Lcd_Cmd
  6876  0C70  0008               	return
  6877  0C71                     __end_of_Lcd_Init:	
  6878                           
  6879                           	psect	text36
  6880  099D                     __ptext36:	
  6881 ;; *************** function _Lcd_Cmd *****************
  6882 ;; Defined at:
  6883 ;;		line 38 in file "lcd.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  a               1    wreg     unsigned char 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  a               1    3[COMMON] unsigned char 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      void 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0, pclath, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6897 ;;      Params:         0       0       0       0       0
  6898 ;;      Locals:         1       0       0       0       0
  6899 ;;      Temps:          2       0       0       0       0
  6900 ;;      Totals:         3       0       0       0       0
  6901 ;;Total ram usage:        3 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; Hardware stack levels required when called:    1
  6904 ;; This function calls:
  6905 ;;		_Lcd_Port
  6906 ;; This function is called by:
  6907 ;;		_Lcd_Clear
  6908 ;;		_Lcd_Set_Cursor
  6909 ;;		_Lcd_Init
  6910 ;;		_Lcd_Shift_Right
  6911 ;;		_Lcd_Shift_Left
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           
  6916                           ;psect for function _Lcd_Cmd
  6917  099D                     _Lcd_Cmd:	
  6918                           
  6919                           ;incstack = 0
  6920                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6921                           ;Lcd_Cmd@a stored from wreg
  6922  099D  00F3               	movwf	Lcd_Cmd@a
  6923                           
  6924                           ;lcd.c: 40: RB1 = 0;
  6925  099E  1283               	bcf	3,5	;RP0=0, select bank0
  6926  099F  1303               	bcf	3,6	;RP1=0, select bank0
  6927  09A0  1086               	bcf	6,1	;volatile
  6928                           
  6929                           ;lcd.c: 41: Lcd_Port(a);
  6930  09A1  0873               	movf	Lcd_Cmd@a,w
  6931  09A2  158A  21B5  158A   	fcall	_Lcd_Port
  6932                           
  6933                           ;lcd.c: 42: RB2 = 1;
  6934  09A5  1283               	bcf	3,5	;RP0=0, select bank0
  6935  09A6  1303               	bcf	3,6	;RP1=0, select bank0
  6936  09A7  1506               	bsf	6,2	;volatile
  6937                           
  6938                           ;lcd.c: 43: _delay((unsigned long)((4)*(4000000/4000.0)));
  6939  09A8  3006               	movlw	6
  6940  09A9  00F2               	movwf	??_Lcd_Cmd+1
  6941  09AA  3030               	movlw	48
  6942  09AB  00F1               	movwf	??_Lcd_Cmd
  6943  09AC                     u3687:	
  6944  09AC  0BF1               	decfsz	??_Lcd_Cmd,f
  6945  09AD  29AC               	goto	u3687
  6946  09AE  0BF2               	decfsz	??_Lcd_Cmd+1,f
  6947  09AF  29AC               	goto	u3687
  6948  09B0  0000               	nop
  6949                           
  6950                           ;lcd.c: 44: RB2 = 0;
  6951  09B1  1283               	bcf	3,5	;RP0=0, select bank0
  6952  09B2  1303               	bcf	3,6	;RP1=0, select bank0
  6953  09B3  1106               	bcf	6,2	;volatile
  6954  09B4  0008               	return
  6955  09B5                     __end_of_Lcd_Cmd:	
  6956                           
  6957                           	psect	text37
  6958  09B5                     __ptext37:	
  6959 ;; *************** function _Lcd_Port *****************
  6960 ;; Defined at:
  6961 ;;		line 16 in file "lcd.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  a               1    wreg     unsigned char 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  a               1    0[COMMON] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      void 
  6968 ;; Registers used:
  6969 ;;		wreg
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6975 ;;      Params:         0       0       0       0       0
  6976 ;;      Locals:         1       0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0
  6978 ;;      Totals:         1       0       0       0       0
  6979 ;;Total ram usage:        1 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_Lcd_Cmd
  6985 ;;		_Lcd_Init
  6986 ;;		_Lcd_Write_Char
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           
  6991                           ;psect for function _Lcd_Port
  6992  09B5                     _Lcd_Port:	
  6993                           
  6994                           ;incstack = 0
  6995                           ; Regs used in _Lcd_Port: [wreg]
  6996                           ;Lcd_Port@a stored from wreg
  6997  09B5  00F0               	movwf	Lcd_Port@a
  6998                           
  6999                           ;lcd.c: 18: if(a & 1)
  7000  09B6  1C70               	btfss	Lcd_Port@a,0
  7001  09B7  29BC               	goto	l154
  7002                           
  7003                           ;lcd.c: 19: RB4 = 1;
  7004  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  7005  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  7006  09BA  1606               	bsf	6,4	;volatile
  7007  09BB  29BF               	goto	l155
  7008  09BC                     l154:	
  7009                           
  7010                           ;lcd.c: 20: else
  7011                           ;lcd.c: 21: RB4 = 0;
  7012  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  7013  09BD  1303               	bcf	3,6	;RP1=0, select bank0
  7014  09BE  1206               	bcf	6,4	;volatile
  7015  09BF                     l155:	
  7016                           
  7017                           ;lcd.c: 23: if(a & 2)
  7018  09BF  1CF0               	btfss	Lcd_Port@a,1
  7019  09C0  29C3               	goto	l156
  7020                           
  7021                           ;lcd.c: 24: RB5 = 1;
  7022  09C1  1686               	bsf	6,5	;volatile
  7023  09C2  29C4               	goto	l157
  7024  09C3                     l156:	
  7025                           
  7026                           ;lcd.c: 25: else
  7027                           ;lcd.c: 26: RB5 = 0;
  7028  09C3  1286               	bcf	6,5	;volatile
  7029  09C4                     l157:	
  7030                           
  7031                           ;lcd.c: 28: if(a & 4)
  7032  09C4  1D70               	btfss	Lcd_Port@a,2
  7033  09C5  29C8               	goto	l158
  7034                           
  7035                           ;lcd.c: 29: RB6 = 1;
  7036  09C6  1706               	bsf	6,6	;volatile
  7037  09C7  29C9               	goto	l159
  7038  09C8                     l158:	
  7039                           
  7040                           ;lcd.c: 30: else
  7041                           ;lcd.c: 31: RB6 = 0;
  7042  09C8  1306               	bcf	6,6	;volatile
  7043  09C9                     l159:	
  7044                           
  7045                           ;lcd.c: 33: if(a & 8)
  7046  09C9  1DF0               	btfss	Lcd_Port@a,3
  7047  09CA  29CD               	goto	l160
  7048                           
  7049                           ;lcd.c: 34: RB7 = 1;
  7050  09CB  1786               	bsf	6,7	;volatile
  7051  09CC  0008               	return
  7052  09CD                     l160:	
  7053                           
  7054                           ;lcd.c: 35: else
  7055                           ;lcd.c: 36: RB7 = 0;
  7056  09CD  1386               	bcf	6,7	;volatile
  7057  09CE  0008               	return
  7058  09CF                     __end_of_Lcd_Port:	
  7059                           
  7060                           	psect	text38
  7061  0966                     __ptext38:	
  7062 ;; *************** function _InitApp *****************
  7063 ;; Defined at:
  7064 ;;		line 22 in file "user.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;		None
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7078 ;;      Params:         0       0       0       0       0
  7079 ;;      Locals:         0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0
  7081 ;;      Totals:         0       0       0       0       0
  7082 ;;Total ram usage:        0 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_main
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           
  7092                           ;psect for function _InitApp
  7093  0966                     _InitApp:	
  7094                           
  7095                           ;user.c: 24: ANSEL=0x00;
  7096                           
  7097                           ;incstack = 0
  7098                           ; Regs used in _InitApp: [wreg+status,2]
  7099  0966  1683               	bsf	3,5	;RP0=1, select bank1
  7100  0967  1303               	bcf	3,6	;RP1=0, select bank1
  7101  0968  019B               	clrf	27	;volatile
  7102                           
  7103                           ;user.c: 25: ANSELbits.ANS0 =1;
  7104  0969  141B               	bsf	27,0	;volatile
  7105                           
  7106                           ;user.c: 26: ANSELbits.ANS1 =1;
  7107  096A  149B               	bsf	27,1	;volatile
  7108                           
  7109                           ;user.c: 27: TRISAbits.TRISA0 = 1;
  7110  096B  1405               	bsf	5,0	;volatile
  7111                           
  7112                           ;user.c: 28: TRISAbits.TRISA1 = 1;
  7113  096C  1485               	bsf	5,1	;volatile
  7114                           
  7115                           ;user.c: 29: TRISAbits.TRISA2 = 0;
  7116  096D  1105               	bcf	5,2	;volatile
  7117                           
  7118                           ;user.c: 30: TRISB = 0x01;
  7119  096E  3001               	movlw	1
  7120  096F  0086               	movwf	6	;volatile
  7121  0970  0008               	return
  7122  0971                     __end_of_InitApp:	
  7123  007E                     btemp	set	126	;btemp
  7124  007E                     wtemp0	set	126


Data Sizes:
    Strings     157
    Constant    40
    Data        2
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     64      66
    BANK1            80      0      17
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> mode_voltage_read@status(BANK0[2]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 4
		 -> mode_dht11_read@v_humi(BANK0[4]), mode_dht11_read@v_temp(BANK0[4]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 4
		 -> mode_dht11_read@v_humi(BANK0[4]), mode_dht11_read@v_temp(BANK0[4]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 4
		 -> mode_dht11_read@v_humi(BANK0[4]), mode_dht11_read@v_temp(BANK0[4]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 4
		 -> mode_dht11_read@v_humi(BANK0[4]), mode_dht11_read@v_temp(BANK0[4]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_14(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    DHT11_ReadData@dtemp	PTR int  size(1) Largest target is 2
		 -> mode_dht11_read@dtemp(BANK0[2]), 

    DHT11_ReadData@temp	PTR int  size(1) Largest target is 2
		 -> mode_dht11_read@temp(BANK0[2]), 

    DHT11_ReadData@dhum	PTR int  size(1) Largest target is 2
		 -> mode_dht11_read@dhumi(BANK0[2]), 

    DHT11_ReadData@hum	PTR int  size(1) Largest target is 2
		 -> mode_dht11_read@humi(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[14]), 
		 -> STR_10(CODE[15]), STR_9(CODE[6]), STR_8(CODE[6]), mode_dht11_read@v_humi(BANK0[4]), 
		 -> mode_dht11_read@v_temp(BANK0[4]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[5]), 
		 -> STR_4(CODE[16]), STR_3(CODE[15]), STR_2(CODE[17]), STR_1(CODE[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 4
		 -> mode_dht11_read@v_humi(BANK0[4]), mode_dht11_read@v_temp(BANK0[4]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    mode_voltage_read@value	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _main->_mode_light_level_check
    _mode_welcome->_Lcd_Write_String
    _mode_voltage_read->___lwtoft
    _voltage_read->___lwdiv
    _ftoa->___lltoft
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___ftsub->___ftadd
    ___ftsub->___lltoft
    ___ftadd->___ftpack
    ___ftmul->___lwtoft
    ___lwtoft->_voltage_read
    _mode_light_level_check->_Lcd_Write_String
    _light_level_check->___lwdiv
    _mode_dht11_read->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_mode_voltage_read
    _mode_voltage_read->_ftoa
    _ftoa->___fttol
    _sprintf->___llmod
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftmul->___lwtoft
    ___lwtoft->_voltage_read
    _mode_light_level_check->_light_level_check
    _mode_dht11_read->_DHT11_ReadData
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   32350
                                             59 BANK0      5     5      0
                            _InitApp
                           _Lcd_Init
                        _button_scan
                    _mode_dht11_read
             _mode_light_level_check
                  _mode_voltage_read
                       _mode_welcome
 ---------------------------------------------------------------------------------
 (1) _mode_welcome                                         0     0      0    2550
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _mode_voltage_read                                    8     8      0   19645
                                             51 BANK0      8     8      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___ftmul
                           ___lwtoft
                               _ftoa
                       _voltage_read
 ---------------------------------------------------------------------------------
 (2) _voltage_read                                         9     7      2    1026
                                              8 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            ___lwdiv
                        _analog_read
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                14    10      4   11193
                                             37 BANK0     14    10      4
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             34    25      9    1998
                                             10 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     348
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     287
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     290
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2203
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     380
                                             23 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3233
                                              7 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3038
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2652
                                              7 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
                       _voltage_read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6     264
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2156
                                             11 COMMON     3     0      3
                                              6 BANK0      1     1      0
                           ___ftpack
                       _voltage_read (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _mode_light_level_check                               2     2      0    3666
                                             12 COMMON     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                  _light_level_check
 ---------------------------------------------------------------------------------
 (2) _light_level_check                                   10     8      2    1027
                                              8 COMMON     2     0      2
                                              0 BANK0      8     8      0
                            ___lwdiv
                        _analog_read
 ---------------------------------------------------------------------------------
 (3) _analog_read                                          5     3      2     237
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _mode_dht11_read                                     19    19      0    6244
                                             19 BANK0     19    19      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                         _DHT11_init
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1900
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1421
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     287
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     674
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1292
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1148
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _DHT11_init                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                      28    25      3    1214
                                              0 COMMON     9     6      3
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  4     2      2      72
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _button_scan                                          4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _button_scan
   _mode_dht11_read
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_init
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _mode_light_level_check
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _light_level_check
       ___lwdiv
       _analog_read
   _mode_voltage_read
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _voltage_read (ARG)
           ___lwdiv
           _analog_read
       _voltage_read (ARG)
         ___lwdiv
         _analog_read
     ___lwtoft
       ___ftpack
       _voltage_read (ARG)
         ___lwdiv
         _analog_read
     _ftoa
       ___ftge
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _voltage_read (ARG)
             ___lwdiv
             _analog_read
         _voltage_read (ARG)
           ___lwdiv
           _analog_read
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _voltage_read (ARG)
               ___lwdiv
               _analog_read
           _voltage_read (ARG)
             ___lwdiv
             _analog_read
       ___lltoft
         ___ftpack
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
     _voltage_read
       ___lwdiv
       _analog_read
   _mode_welcome
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      11       7       21.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      12        0.0%
ABS                  0      0      61       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Apr 21 19:18:09 2020

             __end_of_mode_voltage_read 0E08                                       pc 0002  
                                    l62 0F53                                      l65 0F61  
                                    l67 0F66                                      l84 0ABF  
                                    l68 0F6B                                      l77 0A48  
                                    fsr 0004                     ___wmul@multiplicand 0072  
                          ___ftadd@exp1 0026                            ___ftadd@exp2 0025  
                          ___ftadd@sign 0024                                     l204 0BA6  
                                   l116 054F                                     l213 0BD0  
                                   l230 0346                                     l118 054B  
                                   l223 0315                                     l160 09CD  
                                   l209 0BBC                                     l154 09BC  
                                   l155 09BF                                     l156 09C3  
                                   l157 09C4                                     l261 0698  
                                   l158 09C8                                     l159 09C9  
                                   l264 06B4                                     l535 0FDF  
                                   l367 0A16                                     l536 0FE7  
                                   l528 0FCA                                     l627 0159  
                                   l647 0F13                                     l559 047A  
               voltage_read@sum_voltage 0022                                     _RA2 002A  
                                   _RB0 0030                                     _RB1 0031  
                                   _RB2 0032                                     _RB4 0034  
                                   _RB5 0035                                     _RB6 0036  
                                   _RB7 0037                                     fsr0 0004  
                                   indf 0000                            __CFG_FOSC$XT 0000  
                   __size_of_DHT11_init 0017                            __CFG_LVP$OFF 0000  
                                  l2110 0775                                    l2102 073A  
                                  l2120 078F                                    l2112 0779  
                                  l2106 0754                                    l2130 07EA  
                                  l2044 061F                                    l2052 0651  
                                  l2142 0E56                                    l2126 07DD  
                                  l2070 069F                                    l2062 0661  
                                  l2038 060E                                    l2160 0236  
                                  l2216 09F5                                    l2064 0693  
                                  l2128 05F0                                    l2138 0E2F  
                                  l2226 00FF                                    l2066 069A  
                                  l2412 0BBA                                    l2340 0DA1  
                                  l2332 0D7B                                    l2252 014E  
                                  l2244 0131                                    l2092 06EE  
                                  l2076 06C6                                    l2308 0D1E  
                                  l2422 0BCE                                    l2510 0A6A  
                                  l2190 02B3                                    l2182 029B  
                                  l2166 024C                                    l2254 015C  
                                  l2246 0141                                    l2086 06E8  
                                  l2318 0D4C                                    l2432 0BE2  
                                  l2264 0ECA                                    l2600 0CB1  
                                  l2442 0300                                    l2274 0EE9  
                                  l2194 02C3                                    l2178 028B  
                                  l2258 016A                                    l2098 0722  
                                  l2356 0C09                                    l2372 0B33  
                                  l1900 0E75                                    l1812 0A0E  
                                  l2622 0552                                    l1830 03FB  
                                  l1910 0EAD                                    l1902 0E85  
                                  l1806 00E3                                    l2464 033F  
                                  l2480 036B                                    l2448 0311  
                                  l2632 057A                                    l1760 0F9C  
                                  l1840 0411                                    l2296 0A7A  
                                  l2384 01A8                                    l2458 0327  
                                  l1834 0402                                    l2298 0A8C  
                                  l1914 0EBA                                    l1930 0CF7  
                                  l2722 0F7B                                    l2476 035A  
                                  l2644 05C9                                    l1764 0FA3  
                                  l1860 044C                                    l1852 042B  
                                  l1924 0CC9                                    l2558 0A4E  
                                  l2486 0389                                    l1950 0B7E  
                                  l2638 05A2                                    l1774 0FCF  
                                  l1766 0FAF                                    l1870 046A  
                                  l1862 0451                                    l1926 0CD9  
                                  l1934 0D04                                    l2662 0F44  
                                  l2496 03CD                                    l1960 0B9F  
                                  l2648 05D9                                    l1776 0FD9  
                                  l1768 0FB4                                    l1880 049E  
                                  l1872 0476                                    l1864 0455  
                                  l2680 0F89                                    l2594 0C9C  
                                  l1890 04C1                                    l1858 0440  
                                  l2674 0F70                                    l1956 0B94  
                                  l1948 0B70                                    l1972 0AD2  
                                  l1876 048C                                    l1974 0AE0  
                                  l1982 0AF9                                    l2678 0F74  
                                  l1978 0AEE                                    _ADFM 04FF  
                                  _ADON 00F8                                    STR_1 00B7  
                                  STR_2 003A                                    STR_3 006A  
                                  STR_4 004B                                    STR_5 00D2  
                                  STR_6 00BF                                    STR_7 00AE  
                                  STR_8 00CC                                    STR_9 00C6  
                                  u2125 0441                                    u3005 0150  
                                  u3105 0D79                                    u3115 0D9F  
                                  u2155 0456                                    u2405 0B7F  
                                  u2325 0CCD                                    u3135 0BF3  
                                  u2415 0B8B                                    u2095 042C  
                                  u2255 0E79                                    u2425 0B95  
                                  u2185 046B                                    u3065 0A7F  
                                  u2345 0CE7                                    u3155 0C15  
                                  u2515 0B0F                                    u2275 0E87  
                                  u2355 0CF8                                    u1805 0FA8  
                                  u2285 0E9C                                    u3085 0D1C  
                                  u3335 0369                                    u2455 0AD5  
                                  u2295 0EAE                                    u2615 06F1  
                                  u3095 0D4A                                    u3345 0387  
                                  u3265 02FE                                    u2385 0B73  
                                  u3505 0549                                    u1825 0FC3  
                                  u2625 0718                                    u3355 03A9  
                                  u3275 030F                                    u2475 0AE6  
                                  u2731 0E22                                    u2732 0E23  
                                  u2485 0AEF                                    u1845 0FD2  
                                  u2733 0E28                                    u2805 026A  
                                  u2645 0731                                    u2734 0E29  
                                  u3607 0B2B                                    u2751 0E49  
                                  u2655 074B                                    u2752 0E4A  
                                  u3617 0990                                    u2753 0E4F  
                                  u2665 0765                                    u2754 0E50  
                                  u3627 099A                                    u3475 0522  
                                  u2835 029C                                    u3637 0329  
                                  u3485 052F                                    u1885 0FEE  
                                  u2845 02A4                                    u3557 0F3B  
                                  u3647 0A38                                    u3495 053C  
                                  u1975 0A17                                    u2695 079A  
                                  u3567 0F8F                                    u3657 0C33  
                                  u2945 0106                                    u1985 0A1E  
                                  u3577 0D2C                                    u3667 0C40  
                                  u3587 0AB7                                    u2795 0258  
                                  u3677 0C4C                                    u3597 0B1D  
                                  u2885 02C4                                    u3687 09AC  
                                  u2895 02CC                                    u2975 0132  
               DHT11_ReadData@cont_read 002D                       ?_Lcd_Write_String 0075  
                                  _main 0F29                                    _ftoa 0173  
                          ___ftpack@arg 0070                                    _itoa 0A51  
                          ___ftpack@exp 0073                                    btemp 007E  
                                  _utoa 0EC3                                    start 0000  
                    ??_Lcd_Write_String 0077                        ??_DHT11_ReadData 0073  
                       __end_of_Lcd_Cmd 09B5                     DHT11_ReadData@dtemp 0072  
                          ___ftmul@cntr 0035                            ___ftmul@sign 0036  
                       __end_of_InitApp 0971                            ___fttol@exp1 0044  
                          ___fttol@lval 0040                __size_of_mode_dht11_read 0111  
                 __size_of_voltage_read 0050                                   _ADCS0 00FE  
                                 _ADCS1 00FF                                   _ADCS2 04FE  
                                 ?_main 0070                                   ?_ftoa 0045  
                                 ?_itoa 0024                         __end_of___ftadd 04D8  
                                 STR_10 005B                                   STR_11 0087  
                                 STR_12 0079                                   STR_13 0095  
                                 STR_14 00A3                           __CFG_WDTE$OFF 0000  
                       __end_of___ftneg 095E                                   _ANSEL 009B  
                       __end_of___lldiv 0EC3                                   ?_utoa 0078  
                       __end_of___ftmul 02F0                         __end_of___llmod 0D0D  
                       __end_of___ftsub 0A0C                         __end_of___fttol 0173  
                       __end_of___lwdiv 0BA4                         __end_of___lwmod 0AFE  
                                 _VCFG0 04FC                                   _VCFG1 04FD  
               __size_of_Lcd_Set_Cursor 0044                                   _TRISB 0086  
                          ?_button_scan 0070                            ___lltoft@exp 007D  
                       __end_of_dpowers 003A                         __end_of_isdigit 00E5  
                         ___ftpack@sign 0074                                   ftoa@f 0045  
                                 ftoa@l 004E                                   pclath 000A  
                                 utoa@c 0022                                   utoa@v 0020  
                                 status 0003                                   wtemp0 007E  
                       __end_of_sprintf 07EF                     voltage_read@voltage 0020  
                  __size_of_analog_read 002C                        __end_of_Lcd_Init 0C71  
        light_level_check@ldr_value_178 0022                        __end_of_Lcd_Port 09CF  
                          _voltage_read 0D0D                         __initialization 07EF  
                          __end_of_main 0F94                            __end_of_ftoa 021E  
            __size_of_mode_voltage_read 0056                            __end_of_itoa 0A76  
                          __end_of_utoa 0F29                                  ??_main 005B  
                                ??_ftoa 0049                           ___fttol@sign1 003F  
                                ??_itoa 007D                                  ??_utoa 007C  
                    __size_of_Lcd_Clear 0008                        ___llmod@dividend 0024  
                                _ADRESH 001E                                  _ADRESL 009E  
                   _DHT11_CheckResponse 0BA4                        __end_of___ftpack 1000  
                    light_level_check@i 0026                        __end_of___lltoft 0AA0  
                      __end_of___lwtoft 0986                               ??_Lcd_Cmd 0071  
               __size_of_Lcd_Write_Char 0033                               ??_InitApp 0070  
                        __CFG_PWRTE$OFF 0000                            ??_DHT11_init 0070  
               DHT11_CheckResponse@cont 0072                                  ___ftge 0E08  
                                ___wmul 0A0C                               ??___ftadd 0020  
                             ??___ftneg 0073                               ??___lldiv 0078  
                  ?_DHT11_CheckResponse 0070                               ??___ftmul 002D  
                             ??___llmod 0028                               ??___ftsub 007E  
                             ??___fttol 003B                               ??___lwdiv 0074  
                             ??___lwmod 0074                ??_mode_light_level_check 007C  
                                ftoa@cp 0052                   ___ftmul@f3_as_product 0032  
                                itoa@cp 0028                               ??_isdigit 0070  
                     ??_mode_dht11_read 0033                      __end_of_DHT11_init 099D  
                             ??_sprintf 0033                         Lcd_Set_Cursor@a 0077  
                       Lcd_Set_Cursor@b 0074                           ?_mode_welcome 0070  
                       Lcd_Set_Cursor@y 0079                         Lcd_Set_Cursor@z 0078  
               __end_of__initialization 07FD                              ___ftadd@f1 0078  
                            ___ftadd@f2 007B                              ___ftge@ff1 0070  
                            ___ftge@ff2 0073                       __end_of_Lcd_Clear 0956  
                            ___ftneg@f1 0070                              ___ftmul@f1 0027  
                            ___ftmul@f2 002A                       DHT11_ReadData@hum 002A  
                            ___ftsub@f1 002A                              ___ftsub@f2 0027  
                            ___fttol@f1 0037                          __pcstackCOMMON 0070  
                          __pidataBANK0 094C                   ??_DHT11_CheckResponse 0072  
                            ___lltoft@c 0078                              ___lwtoft@c 007B  
                        _Lcd_Set_Cursor 0BE7                               ?_Lcd_Init 0070  
                             ?_Lcd_Port 0070                          ??_mode_welcome 007C  
                  __size_of_button_scan 0024                            sprintf@width 003F  
                            __pbssBANK1 00A0                              __pmaintext 0F29  
                               ?___ftge 0070                                 ?___wmul 0070  
             __size_of_Lcd_Write_String 0037                               ?___ftpack 0070  
                __end_of_Lcd_Set_Cursor 0C2B         __size_of_mode_light_level_check 004E  
                             ?___lltoft 0078                               ?___lwtoft 007B  
                               _GO_DONE 00FA                              ??_Lcd_Init 0074  
                            ??_Lcd_Port 0070                              __stringtab 0002  
                        _Lcd_Write_Char 0AFE                                 _Lcd_Cmd 099D  
                     _light_level_check 0D5D                                 _InitApp 0966  
                    ?_light_level_check 0078                         __size_of___ftge 005D  
                               ___ftadd 03D2                                 ___ftneg 0956  
                               ___lldiv 0E65                     ??_light_level_check 007A  
                       __size_of___wmul 0021                                 ___ftmul 021E  
                               ___llmod 0CBF                                 ___ftsub 09EC  
                               ___fttol 00E5                                 ___lwdiv 0B68  
                               ___lwmod 0ACC                              ??___ftpack 0075  
                             _ANSELbits 009B                         ?_Lcd_Set_Cursor 0074  
                            ??___lltoft 007C                                 __ptext1 09CF  
                               __ptext2 0DB2                                 __ptext3 0D0D  
                               __ptext4 0173                                 __ptext5 05E9  
                               __ptext6 00D7                                 __ptext7 0A0C  
                               __ptext8 0CBF                                 __ptext9 0E65  
                            ??___lwtoft 0026                                 _dpowers 0012  
                               _isdigit 00D7                                 _sprintf 05E9  
                               clrloop0 095F                  __end_of_Lcd_Write_Char 0B31  
             __end_of_light_level_check 0DB2                    end_of_initialization 07FD  
                               ftoa@buf 00A0                                 ftoa@rem 004A  
                _mode_light_level_check 0C71                           ??_analog_read 0072  
                               itoa@buf 0029                                 itoa@val 0024  
                       ___lldiv@divisor 0070                         ___lldiv@counter 007D  
                   mode_dht11_read@humi 0044                     mode_dht11_read@temp 0042  
                             Lcd_Port@a 0070                         _mode_dht11_read 04D8  
                  __end_of_mode_welcome 09EC                                 utoa@buf 0023  
                               utoa@val 0078                               _PORTBbits 0006  
               __size_of_DHT11_ReadData 00E2                               _TRISAbits 0085  
                             _TRISBbits 0086                         ?_Lcd_Write_Char 0070  
                     Lcd_Write_String@a 0075                       Lcd_Write_String@i 007A  
                    DHT11_ReadData@data 0031                      DHT11_ReadData@bits 0020  
                    DHT11_ReadData@dhum 0070                             ___ftmul@exp 0031  
                    DHT11_ReadData@temp 0071                     __end_of_analog_read 0ACC  
                             _Lcd_Clear 094E                          __end_of___ftge 0E65  
                        __end_of___wmul 0A2D                        _Lcd_Write_String 0B31  
                   start_initialization 07EF                              ftoa@status 0048  
            __size_of_light_level_check 0055                       __size_of_Lcd_Init 0046  
                     __size_of_Lcd_Port 001A                         ___llmod@divisor 0020  
                       ___llmod@counter 0029             __end_of_DHT11_CheckResponse 0BE7  
               __end_of_mode_dht11_read 05E9                              ?_Lcd_Clear 0070  
                              ??___ftge 0076                                ??___wmul 0074  
                           __pdataBANK0 0060                         Lcd_Write_Char@a 0074  
                       Lcd_Write_Char@y 0073                       __size_of___ftpack 006C  
                         ??_button_scan 0072                       __size_of___lltoft 002A  
                             ___latbits 0001                       __size_of___lwtoft 0015  
                         __pcstackBANK0 0020              light_level_check@ldr_value 0020  
                     button_scan@key_up 0060                                ?_Lcd_Cmd 0070  
                           sprintf@flag 0038                             _analog_read 0AA0  
                           sprintf@prec 0041                                ?_InitApp 0070  
                 __size_of_mode_welcome 001D                           ?_voltage_read 0078  
                      ___lwdiv@dividend 0072                        ??_Lcd_Set_Cursor 0075  
                              ?___ftadd 0078                                ?___ftneg 0070  
                              ?___lldiv 0070                                ?___ftmul 0027  
                              ?___llmod 0020                                ?___ftsub 0027  
                              ?___fttol 0037                                ?___lwdiv 0070  
                              ?___lwmod 0070                          _DHT11_ReadData 02F0  
                             __pstrings 0002                                ?_isdigit 0070  
               ?_mode_light_level_check 0070                        ___lwdiv@quotient 0075  
                              ?_sprintf 002A  light_level_check@sum_light_level_value 0024  
                          _mode_welcome 09CF                mode_light_level_check@t1 007C  
                   __end_of_button_scan 0A51                          ___wmul@product 0074  
                             clear_ram0 095E                        ?_mode_dht11_read 0070  
                        ??_voltage_read 007A                                Lcd_Cmd@a 0073  
                           ??_Lcd_Clear 0074                 mode_voltage_read@status 0055  
                __end_of_DHT11_ReadData 03D2                              _ADCON0bits 001F  
                           __stringbase 0011                     analog_read@ad_value 0073  
                     ___wmul@multiplier 0070                        ??_Lcd_Write_Char 0071  
        __end_of_mode_light_level_check 0CBF                                _Lcd_Init 0C2B  
                              _Lcd_Port 09B5                __end_of_Lcd_Write_String 0B68  
                      __size_of_Lcd_Cmd 0018                        __size_of_InitApp 000B  
                            _DHT11_init 0986                           voltage_read@i 0024  
                       ?_DHT11_ReadData 0070                        __size_of___ftadd 0106  
                      __size_of___ftneg 0008                        __size_of___lldiv 005E  
                      __size_of___ftmul 00D2                        __size_of___llmod 004E  
                      __size_of___ftsub 0020                        __size_of___fttol 008E  
                      __size_of___lwdiv 003C                        __size_of___lwmod 0032  
                              ___ftpack 0F94                         DHT11_ReadData@i 002F  
                       DHT11_ReadData@j 002B                      __end_of__stringtab 0012  
                              ___lltoft 0A76                             _isdigit$600 0070  
                              ___lwtoft 0971                              sprintf@val 003A  
                           _button_scan 0A2D                        __size_of_isdigit 000E  
                       ___lwdiv@divisor 0070                         ___lwdiv@counter 0077  
                              __ptext10 0A76                                __ptext11 00E5  
                              __ptext20 0D5D                                __ptext12 09EC  
                              __ptext21 0AA0                                __ptext13 03D2  
                              __ptext30 094E                                __ptext22 04D8  
                              __ptext14 0956                                __ptext31 0986  
                              __ptext23 0A51                                __ptext15 021E  
                              __ptext32 02F0                                __ptext24 0EC3  
                              __ptext16 0E08                                __ptext33 0BA4  
                              __ptext25 0ACC                                __ptext17 0971  
                              __ptext34 0A2D                                __ptext26 0B68  
                              __ptext18 0F94                                __ptext35 0C2B  
                              __ptext27 0B31                                __ptext19 0C71  
                              __ptext36 099D                                __ptext28 0AFE  
                              __ptext37 09B5                                __ptext29 0BE7  
                              __ptext38 0966                        __size_of_sprintf 0206  
                         __size_of_main 006B                           __size_of_ftoa 00AB  
                         __size_of_itoa 0025                           __size_of_utoa 0066  
                   mode_voltage_read@t1 0057                  mode_voltage_read@value 005A  
                    analog_read@channel 0070                   mode_dht11_read@v_humi 003A  
                 mode_dht11_read@v_temp 0036                    __end_of_voltage_read 0D5D  
                              itoa@base 0026                                isdigit@c 0071  
                    Lcd_Write_Char@temp 0072                               sprintf@ap 0039  
                             sprintf@sp 003E                        ___lwmod@dividend 0072  
                          ?_analog_read 0070                        ___lldiv@dividend 0074  
                             stringcode 000C                             ?_DHT11_init 0070  
          __size_of_DHT11_CheckResponse 0043                    mode_dht11_read@dhumi 003E  
                  mode_dht11_read@dtemp 0040                       _mode_voltage_read 0DB2  
                    Lcd_Set_Cursor@temp 007A                                utoa@base 007A  
                    ?_mode_voltage_read 0070                                sprintf@c 0043  
                              sprintf@f 002A                        ___lldiv@quotient 0079  
                       ___lwmod@divisor 0070                    main@mode_choose_flag 005E  
                       ___lwmod@counter 0075                                stringdir 000C  
                              stringtab 0002                     ??_mode_voltage_read 0053  
